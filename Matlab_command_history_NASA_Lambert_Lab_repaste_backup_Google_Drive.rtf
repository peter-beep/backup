{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 %-- 1/28/20, 9:53 PM --%\
T = readtable('First6-Data.csv');\
T = readtable('BinaryMismatchData.csv');\
T_1 = readtable('First6-Data.csv');\
T_binary = readtable('BinaryMismatchData.csv');\
T_6 = readtable('First6-Data.csv');\
T_middle = readtable('Mid6-Data.csv');\
T_last14 = readtable('Last14Data.csv')\
T_duplicagd = readtable('First6-ExtraDuplicateControl-Data.csv')\
T_duplicate = readtable('First6-ExtraDuplicateControl-Data.csv')\
T_KMMK = readtable('KMMK-Data.csv')\
T_mid6 = readtable('Mid6-Data.csv')\
t = "ACAGAGGTAAAATGATCGAT ";\
T_first6 = readtable('First6-Data.csv')\
T_first6(:,8)\
T_first6(:,8)(1)\
T_first6(:,8)[1]\
length(T_first6(:,8))\
size(T_first6(:,8))\
size(T_first6(:,8))(1,1)\
(T_first6(:,8))(1,1)\
find(T_first6(:,8)==1)\
find(isequal(T_first6(:,8),1))\
min(T_first6(:,11))\
T_first6(:,11)\
T_first6\{5,11\}\
T_first6\{3,11\}\
csvwrite('data.csv', data.M);\
csvwrite('data.csv', data);\
csvwrite('data.csv', data.');\
csvwrite('data.csv', data.mat);\
csvwrite('data.csv', data.m);\
csvwrite('data.csv', HIRF11.mat);\
FileData = load('HIRF11.mat');\
csvwrite('FileData.csv', FileData.M()\
csvwrite('FileData.csv', FileData.M)\
csvwrite('FileData.csv', FileData.mat)\
csvwrite('FileData.csv', FileData)\
csvwrite('FileData.csv', FileData.m)\
csvwrite('FileData.csv', FileData.dataToWrite)\
tempTable = table()\
temp = load('HIRF5.mat')\
tempTable = table();\
tempTable.x = temp.xData;\
tempTable.x = temp.data;\
tempTable.y = temp.data;\
writetable(tempTable, 'file.csv')\
temp_HIRF14 = load('HIRF14.mat')\
tempTable_HIRF14 = table();\
tempTable_HIRF14.x = temp.xData;\
tempTable_HIRF14.x = temp.data;\
tempTable_HIRF14.y = temp.data;\
writetable(tempTable_HIRF14, 'Set2_HIRF14.csv')\
temp_HIRF22 = load('HIRF22.mat')\
tempTable_HIRF22.x = temp.xData;\
tempTable_HIRF22.x = temp.data;\
tempTable_HIRF22.y = temp.data;\
writetable(tempTable_HIRF22, 'Set3_HIRF22.csv')\
tempTable_HIRF22= table();\
tempTable_HIRF22.x = temp.data;\
tempTable_HIRF22.y = temp.data;\
writetable(tempTable_HIRF22, 'Set3_HIRF22.csv')\
%-- 2/2/20, 6:07 PM --%\
T_first6 = readtable('First6-Data.csv')\
T_first6(:,1)\
size(T_first6(:,1))\
T_first6(1,1)\
substr(T_first6(1,1), 1,21)\
subs(T_first6(1,1), 1,21)\
extractBetween(T_first6(1,1),1,21)\
T_first6(1,1)\
b = table2cell(T_first6)\
b(1,1)\
test = string(b(1,1))\
substr(test,1,21)\
subs(test,1,21)\
extractBetween(test,1,21)\
extractBetween(test,1,20)\
extractBetween(test,22,40)\
length(extractBetween(test,22,40))\
size(extractBetween(test,22,40))\
x=extractBetween(test,22,40)\
x(1)\
x(2)\
x(1,1)\
x(2,1)\
isstring(x)\
x = str(x)\
length(x)\
T_first6 = readtable('First6-Data.csv')\
Table = T_first6\
Table(1,1)\
x=Table(1,1)\
x(1,1)\
x(1,1)\{1,length(x(1,1))\}\
length(x(1,1))\
height(x(1,1))\
x(1,1)\
TEST = x(1,1)\
TEST\{1\}\
TEST(1)\
TEST(1,4)\
TEST_2 = x(1:3,1)\
TEST_2 = Table(1:3,1)\
TEST_2(1)\
TEST_2(1,1)\
TEST_2(1,1)(1,1)\
T_first6 = table2cell(T_first6);\
T_first6(1)\
x = T_first6(1)\
x = \{'line'\}\
x_new = string(x)\
x = \{T_first6(1)\}\
x\
x = T_first6(1)\
T_first6\{1\}\
T_first6\{1\}(1,1)\
T_first6\{1\}(1,21)\
T_first6\{1\}(1,19)\
x = extractBetween(T_first6\{1\},1,19)\
x = extractBetween(T_first6\{1\},1,23)\
x = extractBetween(T_first6\{1\},1,21)\
x = extractBetween(T_first6\{1\},1,20)\
x\{1\}\
length(x\{1\})\
x = extractBetween(T_first6\{1\},22,40)\
length(T_first6\{1\})\
x = extractBetween(T_first6\{1\},22,41)\
x\{1\}\
x\{1\}(1,3)\
str_new = convertCharsToStrings(x\{1\})\
str_new(1:3)\
str_new(1,3)\
length(str_new)\
height(str_new)\
T_first6\{1\}\{1\}\
T_first6\{1\}\
T_first6\{1\}(1,20)\
T_first6\{:,1\}\
T_first6\{1\}(:)\
length(T_first6\{1\}(:))\
length(T_first6\{1\}(2))\
T_first6\{1\}(2)\
isequal(T_first6\{1\}(2),'C')\
temp = [ ]\
temp(1)=1\
temp\
temp(2)=2\
test_m = zeros(1,3)\
a=[3 1 2]\
a = test_m\
test_m = zeros(1,3)\
a=[3 1 2]\
test_m = a\
test_2 = zeros(2,3)\
test_2(1)\
test_2(1,:)\
test_2(:,1)\
test_2(3)\
test_2(3)=1\
test_2(2)=1\
test_2(1,3)=1\
test_2(1,3)=2\
test_2\{2\}\
test_2(2)\
test_2(2,:)\
test_2(2,1)\
test_2(2,2)\
test_2(2,3)\
test_2(:,2)=2\
test_2(:,1)=2\
T_binary = readtable('BinaryMismatchData.csv');\
T_binary(1,8)\
1/T_binary(1,8)\
T_binary = table2array(T_binary)\
1/T_binary(1,8)\
T_binary(1,8)\
T_binary(1,8)\{1\}\
T_binary\{8\}\
T_binary(1,8)\
T_binary(:,8)\
Table_BE = table2array(T_binary(:,8))\
T_binary = readtable('BinaryMismatchData.csv');\
Table_BE = table2array(T_binary(:,8))\
Table_BE\{2,1\}\
Table_BE\{2,1\}+1\
Table_BE\{2,1\}\
length(Table_BE)\
1/Table_BE\{2,1\}\
Table_BE\{3,1\}\
b = cast(Table_BE\{3,1\},'uint8')\
b\
test_2(2,:)\
test_2(2,1)\
test_2(2,3)\
T_binary = readtable('BinaryMismatchData.csv');\
T_binary\{8\}\
T_binary(8)\
T_binary(1,8)\
T_binary\{1,8\}\
T_binary\{1,8\}+1\
str2double(T_binary\{1,8\})\
temp = load('HIRF5.mat')\
temp\
rw(13)\
size(T_binary(:,1))\
size(T_binary(:,1))\{1\}\
size(T_binary(:,1))(1)\
x=size(T_binary(:,1))(1)\
x=size(T_binary(:,1))\
x(1)\
rw(13)\
s_crRNA = extractBetween(T_binary\{I\},1,20)\
s_crRNA = extractBetween(T_binary\{3\},1,20)\
T_binary\{3\}\
T_binary(3,1)\
s_crRNA = extractBetween(T_binary(3,1),1,20)\
test_table = table2array(T_binary);\
test_table(3,1)\
test_table(3,1)(1)\
x=test_table(3,1)\
x(1)\
x(1,1,1)\
x(1,1,2)\
test_table = table2cell(T_binary);\
test_table(1,3)\
str2double(test_table(1,3))\
y=str2double(test_table(1,3))\
y(12)\
y(2)\
temp_Ising_1 = zeros(20,TTest_x(1));\
TTest_x = size(T_binary(:,1));\
temp_Ising_1 = zeros(20,TTest_x(1));\
sequence_crRNA = extractBetween(T_binary\{I\},1,20)\
sequence_crRNA = extractBetween(T_binary(1,1),1,20)\
T_binary(1,1)\
X=T_binary(1,1)\
X(1)\
X\{1\}\
X\{1,1\}\
X(1:2,1:2)\
X(1,1:2)\
X(1:2,1)\
X(1,1)\
Table(:,1)\
extractBetween(Table(1,1), 1,20)\
Table(1,1)\
rw(13)\
Table\{1\}\
Table\{2\}\
Table\{1,2\}\
Table(2,1)\
Table(2,1) = str2double(Table(2,1))\
testt=extractBetween(Table(1,1), 1,20)\
testt=extractBetween(Table\{1\}, 1,20)\
Table(1:5,[1 4 5]_\
Table(1:5,[1 4 5])\
Table(1,[1])\
Table\{1\}\
Table\{1,1\}\
Table\{1,1\}\{1\}\
Table\{1,1\}\{2\}\
Table\{1,1\}\{1:2\}\
Table\{1,1\}\{1,1:2\}\
x= Table\{1,1\}\
x = table2array(x)\
x = cell2mat(x)\
x(1)\
x(2)\
x(23)\
x(1:5)\
x(1:20)\
x(22,41)\
x(22:41)\
x(22,41)\
x(1:20)\
x(22:41)\
x(2,22:41)\
x = T_first6\{:,1\}\
x = T_first6\{:,2\}\
x = T_first6\{2,1\}\
x = T_first6\{31,1\}\
x(1:20)\
x(22:41)\
length(x(22:41))\
length(x(1:20))\
rw(13)\
T_binary\{1,:\}\
T_binary\{:,1\}\
T_binary = cell2mat(T_binary\{:,1\})\
rw(13)\
x = T_first6\{2,1\}\
x(1:20)\
x(22:40)\
rw(13)\
Table\{1,1\}\
size(Table\{:,1\})\
x=size(Table\{:,1\})\
x(1)\
rw(13)\
x = T_first6\{2,1\}\
x(3:4)\
rw(13)\
X_test = Table\{3,1\}\
X_test(1:20)\
x = T_first6\{2,1\}\
x(1:20)\
length(x(1:20))\
x(1:2)\
x(1:3)\
x(1:4)\
rw(13)\
Table\{1,1\}\
x=Table\{1,1\}\
x(1:20)\
rw(13)\
x\
x = T_first6\{2,1\}\
x(1:20)\
rw(13)\
test_x = Table\{1,1\}\
Table = readtable('First6-Data.csv');\
Table = table2cell(Table);\
test_x = Table\{1,1\}\
rw(13)\
[test_bp , test_mm, test_tm_1 , test_tm_2] = rw(13)\
%-- 2/9/20, 3:33 AM --%\
rw(13)\
[test_bp , test_mm, test_tm_1 , test_tm_2] = rw(13)\
[TT, T_bin, bp , mm, tm_1, tm_2, t_Ising] = rw(13)\
%-- 2/13/20, 7:40 AM --%\
[TT, T_bin, bp , mm, tm_1, tm_2, t_Ising] = rw(13)\
t_Ising\
find(t_Ising == 1)\
x=find(t_Ising == 1)\
t_Ising(2,3)=1\
T_bin\{1,1\}\
T_bin\{3,1\}\
T_bin\{323,1\}\
x=T_bin\{323,1\}\
x(1:20)\
x\{323,1:20\}\
[TT, T_bin, bp , mm, tm_1, tm_2, t_Ising] = rw(13)\
T_binary = readtable('BinaryMismatchData.csv');\
x = T_binary\{3,1\}\
temp1 = x=(1:20)\
x=(1:20), temp1 = x\
temp1 = x(1:20)\
x = cell2mat(x)\
x = T_binary\{3,1\}\
TEST = cell2mat(TEST)\
TEST = T_binary\{3,1\}\
TEST = cell2mat(TEST)\
TEST(1:20)\
TEST(1:1)\
TEST(1:3)\
TEST(1:4)\
length(TEST)\
Table = readtable('First6-Data.csv');\
TEST = Table\{3,1\}\
TEST = cell2mat(TEST)\
TEST(1:20)\
TEST(21:40)\
TEST(1:20)\
TEST(22:40)\
TEST(22:41)\
TEST(22:42)\
TEST(22:41)\
TEST = Table\{3,1\}\
TEST = Table\{4,1\}\
TEST = cell2mat(TEST)\
TEST(1:20)\
isequal(TEST(1:20),'A')\
isequal(TEST(1:20),A)\
x=TEST(1:2)\
x(1)\
x(2)\
eq(x(1), x(2))\
eq(x(1), 'A')\
[TT, T_bin, bp , mm, tm_1, tm_2, t_Ising] = rw(13)\
TEST(1:20)\
str2double(T_binary\{1,8\})\
t_Ising(1,:)\
t_ising(:,1)\
t_Ising(:,1)\
length(t_Ising(:,1))\
t_Ising(1,:)\
size(Table(:,1))\
F=size(Table(:,1))\
F(1)\
t_Ising(1,:)\
[TT, T_bin, bp , mm, tm_1, tm_2, t_Ising] = rw(13)\
t_Ising(:,1)\
t_Ising(4,:)\
[TT, T_bin, bp , mm, tm_1, tm_2, t_Ising] = rw(13)\
zeros(2,3)\
zeros(size(T_binary(1,1),20)\
zeros(size(T_binary(1,1),20))\
x = size(T_binary\{1,1\})\
x = size(T_binary\{1\})\
size(T_binary)\
TESTT=size(T_binary)\
zeros(TESTT(1),20)\
TEST_MAT=zeros(TESTT(1),20)\
[TT, T_bin, bp , mm, tm_1, tm_2, t_Ising] = rw(13)\
[Table, T_binary,t_matrix_1, t_matrix_2, temp_Ising] = rw(13)\
t_Ising(2,3)\
t_Ising(2,3)=1\
t_Ising(2,3)\
[Table, T_binary,t_matrix_1, t_matrix_2, temp_Ising] = rw(13)\
Table\{1,1\}\
TEST=Table\{1,1\}\
TEST=cell2mat(TEST)\
TEST(1:2)\
TEST(1:1)\
TEST(2:2)\
[Table, T_binary,t_matrix_1, t_matrix_2, temp_Ising] = rw(13)\
func = @(X) (hamiltonian_i1.* exp(X))/(str2double(Table\{I,8\}) + lambda_mismatch .* exp(lambda_mismatch .* (11-X)));\
Table = readtable('First6-Data.csv');\
func = @(X) (exp(exp(N-J) * 1) * exp(exp(-8./2) * (N-J)).* exp(X))/(str2double('0.001000050033') + exp(-8./2) .* exp(exp(-8./2) .* (11-X)));\
int(func,0,1)\
func = @(X)(exp(exp(N-X) * 1) * exp(exp(-8./2) * (N-X)).* exp(X))/(str2double('0.001000050033') + exp(-8./2) .* exp(exp(-8./2) .* (11-X)));\
int(func,0,1)\
a = whos('integral')\
b = which('integral')\
[Table, T_binary,t_matrix_1, t_matrix_2, temp_Ising] = rw(13)\
func = @(X)(exp(exp(N-X) .* 1) .* exp(exp(-8./2) .* (N-X)).* exp(X))/(str2double('0.001000050033') .+ exp(-8./2) .* exp(exp(-8./2) .* (11-X)));\
func = @(X)(exp(exp(N-X) .* 1) .* exp(exp(-8./2) .* (N-X)).* exp(X))/(str2double('0.001000050033') + exp(-8./2) .* exp(exp(-8./2) .* (11-X)));\
int(func,0,1)\
integral(func,0,1)\
func = @(X)(exp(exp(N-X) .* 1) .* exp(exp(-8./2) .* (11-X)).* exp(X))/(str2double('0.001000050033') + exp(-8./2) .* exp(exp(-8./2) .* (11-X)));\
integral(func,0,1)\
func = @(X)(exp(exp(11-X) .* 1) .* exp(exp(-8./2) .* (11-X)).* exp(X))/(str2double('0.001000050033') + exp(-8./2) .* exp(exp(-8./2) .* (11-X)));\
integral(func,0,1)\
func = @(X)(exp(exp(11-X) * 1) * exp(exp(-8/2) * (11-X))* exp(X))/(str2double('0.001000050033') + exp(-8/2) * exp(exp(-8/2) * (11-X)));\
integral(func,0,1)\
func = @(X)(exp(exp(11-X) .* 1) .* exp(exp(-8./2) .* (11-X)).* exp(X))/(str2double('0.001000050033') + exp(-8./2) .* exp(exp(-8./2) .* (11-X)));\
integral(func,0,1)\
integral(func,0,1,'ArrayValued',false)\
integral(func,0,1,'ArrayValued',true)\
integral(func,2,13,'ArrayValued',true)\
func(10)\
func(4)\
func(3)\
func(2)\
func(11)\
func(12)\
func(14)\
func(20)\
func = @(X)(exp((11-X) .* 1) .* exp(exp(-8./2) .* (11-X)).* exp(X))/(str2double('0.001000050033') + exp(-8./2) .* exp(exp(-8./2) .* (11-X)));\
func_2 = @(X)(exp((11-X) .* 1) .* exp(exp(-8./2) .* (11-X)).* exp(X))/(str2double('0.001000050033') + exp(-8./2) .* exp(exp(-8./2) .* (11-X)));\
func = @(X)(exp(exp(11-X) .* 1) .* exp(exp(-8./2) .* (11-X)).* exp(X))/(str2double('0.001000050033') + exp(-8./2) .* exp(exp(-8./2) .* (11-X)));\
func_2(20)\
%-- 2/14/20, 11:58 PM --%\
Table = readtable('First6-Data.csv');\
Table_2 = readtable('Mid6-Data.csv');\
Table_3 = readtable(PAMData.csv);\
Table_3 = readtable('PAMData.csv');\
Table_4 = readtable('Last14Data.csv');\
Table_5 = readtable('BinaryMismatchData.csv');\
Table_5 = readtable('KMMK-Data.csv');\
Table_5 = readtable('BinaryMismatchData.csv');\
Table_6 = readtable('BinaryMismatchData.csv');\
TEST_3 = Table_3\{1,1\}\
TEST_3 = cell2mat(TEST_3)\
TEST_3(1:1)\
x = zeros(1,5)\
x(:,1)\
x(1,:)\
TEST_3 = x(1,:)\
TEST_3 = cell2mat(TEST_3)\
TEST_3 = Table_3\{1,1\}\
TEST_3 = cell2mat(TEST_3)\
x(1,:) = TEST_3\
x(1,:) = TEST_3(1:5)\
TEST_3(1:1)\
eq(TEST_3(1:1),'C')\
eq(TEST_3(2:2),'G')\
length(Table_3)\
size(Table_3)\
x=size(Table_3)\
x(1)\
randseq(6)\
%-- 2/17/20, 10:52 AM --%\
randseq(6)\
Table_6 = readtable('BinaryMismatchData.csv');\
Table_5 = readtable('KMMK-Data.csv');\
Table_4 = readtable('Last14Data.csv');\
Table_3 = readtable('PAMData.csv');\
Table = readtable('First6-Data.csv');\
Table_2 = readtable('Mid6-Data.csv');\
str2double(Table_3\{8,:\}\
str2double(Table_3\{8,:\})\
test_sequences = \{ \} ;\
test_sequences\{1\} = 'pe'\
test_sequences\{2\} = 'pe'\
size(Table_6\{1\})\
size(Table_6(:,1))\
TEST_6 = Table_6\{I,1\};\
TEST_6 = cell2mat(TEST_6);\
TEST_6 = Table_6\{3,1\};\
TEST_6 = cell2mat(TEST_6);\
TEST_6\
TEST_6\{3\}\
TEST_6(1:1)\
length(TEST_6)\
Table_3\{4,8\}\
TTTest_x = size(Table(:,1));\
TTTest_x\
size(Table_3(:,1))\
XA = size(Table_3(:,1))\
XA(1)\
str2double(Table_3\{4,8\}_\
str2double(Table_3\{4,8\})\
str2double(Table_3\{1,8\})\
str2double(Table\{1,8\})\
Table = readtable('First6-Data.csv');\
str2double(Table\{1,8\})\
Table_4\{1,8\}\
Table_3\{1,8\}\
Table\{1,8\}\
Table_4\{3,8\}\
couplings_ij1 = exp(N-J);\
couplings_ij1 = exp(15-J);\
J= 3\
couplings_ij1 = exp(15-J);\
hamiltonian_i1 = exp(couplings_ij1 * 1) * exp(exp(-8/2) * (N-J));\
hamiltonian_i1 = exp(couplings_ij1 * 1) * exp(exp(-8/2) * (15-J));\
Table = readtable('First6-Data.csv');\
Table_4 = readtable('Last14Data.csv');\
func_array = \{ \};\
func_array\{1,1\} = 8\
func_array\{2,1\} = 8\
func_array\{1,2\} = 8\
size(Table_4(:,1))\
XX=size(Table_4(:,1))\
XX(1)\
size(Table(:,1))\
XY=size(Table(:,1))\
XY(1)\
11368 * 15803\
func_2 = @(X) X;\
func_2(3)\
XY=size(Table(:,1))\
size(func_array)\
func_array\{2,1\}\
func_array\{2,2\}\
size(func_array)\
Table_3 = readtable('PAMData.csv');Table_4 = readtable('Last14Data.csv');I = 30;JI = 45;\
beta = 0.5;N = 13;J=5;\
lambda_mismatch = exp(-5/2);lambda_c = 0.30;lambda_p = 0.25;\
couplings_ij1 = exp(N-J);couplings_ij2 = N-J;\
hamiltonian_i1 = exp(couplings_ij1 * 1 * exp(lambda_mismatch * (N-J));\
hamiltonian_i2 = exp(couplings_ij2 * temp_Ising(I,J)) * exp(lambda_mismatch * (N-J));\
func = @(X) (hamiltonian_i1.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated = @(X) (hamiltonian_i1.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_2 = @(X) (hamiltonian_i2.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_2 = @(X) (hamiltonian_i2.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
Table_3 = readtable('PAMData.csv');Table_4 = readtable('Last14Data.csv');I = 30;JI = 45;\
beta = 0.5;N = 13;J=5;\
lambda_mismatch = exp(-5/2);lambda_c = 0.30;lambda_p = 0.25;\
couplings_ij1 = exp(N-J);couplings_ij2 = N-J;\
hamiltonian_i1 = exp(couplings_ij1 * 1 * exp(lambda_mismatch * (N-J)));\
hamiltonian_i2 = exp(couplings_ij2 * temp_Ising(I,J)) * exp(lambda_mismatch * (N-J));\
func = @(X) (hamiltonian_i1.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated = @(X) (hamiltonian_i1.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_2 = @(X) (hamiltonian_i2.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_2 = @(X) (hamiltonian_i2.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
Table_3 = readtable('PAMData.csv');Table_4 = readtable('Last14Data.csv');I = 30;JI = 45;\
beta = 0.5;N = 13;J=5;\
lambda_mismatch = exp(-5/2);lambda_c = 0.30;lambda_p = 0.25;\
couplings_ij1 = exp(N-J);couplings_ij2 = N-J;\
hamiltonian_i1 = exp(couplings_ij1 * 1 * exp(lambda_mismatch * (N-J));\
hamiltonian_i2 = exp(couplings_ij2 * 1)) * exp(lambda_mismatch * (N-J)));\
func = @(X) (hamiltonian_i1.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated = @(X) (hamiltonian_i1.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_2 = @(X) (hamiltonian_i2.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_2 = @(X) (hamiltonian_i2.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
Table_3 = readtable('PAMData.csv');Table_4 = readtable('Last14Data.csv');I = 30;JI = 45;\
beta = 0.5;N = 13;J=5;\
lambda_mismatch = exp(-5/2);lambda_c = 0.30;lambda_p = 0.25;\
couplings_ij1 = exp(N-J);couplings_ij2 = N-J;\
hamiltonian_i1 = exp(couplings_ij1 * 1 * exp(lambda_mismatch * (N-J)));\
hamiltonian_i2 = exp(couplings_ij2 * 1)) * exp(lambda_mismatch * (N-J)));\
func = @(X) (hamiltonian_i1.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated = @(X) (hamiltonian_i1.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_2 = @(X) (hamiltonian_i2.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_2 = @(X) (hamiltonian_i2.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
Table_3 = readtable('PAMData.csv');Table_4 = readtable('Last14Data.csv');I = 30;JI = 45;\
beta = 0.5;N = 13;J=5;\
lambda_mismatch = exp(-5/2);lambda_c = 0.30;lambda_p = 0.25;\
couplings_ij1 = exp(N-J);couplings_ij2 = N-J;\
hamiltonian_i1 = exp(couplings_ij1 * 1 * exp(lambda_mismatch * (N-J)));\
hamiltonian_i2 = exp(couplings_ij2 * 1) * exp(lambda_mismatch * (N-J)));\
func = @(X) (hamiltonian_i1.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated = @(X) (hamiltonian_i1.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_2 = @(X) (hamiltonian_i2.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_2 = @(X) (hamiltonian_i2.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
Table_3 = readtable('PAMData.csv');Table_4 = readtable('Last14Data.csv');I = 30;JI = 45;\
beta = 0.5;N = 13;J=5;\
lambda_mismatch = exp(-5/2);lambda_c = 0.30;lambda_p = 0.25;\
couplings_ij1 = exp(N-J);couplings_ij2 = N-J;\
hamiltonian_i1 = exp(couplings_ij1 * 1 * exp(lambda_mismatch * (N-J)));\
hamiltonian_i2 = exp(couplings_ij2 * 1) * exp(lambda_mismatch * (N-J));\
func = @(X) (hamiltonian_i1.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated = @(X) (hamiltonian_i1.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_2 = @(X) (hamiltonian_i2.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_2 = @(X) (hamiltonian_i2.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
fplot(@(X) func, [-50 50], 'b')\
fplot(@(X) func_truncated_2, [-50 50], 'b')\
func(20)\
IJ=20;\
func(20)\
Table_3 = readtable('PAMData.csv');Table_4 = readtable('Last14Data.csv');I = 30;JI = 45;IJ=20;\
beta = 0.5;N = 13;J=5;\
lambda_mismatch = exp(-5/2);lambda_c = 0.30;lambda_p = 0.25;\
couplings_ij1 = exp(N-J);couplings_ij2 = N-J;\
hamiltonian_i1 = exp(couplings_ij1 * 1 * exp(lambda_mismatch * (N-J)));\
hamiltonian_i2 = exp(couplings_ij2 * 1) * exp(lambda_mismatch * (N-J));\
func = @(X) (hamiltonian_i1.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated = @(X) (hamiltonian_i1.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_2 = @(X) (hamiltonian_i2.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_2 = @(X) (hamiltonian_i2.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func(20)\
func(10)\
func(15)\
func_truncated(15)\
func_truncated(20)\
Table_3 = readtable('PAMData.csv');Table_4 = readtable('Last14Data.csv');I = 30;JI = 45;IJ=20;\
beta = 0.005;N = 16;J=3;\
lambda_mismatch = exp(-5/2);lambda_c = 0.25;lambda_p = 0.15;\
couplings_ij1 = exp(N-J);couplings_ij2 = N-J;\
hamiltonian_i1 = exp(couplings_ij1 * 1 * exp(lambda_mismatch * (N-J)));\
hamiltonian_i2 = exp(couplings_ij2 * 1) * exp(lambda_mismatch * (N-J));\
func = @(X) (hamiltonian_i1.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated = @(X) (hamiltonian_i1.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_2 = @(X) (hamiltonian_i2.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_2 = @(X) (hamiltonian_i2.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_2(15)\
func_truncated_2(12)\
func_truncated_2(8)\
func_truncated_2(5)\
func_truncated_2(1)\
func_2(8)\
func(8)\
func_truncated(8)\
%-- 2/19/20, 12:46 AM --%\
Table_3 = readtable('PAMData.csv');Table_4 = readtable('Last14Data.csv');I = 30;JI = 45;IJ=20;\
beta = 0.005;N = 16;J=3;\
lambda_mismatch = exp(-5/2);lambda_c = 0.25;lambda_p = 0.15;\
couplings_ij1 = exp(N-J);couplings_ij2 = N-J;\
hamiltonian_i1 = exp(couplings_ij1 * 1 * exp(lambda_mismatch * (N-J)));\
hamiltonian_i2 = exp(couplings_ij2 * 1) * exp(lambda_mismatch * (N-J));\
func = @(X) (hamiltonian_i1.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated = @(X) (hamiltonian_i1.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_2 = @(X) (hamiltonian_i2.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_2 = @(X) (hamiltonian_i2.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
hamiltonian_ii` = exp(-(0.5 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))+ ((13-7)-1)(1-0.4))));\
hamiltonian_ii = exp(-(0.5 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))+ ((13-7)-1)(1-0.4))));\
hamiltonian_ii = exp(-(0.5 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))+ ((13-7)-1)*(1-0.4))));\
func_truncated_ii = @(X) (hamiltonian_ii)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii(20)\
%-- 2/20/20, 11:52 PM --%\
hamiltonian_ii = exp(-(0.5 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))+ ((13-7)-1)(1-0.4))));\
hamiltonian_ii = exp(-(0.5 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))+ ((13-7)-1)*(1-0.4))));\
Table_3 = readtable('PAMData.csv');Table_4 = readtable('Last14Data.csv');I = 30;JI = 45;IJ=20;\
beta = 0.005;N = 16;J=3;\
lambda_mismatch = exp(-5/2);lambda_c = 0.25;lambda_p = 0.15;\
couplings_ij1 = exp(N-J);couplings_ij2 = N-J;\
func_truncated_ii = @(X) (hamiltonian_ii)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii1 = @(X) exp(hamiltonian_ii)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii1(20)\
Table = readtable('First6-Data.csv');\
func_truncated_ii1(20)\
func_truncated_ii1 = @(X) exp(hamiltonian_ii)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii1(20)\
exp(-3/2)-ans\
exp(-3/2)\
func_truncated_ii1(12)\
func_truncated_ii1(11)\
func_truncated_ii1(10)\
func_truncated_ii1(9)\
func_truncated_ii1(8)\
func_truncated_ii1(7)\
func_truncated_ii1(8)\
format long\
func_truncated_ii1(8)\
func_truncated_ii1(7)\
hamiltonian_ii = exp(-((1/19) * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))+ ((13-7)-1)*(1-0.4))));\
func_truncated_ii1 = @(X) exp(hamiltonian_ii)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii1(7)\
func_truncated_ii1(8)\
func_truncated_ii1(10)\
hamiltonian_ii_test = exp(-((1/8) * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))+ 0.5*(((13-7)-1)*(1-0.4))));\
hamiltonian_ii_test = exp(-((1/8) * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))+ 0.5*(((13-7)-1)*(1-0.4)))));\
func_truncated_ii_test = @(X) exp(hamiltonian_ii_test)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii_test(8)\
exp(-3/2)-integral(func_truncated_ii_test,3,13,'ArrayValued', true);\
exp(-3/2)-integral(func_truncated_ii_test,3,13,'ArrayValued', true)\
exp(-3/2)-integral(func_truncated_ii_test,3,5,'ArrayValued', true)\
exp(-3/2)-integral(func_truncated_ii_test,3,7,'ArrayValued', true)\
%-- 2/22/20, 2:03 PM --%\
hamiltonian_ii_test = exp(-((1/19^3) * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))+ 0.5*(((13-7)-1)*(1-0.4)))));\
func_truncated_ii_test = @(X) exp(hamiltonian_ii_test)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii_test(8)\
beta = 0.005;N = 16;J=3;\
lambda_mismatch = exp(-5/2);lambda_c = 0.25;lambda_p = 0.15;\
format long\
func_truncated_ii_test(8)\
func_truncated_ii_test = @(X) exp(hamiltonian_ii_test)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii_test(8)\
Table = readtable('First6-Data.csv');\
Table_3 = readtable('PAMData.csv');Table_4 = readtable('Last14Data.csv');I = 30;JI = 45;IJ=20;\
beta = 0.005;N = 16;J=3;\
lambda_mismatch = exp(-5/2);lambda_c = 0.25;lambda_p = 0.15;\
couplings_ij1 = exp(N-J);couplings_ij2 = N-J;\
func_truncated_ii_test = @(X) exp(hamiltonian_ii_test)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii_test(8)\
exp(-3/2)-integral(func_truncated_ii_test,3,7,'ArrayValued', true)\
integral(func_truncated_ii_test,3,7,'ArrayValued', true)\
lambda_p = 0.25;\
exp(-3/2)-integral(func_truncated_ii_test,3,7,'ArrayValued', true)\
func_truncated_ii_test = @(X) exp(hamiltonian_ii_test)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii_test(20)\
func_truncated_ii_test(19)\
func_truncated_ii_test(10)\
func_truncated_ii_test(8)\
integral(func_truncated_ii_test,3,7,'ArrayValued', true)\
hamiltonian_ii_test = exp(-((1/19^3) * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+ 0.5*(((13-7)-1)*(1-0.4)));\
integral(func_truncated_ii_test,3,7,'ArrayValued', true)\
normalization = 1/(19^3);\
hamiltonian_ii_test = exp(-((normalization * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+ 0.5*(((13-7)-1)*(1-0.4))));\
func_truncated_ii_test_2 = @(X) exp(hamiltonian_ii_test)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii_test_2(8)\
integral(func_truncated_ii_test_2,3,7,'ArrayValued', true)\
integral(func_truncated_ii_test_2,3,20,'ArrayValued', true)\
ormalization = 1/(19^3);\
hamiltonian_ii_test = exp(-((normalization * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+ 0.5*(((13-7)-1)*(1-0.4))));\
func_truncated_ii_test_2 = @(X) exp(hamiltonian_ii_test)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
>>ormalization = 1/(19^3);\
hamiltonian_ii_test = exp(-((normalization * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+ 0.5*(((13-7)-1)*(1-0.4))));\
func_truncated_ii_test_2 = @(X) exp(hamiltonian_ii_test)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
>>normalization_2 = 1/((2*19)^3);\
normalization_2 = 1/((2*19)^3);\
hamiltonian_ii_test_2 = exp(-((normalization_2 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+ 0.5*(((13-7)-1)*(1-0.4))));\
func_truncated_ii_test_3 = @(X) exp(hamiltonian_ii_test_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
integral(func_truncated_ii_test_3,3,20,'ArrayValued', true)\
func_truncated_ii_test_3(8)\
func_truncated_ii_test_3(9)\
func_truncated_ii_test_3(10)\
func_truncated_ii_test_3(111)\
func_truncated_ii_test_3(11)\
func_truncated_ii_test_3(12)\
hamiltonian_ii_test_3 = @(X) exp(-((normalization_2 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+ 0.5*(((13-X)-1)*(1-0.4))));\
func_truncated_ii_test_33 = @(X) exp(hamiltonian_ii_test_3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii_test_33(8)\
func_truncated_ii_test_33 = @(X) (hamiltonian_ii_test_3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii_test_33(8)\
func_truncated_ii_test_33 = @(X) (hamiltonian_ii_test_3)/(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii_test_33(8)\
hamiltonian_ii_test_2 = exp(-((normalization_2 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+ 0.5*(((13-7)-1)*(1-0.4))));\
func_truncated_ii_test_3 = @(X) hamiltonian_ii_test_2./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii_test_3(8)\
hamiltonian_ii_test_nonconstant = @(Y) exp(-((normalization_2 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+ 0.5*(((13-Y)-1)*(1-0.4))));\
hamiltonian_ii_test_nonconstant(7)\
func_truncated_ii_test_3 = @(X) hamiltonian_ii_test_nonconstant(7)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii_test_3(7)\
exp(-3/2)\
func_truncated_ii_test_3 = @(X) hamiltonian_ii_test_nonconstant(12)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii_test_3(12)\
exp(-1/2)\
exp(-0.001)\
exp(-0.01)\
New_t_prob = exp(-0.01)-integral(func_truncated_ii_test_3,3,12,'ArrayValued', true)\
integral(func_truncated_ii_test_3,3,12,'ArrayValued', true)\
func_truncated_ii_test_3(12)-func_truncated_ii_test_3(7)\
func_truncated_ii_test_3(7)-func_truncated_ii_test_3(12)\
exp(-3/2)-(func_truncated_ii_test_3(7)-func_truncated_ii_test_3(12))\
exp(-3/2)\
func_truncated_ii_test_3(7)\
%-- 2/23/20, 1:30 AM --%\
% construct the sequence of transition\'a0% probabilities, from specified initial\'a0% transition probability\
Hamiltonian_C1_2 = exp(-((normalization_1_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_1_bmis *(((16-8)-1)*(0.5)))));\
normalization_1_bm = 2\
normalization_1_bmis=2\
Hamiltonian_C1_2 = exp(-((normalization_1_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_1_bmis *(((16-8)-1)*(0.5)))));\
demo()\
Hamiltonian_TRIPLE_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8))))-(normalization_double_2 .*((((13-9)-1)* 0.308)+(((13-10)-1)* 0.231) + (((13-11)-1)*0.154)))));\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
Hamiltonian_TRIPLE_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8))))-(normalization_double_2 .*((((13-9)-1)* 0.308)+(((13-10)-1)* 0.231) + (((13-11)-1)*0.154)))));\
max(Hamiltonian_TRIPLE_II)\
Hamiltonian_double_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
max(Hamiltonian_double_II)\
Hamiltonian_quad = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+(((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
max(Hamiltonian_quad)\
normalization_double_1 = 1/(8+2)^3;\
normalization_double_2 = 1/(2+4)^3;\
Hamiltonian_quad = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+(((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
max(Hamiltonian_quad)\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.077)))));\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
max(func_triple_A)\
func_triple_A(1)\
Table = readtable('First6-Data.csv');\
Table_3 = readtable('PAMData.csv');\
Table_4 = readtable('Last14Data.csv');\
I = 30;\
JI = 45;\
IJ=20;\
beta = 0.005;\
N = 16;\
N_1 = 13;\
J=3;\
lambda_mismatch = exp(-5/2);\
lambda_c = 0.025;\
lambda_p = 0.015;\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
>>func_triple_A(1)\
func_triple_A(1)\
max(func_triple_A)\
func_triple_A(2)\
func_triple_A(3)\
func_triple_A(5)\
func_triple_A(6)\
func_triple_A(8)\
func_triple_A(9)\
format long\
func_triple_A(9)\
func_triple_A(20)\
func_triple_A(7)\
func_triple_A(6)\
func_triple_A(6)-func_triple_A(3)\
func_triple_A(3)-func_triple_A(6)\
1-ans\
1-(1-ans)/13\
1-(1-ans)/7\
1-(1-(func_triple_A(3)-func_triple_A(6)))/13\
1-(1-(func_triple_A(3)-func_triple_A(6)+(func_triple_A(4) - func_triple_A(5))/13\
1-(1-(func_triple_A(3)-func_triple_A(6)+(func_triple_A(4) - func_triple_A(5))/13))\
1-(1-(func_triple_A(3)-func_triple_A(6)+(func_triple_A(4) - func_triple_A(5))))/13\
1-(1-(func_triple_A(3)+func_triple_A(6)+(func_triple_A(4) + func_triple_A(5))))/13\
1-(1-(func_triple_A(3)-func_triple_A(6)))/13\
(1-(1-(func_triple_A(3)-func_triple_A(6)))/13) * exp(-3/2)\
0.205967644306880\
0.205967644306880 * ((1-(1-(func_triple_A(8)-func_triple_A(14)))/6)\
0.205967644306880 * ((1-(1-(func_triple_A(8)-func_triple_A(14)))/6))\
(1-(1-(func_triple_A(3)-func_triple_A(6)))/13) * exp(-8/2)\
exp(-8/2)\
1-(func_triple_A(3)/13)\
1-(func_triple_A(5)/13)\
1-(func_triple_A(2)/13)\
(1-(func_triple_A(3)/13))(1-(func_triple_A(2)/13))\
(1-(func_triple_A(3)/13))*(1-(func_triple_A(2)/13))\
(1-(func_triple_A(3)/13))*(1-(func_triple_A(2)/13))*(1-func_triple_A(4)/13)\
Hamiltonian_triple_A = @(Y) exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .* Y .*((((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.077)))));\
Hamiltonian_triple_A(3)\
Hamiltonian_triple_A(4)\
Hamiltonian_triple_A(6)\
min(Hamiltonian_triple_A)\
Hamiltonian_triple_A(7)\
Hamiltonian_triple_A(11)\
Hamiltonian_triple_A_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2  .*((((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.077)))));\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_triple_A_2 = @(X) (Hamiltonian_triple_A_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
rand([0,1])\
rand\
max(Hamiltonian_triple_A_2)\
min(Hamiltonian_triple_A_2)\
normalization_double_1\
normalization_double_2\
normalization_double_1/normalization_double)_2\
normalization_double_1/normalization_double_2\
1/ans\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 13\
normalization_triple_bm = 1/(14+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-13|/13 = 0.769, and the THIRD mismatch factor\
% comes from |4-13|/13 = 0.6923.\
Hamiltonian_triple = exp(-((normalization_3_bm * (((13-1)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((13-2)-1)* 0.846)+ (((13-3)-1)* 0.769)+(((13-4)-1)* 0.6923)))));\
% generate a test function with specific normalizations\
func_triple = @(X) (Hamiltonian_triple)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,3,4 (!!!)\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 13\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-13|/13 = 0.6923, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.615, and the THIRD T_ij factor comes\
% from the fact that |6-13|/13 = 0.5384.\
Hamiltonian_triple_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((13-4)-1)* 0.6923)+ (((13-5)-1)* 0.615)+(((13-6)-1)* 0.5384)))));\
% generate a test function with specific normalizations\
func_triple_2 = @(X) (Hamiltonian_triple_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,5,6 (!!!)\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-13|/13 = 0.692\
Hamiltonian_double = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-4)-1)* 0.692)))));\
% generate a test function with specific normalizations\
func_double_2 = @(X) (Hamiltonian_double)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,4 (!!!)\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-13|/13 = 0.538\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-6)-1)* 0.538)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,6 (!!!)\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,7 (!!!)\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2A = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-2)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2A = @(X) (Hamiltonian_double_C2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,7 (!!!)\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-13|/13 = 0.385\
Hamiltonian_double_C2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-8)-1)* 0.385)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,8 (!!!)\
% simulate EIGTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308\
Hamiltonian_double_C2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-9)-1)* 0.308)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2 = @(X) (Hamiltonian_double_C2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,9 (!!!)\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231\
Hamiltonian_double_C2_2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-10)-1)* 0.231)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,10 (!!!)\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.15 = |11-13|/13\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))-(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-10)-1)* 0.231)+(((13-11)-1)* 0.15)))));\
% generate a test function with specific normalizations\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,10, 11 (!!!)\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.077)))));\
% generate a test function with specific normalizations\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,11, 12 (!!!)\
% simulate TWELFTH case of 4 base pair mismatch,\
% in which we have TWO base pair mismatchES\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(8+2)^3;\
normalization_double_2 = 1/(2+4)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2, comes from the fact that\
% the quantity T_ij is equal to |2-13|/13 = 0.846. While\
% for the SECOND mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13, and FINALLY, the\
% FOURTH mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_quad = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+(((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_quad = @(X) (Hamiltonian_quad)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,4,11, 12 (!!!)\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.153 = |11-13|/13, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_triple_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9))))-(normalization_double_2 .*((((13-10)-1)* 0.231)+(((13-11)-1)* 0.153)+ (((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_triple_II = @(X) (Hamiltonian_triple_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 10,11, 12 (!!!)\
% simulate FOURTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 11, comes from the fact that\
% |10-13|/13 = 0.153, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.0769 = |12-13|/13, at 12.\
Hamiltonian_double_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_double_II = @(X) (Hamiltonian_double_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 11,12 (!!!)\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308, while the SECOND\
% T_ij factor comes from the fact that\
% 0.231 = |10-13|/13, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-13|/13 = 0.154.\
Hamiltonian_TRIPLE_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8))))-(normalization_double_2 .*((((13-9)-1)* 0.308)+(((13-10)-1)* 0.231) + (((13-11)-1)*0.154)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II = @(X) (Hamiltonian_TRIPLE_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 9,10,11 (!!!)\
% NOW, WE WILL GENERATE THE LAST 15 SEQUENCES, FOR THE FINAL THIRD PLOT,\
% BY TAKING ALL OF THE MUTATIONS IN THE PREVIOUS 15 AND\
% CHANGING THE POSITION OF BINDING. ALL OF THE BASE\
% MISMATCH PATTERNS ARE THE SAME.\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 13\
normalization_triple_bm = 1/(14+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-13|/13 = 0.769, and the THIRD mismatch factor\
% comes from |4-13|/13 = 0.6923.\
Hamiltonian_triple = exp(-((normalization_triple_bm * (((13-1)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_tripel_bmis .*((((13-2)-1)* 0.846)+ (((13-3)-1)* 0.769)+(((13-4)-1)* 0.6923)))));\
% generate a test function with specific normalizations\
func_triple = @(X) (Hamiltonian_triple)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,3,4 (!!!)\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 13\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-13|/13 = 0.6923, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.615, and the THIRD T_ij factor comes\
% from the fact that |6-13|/13 = 0.5384.\
Hamiltonian_triple_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((13-4)-1)* 0.6923)+ (((13-5)-1)* 0.615)+(((13-6)-1)* 0.5384)))));\
% generate a test function with specific normalizations\
func_triple_2 = @(X) (Hamiltonian_triple_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,5,6 (!!!)\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-13|/13 = 0.692\
Hamiltonian_double = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-4)-1)* 0.692)))));\
% generate a test function with specific normalizations\
func_double_2 = @(X) (Hamiltonian_double)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,4 (!!!)\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-13|/13 = 0.538\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-6)-1)* 0.538)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,6 (!!!)\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,7 (!!!)\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2A = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-2)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2A = @(X) (Hamiltonian_double_C2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,7 (!!!)\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-13|/13 = 0.385\
Hamiltonian_double_C2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-8)-1)* 0.385)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,8 (!!!)\
% simulate EIGTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308\
Hamiltonian_double_C2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-9)-1)* 0.308)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2 = @(X) (Hamiltonian_double_C2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,9 (!!!)\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231\
Hamiltonian_double_C2_2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-10)-1)* 0.231)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,10 (!!!)\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.15 = |11-13|/13\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))-(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-10)-1)* 0.231)+(((13-11)-1)* 0.15)))));\
% generate a test function with specific normalizations\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,10, 11 (!!!)\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.077)))));\
% generate a test function with specific normalizations\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,11, 12 (!!!)\
% simulate TWELFTH case of 4 base pair mismatch,\
% in which we have TWO base pair mismatchES\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(8+2)^3;\
normalization_double_2 = 1/(2+4)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2, comes from the fact that\
% the quantity T_ij is equal to |2-13|/13 = 0.846. While\
% for the SECOND mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13, and FINALLY, the\
% FOURTH mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_quad = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+(((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_quad = @(X) (Hamiltonian_quad)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,4,11, 12 (!!!)\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.153 = |11-13|/13, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_triple_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9))))-(normalization_double_2 .*((((13-10)-1)* 0.231)+(((13-11)-1)* 0.153)+ (((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_triple_II = @(X) (Hamiltonian_triple_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 10,11, 12 (!!!)\
% simulate FOURTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 11, comes from the fact that\
% |10-13|/13 = 0.153, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.0769 = |12-13|/13, at 12.\
Hamiltonian_double_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_double_II = @(X) (Hamiltonian_double_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 11,12 (!!!)\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308, while the SECOND\
% T_ij factor comes from the fact that\
% 0.231 = |10-13|/13, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-13|/13 = 0.154.\
Hamiltonian_TRIPLE_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8))))-(normalization_double_2 .*((((13-9)-1)* 0.308)+(((13-10)-1)* 0.231) + (((13-11)-1)*0.154)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II = @(X) (Hamiltonian_TRIPLE_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 9,10,11 (!!!)\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 13\
normalization_triple_bm = 1/(14+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-13|/13 = 0.769, and the THIRD mismatch factor\
% comes from |4-13|/13 = 0.6923.\
Hamiltonian_triple = exp(-((normalization_triple_bm * (((13-1)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_triple_bmis .*((((13-2)-1)* 0.846)+ (((13-3)-1)* 0.769)+(((13-4)-1)* 0.6923)))));\
% generate a test function with specific normalizations\
func_triple = @(X) (Hamiltonian_triple)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,3,4 (!!!)\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 13\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-13|/13 = 0.6923, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.615, and the THIRD T_ij factor comes\
% from the fact that |6-13|/13 = 0.5384.\
Hamiltonian_triple_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((13-4)-1)* 0.6923)+ (((13-5)-1)* 0.615)+(((13-6)-1)* 0.5384)))));\
% generate a test function with specific normalizations\
func_triple_2 = @(X) (Hamiltonian_triple_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,5,6 (!!!)\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-13|/13 = 0.692\
Hamiltonian_double = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-4)-1)* 0.692)))));\
% generate a test function with specific normalizations\
func_double_2 = @(X) (Hamiltonian_double)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,4 (!!!)\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-13|/13 = 0.538\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-6)-1)* 0.538)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,6 (!!!)\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,7 (!!!)\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2A = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-2)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2A = @(X) (Hamiltonian_double_C2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,7 (!!!)\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-13|/13 = 0.385\
Hamiltonian_double_C2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-8)-1)* 0.385)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,8 (!!!)\
% simulate EIGTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308\
Hamiltonian_double_C2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-9)-1)* 0.308)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2 = @(X) (Hamiltonian_double_C2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,9 (!!!)\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231\
Hamiltonian_double_C2_2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-10)-1)* 0.231)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,10 (!!!)\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.15 = |11-13|/13\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))-(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-10)-1)* 0.231)+(((13-11)-1)* 0.15)))));\
% generate a test function with specific normalizations\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,10, 11 (!!!)\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.077)))));\
% generate a test function with specific normalizations\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,11, 12 (!!!)\
% simulate TWELFTH case of 4 base pair mismatch,\
% in which we have TWO base pair mismatchES\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(8+2)^3;\
normalization_double_2 = 1/(2+4)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2, comes from the fact that\
% the quantity T_ij is equal to |2-13|/13 = 0.846. While\
% for the SECOND mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13, and FINALLY, the\
% FOURTH mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_quad = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+(((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_quad = @(X) (Hamiltonian_quad)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,4,11, 12 (!!!)\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.153 = |11-13|/13, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_triple_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9))))-(normalization_double_2 .*((((13-10)-1)* 0.231)+(((13-11)-1)* 0.153)+ (((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_triple_II = @(X) (Hamiltonian_triple_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 10,11, 12 (!!!)\
% simulate FOURTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 11, comes from the fact that\
% |10-13|/13 = 0.153, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.0769 = |12-13|/13, at 12.\
Hamiltonian_double_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_double_II = @(X) (Hamiltonian_double_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 11,12 (!!!)\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308, while the SECOND\
% T_ij factor comes from the fact that\
% 0.231 = |10-13|/13, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-13|/13 = 0.154.\
Hamiltonian_TRIPLE_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8))))-(normalization_double_2 .*((((13-9)-1)* 0.308)+(((13-10)-1)* 0.231) + (((13-11)-1)*0.154)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II = @(X) (Hamiltonian_TRIPLE_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 9,10,11 (!!!)\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.153 = |11-13|/13, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_triple_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9))))-(normalization_double_2 .*((((13-10)-1)* 0.231)+(((13-11)-1)* 0.153)+ (((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_triple_II = @(X) (Hamiltonian_triple_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 10,11, 12 (!!!)\
% simulate FOURTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 11, comes from the fact that\
% |10-13|/13 = 0.153, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.0769 = |12-13|/13, at 12.\
Hamiltonian_double_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_double_II = @(X) (Hamiltonian_double_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 11,12 (!!!)\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308, while the SECOND\
% T_ij factor comes from the fact that\
% 0.231 = |10-13|/13, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-13|/13 = 0.154.\
Hamiltonian_TRIPLE_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8))))-(normalization_double_2 .*((((13-9)-1)* 0.308)+(((13-10)-1)* 0.231) + (((13-11)-1)*0.154)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II = @(X) (Hamiltonian_TRIPLE_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 9,10,11 (!!!)\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231\
Hamiltonian_double_C2_2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-10)-1)* 0.231)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,10 (!!!)\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.15 = |11-13|/13\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))-(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-10)-1)* 0.231)+(((13-11)-1)* 0.15)))));\
% generate a test function with specific normalizations\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,10, 11 (!!!)\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.077)))));\
% generate a test function with specific normalizations\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,11, 12 (!!!)\
% simulate TWELFTH case of 4 base pair mismatch,\
% in which we have TWO base pair mismatchES\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(8+2)^3;\
normalization_double_2 = 1/(2+4)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2, comes from the fact that\
% the quantity T_ij is equal to |2-13|/13 = 0.846. While\
% for the SECOND mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13, and FINALLY, the\
% FOURTH mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_quad = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+(((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_quad = @(X) (Hamiltonian_quad)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,4,11, 12 (!!!)\
% simulate EIGTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308\
Hamiltonian_double_C2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-9)-1)* 0.308)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2 = @(X) (Hamiltonian_double_C2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,9 (!!!)\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-13|/13 = 0.538\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-6)-1)* 0.538)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,6 (!!!)\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,7 (!!!)\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2A = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-2)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2A = @(X) (Hamiltonian_double_C2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,7 (!!!)\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-13|/13 = 0.385\
Hamiltonian_double_C2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-8)-1)* 0.385)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,8 (!!!)\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 13\
normalization_triple_bm = 1/(14+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-13|/13 = 0.769, and the THIRD mismatch factor\
% comes from |4-13|/13 = 0.6923.\
Hamiltonian_triple = exp(-((normalization_triple_bm * (((13-1)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_triple_bmis .*((((13-2)-1)* 0.846)+ (((13-3)-1)* 0.769)+(((13-4)-1)* 0.6923)))));\
% generate a test function with specific normalizations\
func_triple = @(X) (Hamiltonian_triple)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,3,4 (!!!)\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 13\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-13|/13 = 0.6923, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.615, and the THIRD T_ij factor comes\
% from the fact that |6-13|/13 = 0.5384.\
Hamiltonian_triple_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((13-4)-1)* 0.6923)+ (((13-5)-1)* 0.615)+(((13-6)-1)* 0.5384)))));\
% generate a test function with specific normalizations\
func_triple_2 = @(X) (Hamiltonian_triple_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,5,6 (!!!)\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-13|/13 = 0.692\
Hamiltonian_double = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-4)-1)* 0.692)))));\
% generate a test function with specific normalizations\
func_double_2 = @(X) (Hamiltonian_double)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,4 (!!!)\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 13\
normalization_triple_bm = 1/(14+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-13|/13 = 0.769, and the THIRD mismatch factor\
% comes from |4-13|/13 = 0.6923.\
Hamiltonian_triple = exp(-((normalization_triple_bm * (((13-1)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_triple_bmis .*((((13-2)-1)* 0.846)+ (((13-3)-1)* 0.769)+(((13-4)-1)* 0.6923)))));\
% generate a test function with specific normalizations\
func_triple = @(X) (Hamiltonian_triple)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,3,4 (!!!)\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 13\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-13|/13 = 0.6923, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.615, and the THIRD T_ij factor comes\
% from the fact that |6-13|/13 = 0.5384.\
Hamiltonian_triple_2 = exp(-((normalization_triple_bm_1 * (((13-1)+(13-2)+(13-3)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_triple_bmis_1 .*((((13-4)-1)* 0.6923)+ (((13-5)-1)* 0.615)+(((13-6)-1)* 0.5384)))));\
% generate a test function with specific normalizations\
func_triple_2 = @(X) (Hamiltonian_triple_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,5,6 (!!!)\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-13|/13 = 0.692\
Hamiltonian_double = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-4)-1)* 0.692)))));\
% generate a test function with specific normalizations\
func_double_2 = @(X) (Hamiltonian_double)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,4 (!!!)\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-13|/13 = 0.538\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-6)-1)* 0.538)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,6 (!!!)\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 13\
normalization_triple_bm = 1/(14+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-13|/13 = 0.769, and the THIRD mismatch factor\
% comes from |4-13|/13 = 0.6923.\
Hamiltonian_triple = exp(-((normalization_triple_bm * (((13-1)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_triple_bmis .*((((13-2)-1)* 0.846)+ (((13-3)-1)* 0.769)+(((13-4)-1)* 0.6923)))));\
% generate a test function with specific normalizations\
func_triple = @(X) (Hamiltonian_triple)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,3,4 (!!!)\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 13\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-13|/13 = 0.6923, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.615, and the THIRD T_ij factor comes\
% from the fact that |6-13|/13 = 0.5384.\
Hamiltonian_triple_2 = exp(-((normalization_triple_bm_1 * (((13-1)+(13-2)+(13-3)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_triple_bmis_1 .*((((13-4)-1)* 0.6923)+ (((13-5)-1)* 0.615)+(((13-6)-1)* 0.5384)))));\
% generate a test function with specific normalizations\
func_triple_2 = @(X) (Hamiltonian_triple_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,5,6 (!!!)\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-13|/13 = 0.692\
Hamiltonian_double = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-4)-1)* 0.692)))));\
% generate a test function with specific normalizations\
func_double_2 = @(X) (Hamiltonian_double)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,4 (!!!)\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-13|/13 = 0.538\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-6)-1)* 0.538)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,6 (!!!)\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,7 (!!!)\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2A = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-2)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2A = @(X) (Hamiltonian_double_C2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,7 (!!!)\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-13|/13 = 0.385\
Hamiltonian_double_C2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-8)-1)* 0.385)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,8 (!!!)\
% simulate EIGTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308\
Hamiltonian_double_C2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-9)-1)* 0.308)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2 = @(X) (Hamiltonian_double_C2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,9 (!!!)\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231\
Hamiltonian_double_C2_2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-10)-1)* 0.231)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,10 (!!!)\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.15 = |11-13|/13\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))-(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-10)-1)* 0.231)+(((13-11)-1)* 0.15)))));\
% generate a test function with specific normalizations\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,10, 11 (!!!)\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.077)))));\
% generate a test function with specific normalizations\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,11, 12 (!!!)\
% simulate TWELFTH case of 4 base pair mismatch,\
% in which we have TWO base pair mismatchES\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(8+2)^3;\
normalization_double_2 = 1/(2+4)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2, comes from the fact that\
% the quantity T_ij is equal to |2-13|/13 = 0.846. While\
% for the SECOND mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13, and FINALLY, the\
% FOURTH mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_quad = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+(((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_quad = @(X) (Hamiltonian_quad)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,4,11, 12 (!!!)\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.153 = |11-13|/13, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_triple_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9))))-(normalization_double_2 .*((((13-10)-1)* 0.231)+(((13-11)-1)* 0.153)+ (((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_triple_II = @(X) (Hamiltonian_triple_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 10,11, 12 (!!!)\
% simulate FOURTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 11, comes from the fact that\
% |10-13|/13 = 0.153, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.0769 = |12-13|/13, at 12.\
Hamiltonian_double_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_double_II = @(X) (Hamiltonian_double_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 11,12 (!!!)\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308, while the SECOND\
% T_ij factor comes from the fact that\
% 0.231 = |10-13|/13, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-13|/13 = 0.154.\
Hamiltonian_TRIPLE_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8))))-(normalization_double_2 .*((((13-9)-1)* 0.308)+(((13-10)-1)* 0.231) + (((13-11)-1)*0.154)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II = @(X) (Hamiltonian_TRIPLE_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 9,10,11 (!!!)\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 13, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |13-8|/13 = 0.3846 (!!!)\
Hamiltonian_C1_2 = exp(-((normalization_1_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_1_bmis *((((13-8)-1)*(0.3846))))));\
% generate a test function with specific normalizations\
func_C1_2 = @(X) (Hamiltonian_C1_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 8 (!!!)\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 13, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% |5-13|/13 = 11/16 approx 0.615\
Hamiltonian_C2 = exp(-((normalization_2_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_2_bmis .*((((13-5)-1)* 0.615)))));\
% generate a test function with specific normalizations\
func_C2_2 = @(X) (Hamiltonian_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 5 (!!!)\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 13, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.61538.\
Hamiltonian_C3 = exp(-((normalization_3_bm * (((13-1)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*(((13-2)-1)* 0.846)+ (((13-5)-1)* 0.61538))));\
% generate a test function with specific normalizations\
func_C3 = @(X) (Hamiltonian_C3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2 & 5 (!!!)\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.6154.\
Hamiltonian_C4 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
% generate a test function with specific normalizations\
func_C4 = @(X) (Hamiltonian_C4)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4 & 5 (!!!)\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-13|/13 = 0.3846, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.375.\
Hamiltonian_C5 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-8)-1)* 0.3846))+ (((16-10)-1)* 0.2307))));\
% generate a test function with specific normalizations\
func_C5 = @(X) (Hamiltonian_C5)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 8 & 10 (!!!)\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |10-13|/13 = 0.2307, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |11-13|/13 = 0.1538.\
Hamiltonian_C6 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))-(normalization_3_bmis .*((((13-10)-1)* 0.2307))+ (((13-11)-1)* 0.1538))));\
% generate a test function with specific normalizations\
func_C6 = @(X) (Hamiltonian_C6)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 10 & 11 (!!!)\
% SIMULATE MORE TARGET SEQUENCE CASES BY\
% CHANGING THE POSITION OF BINDING TO N=17\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 17, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |8-17|/17 = 0.529 (!!!)\
Hamiltonian_C3_1 = exp(-((normalization_1_bm * (((17-1)+(17-2)+(17-3)+(17-4)+(17-5)+(17-6)+(17-7)+(17-9)+(17-10)+(17-11)+(17-12)+(17-13)+(17-14)+(17-15)+(17-16))))-(normalization_1_bmis *(((17-8)-1)*(0.529)))));\
% generate a test function with specific normalizations\
func_C3_1 = @(X) (Hamiltonian_C3_1)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 8 (!!!)\
% simulate SECOND CASE (FROM THE THIRD CASE ABOVE)\
% for base pair mismatch, with same position of\
% binding, N = 17, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-17|/17 = 0.8823, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-17|/17 = 0.706.\
Hamiltonian_C3_2 = exp(-((normalization_3_bm * (((17-1)+(17-3)+(17-4)+(17-6)+(17-7)+(17-8)+(17-9)+(17-10)+(17-11)+(17-12)+(17-13)+(17-14)+(17-15))))-(normalization_3_bmis .*(((13-2)-1)* 0.8823)+ ((13-5)-1)* 0.706)));\
% generate a test function with specific normalizations\
func_C3_2 = @(X) (Hamiltonian_C3_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2 & 5 (!!!)\
% simulate THIRD CASE (FROM FIFTH CASE ABOVE) for base pair mismatch, with\'a0\
% same position of binding, N = 17, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-17|/17 = 0.529, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-17|/17 = 0.4118.\
Hamiltonian_C3_3 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-8)-1)* 0.529)+ (((16-10)-1)* 0.4118)))));\
% generate a test function with specific normalizations\
func_C3_3 = @(X) (Hamiltonian_C3_3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 8 & 10 (!!!)\
number_1=1;\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 13, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |13-8|/13 = 0.3846 (!!!)\
Hamiltonian_C1_2 = exp(-((normalization_1_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_1_bmis *((((13-8)-1)*(0.3846))))));\
% generate a test function with specific normalizations\
func_C1_2 = @(X) (Hamiltonian_C1_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 8 (!!!)\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 13, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% |5-13|/13 = 11/16 approx 0.615\
Hamiltonian_C2 = exp(-((normalization_2_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_2_bmis .*((((13-5)-1)* 0.615)))));\
% generate a test function with specific normalizations\
func_C2_2 = @(X) (Hamiltonian_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 5 (!!!)\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 13, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.61538.\
Hamiltonian_C3 = exp(-((normalization_3_bm * (((13-1)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*(((13-2)-1)* 0.846)+ (((13-5)-1)* 0.61538))));\
% generate a test function with specific normalizations\
func_C3 = @(X) (Hamiltonian_C3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2 & 5 (!!!)\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.6154.\
Hamiltonian_C4 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
% generate a test function with specific normalizations\
func_C4 = @(X) (Hamiltonian_C4)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4 & 5 (!!!)\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-13|/13 = 0.3846, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.375.\
Hamiltonian_C5 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-8)-1)* 0.3846))+ (((16-10)-1)* 0.2307))));\
% generate a test function with specific normalizations\
func_C5 = @(X) (Hamiltonian_C5)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 8 & 10 (!!!)\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |10-13|/13 = 0.2307, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |11-13|/13 = 0.1538.\
Hamiltonian_C6 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))-(normalization_3_bmis .*((((13-10)-1)* 0.2307))+ (((13-11)-1)* 0.1538))));\
% generate a test function with specific normalizations\
func_C6 = @(X) (Hamiltonian_C6)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 10 & 11 (!!!)\
% SIMULATE MORE TARGET SEQUENCE CASES BY\
% CHANGING THE POSITION OF BINDING TO N=17\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 17, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |8-17|/17 = 0.529 (!!!)\
Hamiltonian_C3_1 = exp(-((normalization_1_bm * (((17-1)+(17-2)+(17-3)+(17-4)+(17-5)+(17-6)+(17-7)+(17-9)+(17-10)+(17-11)+(17-12)+(17-13)+(17-14)+(17-15)+(17-16))))-(normalization_1_bmis *(((17-8)-1)*(0.529)))));\
% generate a test function with specific normalizations\
func_C3_1 = @(X) (Hamiltonian_C3_1)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 8 (!!!)\
% simulate SECOND CASE (FROM THE THIRD CASE ABOVE)\
% for base pair mismatch, with same position of\
% binding, N = 17, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-17|/17 = 0.8823, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-17|/17 = 0.706.\
Hamiltonian_C3_2 = exp(-((normalization_3_bm * (((17-1)+(17-3)+(17-4)+(17-6)+(17-7)+(17-8)+(17-9)+(17-10)+(17-11)+(17-12)+(17-13)+(17-14)+(17-15))))-(normalization_3_bmis .*(((13-2)-1)* 0.8823)+ ((13-5)-1)* 0.706)));\
% generate a test function with specific normalizations\
func_C3_2 = @(X) (Hamiltonian_C3_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2 & 5 (!!!)\
% simulate THIRD CASE (FROM FIFTH CASE ABOVE) for base pair mismatch, with\'a0\
% same position of binding, N = 17, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-17|/17 = 0.529, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-17|/17 = 0.4118.\
Hamiltonian_C3_3 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-8)-1)* 0.529)+ (((16-10)-1)* 0.4118)))));\
% generate a test function with specific normalizations\
func_C3_3 = @(X) (Hamiltonian_C3_3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 8 & 10 (!!!)\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 16, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, (N-8)/N = 0.5 (!!!)\
Hamiltonian_C1 = exp(-((normalization_1_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-5)+(16-6)+(16-7)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))-(normalization_1_bmis *(((16-8)-1)*(0.5)))));\
% generate a test function with specific normalizations\
func_C1 = @(X) (Hamiltonian_C1)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 8 (!!!)\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% (16-5)/16 = 11/16 approx 0.69\
Hamiltonian_C2 = exp(-((normalization_2_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))-(normalization_2_bmis .*(((16-5)-1)* 0.69))));\
% generate a test function with specific normalizations\
func_C2 = @(X) (Hamiltonian_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 5 (!!!)\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-16|/16 = 0.875, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C3 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))-(normalization_3_bmis .*((((16-2)-1)* 0.875)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C3 = @(X) (Hamiltonian_C3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2 & 5 (!!!)\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-16|/16 = 0.75, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C4 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))-(normalization_3_bmis .*((((16-4)-1)* 0.75)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C4 = @(X) (Hamiltonian_C4)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4 & 5 (!!!)\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-16|/16 = 0.50, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-16|/16 = 0.375.\
Hamiltonian_C5 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))-(normalization_3_bmis .*((((16-8)-1)* 0.5)+ (((16-10)-1)* 0.375)))));\
% generate a test function with specific normalizations\
func_C5 = @(X) (Hamiltonian_C5)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 8 & 10 (!!!)\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |14-16|/16 = 0.125, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |15-16|/16 = 0.0625.\
Hamiltonian_C6 = exp(-((normalization_3_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-8)+(16-10))))-(normalization_3_bmis .*((((16-14)-1)* 0.125)+ (((16-15)-1)* 0.0625)))));\
% generate a test function with specific normalizations\
func_C6 = @(X) (Hamiltonian_C6)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 14 & 15 (!!!)\
% REPEAT SIMILAR CASES AS ABOVE, BUT NOW, PUSH THE POSITION\
% OF BINDING FURTHER UP THE SEQUENCE TO N = 13\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 13, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |13-8|/13 = 0.3846 (!!!)\
Hamiltonian_C1_2 = exp(-((normalization_1_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_1_bmis *((((13-8)-1)*(0.3846))))));\
% generate a test function with specific normalizations\
func_C1_2 = @(X) (Hamiltonian_C1_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 8 (!!!)\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 13, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% |5-13|/13 = 11/16 approx 0.615\
Hamiltonian_C2 = exp(-((normalization_2_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_2_bmis .*((((13-5)-1)* 0.615)))));\
% generate a test function with specific normalizations\
func_C2_2 = @(X) (Hamiltonian_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 5 (!!!)\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 13, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.61538.\
Hamiltonian_C3 = exp(-((normalization_3_bm * (((13-1)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*(((13-2)-1)* 0.846)+ (((13-5)-1)* 0.61538))));\
% generate a test function with specific normalizations\
func_C3 = @(X) (Hamiltonian_C3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2 & 5 (!!!)\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.6154.\
Hamiltonian_C4 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
% generate a test function with specific normalizations\
func_C4 = @(X) (Hamiltonian_C4)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4 & 5 (!!!)\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-13|/13 = 0.3846, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.375.\
Hamiltonian_C5 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-8)-1)* 0.3846))+ (((16-10)-1)* 0.2307))));\
% generate a test function with specific normalizations\
func_C5 = @(X) (Hamiltonian_C5)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 8 & 10 (!!!)\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |10-13|/13 = 0.2307, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |11-13|/13 = 0.1538.\
Hamiltonian_C6 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))-(normalization_3_bmis .*((((13-10)-1)* 0.2307))+ (((13-11)-1)* 0.1538))));\
% generate a test function with specific normalizations\
func_C6 = @(X) (Hamiltonian_C6)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 10 & 11 (!!!)\
max(Hamiltonian_TRIPLE_II)\
max(Hamiltonian_TRIPLE_II, Hamiltonian_double_II)\
Hamiltonian_double_II\
max(Hamiltonian_TRIPLE_II, Hamiltonian_double_II, func_triple_II)\
max(Hamiltonian_TRIPLE_II, Hamiltonian_double_II, Hamiltonian_triple_II)\
Hamiltonian_triple_II\
max(Hamiltonian_TRIPLE_II, Hamiltonian_double_II,Hamiltonian_triple_II)\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
Hamiltonian_double_C2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,7 (!!!)\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-13|/13 = 0.538\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-6)-1)* 0.538)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,6 (!!!)\
15_sequences_Hamiltonian = [Hamiltonian_triple; Hamiltonian_triple_2;Hamiltonian_double;Hamiltonian_double_C2;\
15_sequences_Hamiltonian = [Hamiltonian_triple; Hamiltonian_triple_2;Hamiltonian_double;Hamiltonian_double_C2]\
sequences_Hamiltonian = [Hamiltonian_triple; Hamiltonian_triple_2;Hamiltonian_double;Hamiltonian_double_C2]\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-13|/13 = 0.385\
Hamiltonian_double_C2_2B = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-8)-1)* 0.385)))));\
% generate a test function with specific normalizations\
func_double_C2_2B = @(X) (Hamiltonian_double_C2_2B)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,8 (!!!)\
sequences_Hamiltonian = [Hamiltonian_triple; Hamiltonian_triple_2;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;]\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13\
Hamiltonian_triple_A_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.077)))));\
% generate a test function with specific normalizations\
func_triple_A_2 = @(X) (Hamiltonian_triple_A_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,11, 12 (!!!)\
sequences_Hamiltonian = [Hamiltonian_triple; Hamiltonian_triple_2;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; ]\
sequences_Hamiltonian = [Hamiltonian_triple; Hamiltonian_triple_2;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II]\
max(sequences_Hamiltonian)\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II]\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% |5-13|/13 = 11/16 approx 0.615\
Hamiltonian_C2_2 = exp(-((normalization_2_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_2_bmis .*((((13-5)-1)* 0.615)))));\
% generate a test function with specific normalizations\
func_C2_2 = @(X) (Hamiltonian_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 5 (!!!)\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2;\
]\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.6154.\
Hamiltonian_C4_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
% generate a test function with specific normalizations\
func_C4_2 = @(X) (Hamiltonian_C4_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4 & 5 (!!!)\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-13|/13 = 0.3846, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.375.\
Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-8)-1)* 0.3846))+ (((16-10)-1)* 0.2307))));\
% generate a test function with specific normalizations\
func_C5_2 = @(X) (Hamiltonian_C5_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 8 & 10 (!!!)\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3; Hamiltonian_C4_2; Hamiltonian_C5_2;\
]\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |10-13|/13 = 0.2307, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |11-13|/13 = 0.1538.\
Hamiltonian_C6_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))-(normalization_3_bmis .*((((13-10)-1)* 0.2307))+ (((13-11)-1)* 0.1538))));\
% generate a test function with specific normalizations\
func_C6_2 = @(X) (Hamiltonian_C6_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 10 & 11 (!!!)\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3]\
max(sequences_Hamiltonian_FIRSTfifteen)\
sequences_Hamiltonian\
Table = readtable('First6-Data.csv');\
Table_3 = readtable('PAMData.csv');\
Table_4 = readtable('Last14Data.csv');\
% define positions for terms in partition function\
I = 30;\
JI = 45;\
IJ=20;\
beta = 0.005;\
N = 16;\
N_1 = 13;\
% define possible cases of 3 mismatches\
number_1 = 1;\
number_2 = 2;\
number_3 = 3;\
J=3;\
lambda_mismatch = exp(-5/2);\
lambda_c = 0.025;\
lambda_p = 0.015;\
couplings_ij1 = exp(N-J);\
couplings_ij2 = N-J;\
hamiltonian_i1 = exp(couplings_ij1 * 1 * exp(lambda_mismatch * (N-J)));\
hamiltonian_i2 = exp(couplings_ij2 * 1) * exp(lambda_mismatch * (N-J));\
% generate test functions, given specific instances of binding energies\
func = @(X) (hamiltonian_i1.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated = @(X) (hamiltonian_i1.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_2 = @(X) (hamiltonian_i2.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_2 = @(X) (hamiltonian_i2.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii1 = @(X) exp(hamiltonian_ii)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 16, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, (N-8)/N = 0.5 (!!!)\
Hamiltonian_C1 = exp(-((normalization_1_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-5)+(16-6)+(16-7)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))-(normalization_1_bmis *(((16-8)-1)*(0.5)))));\
% generate a test function with specific normalizations\
func_C1 = @(X) (Hamiltonian_C1)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 8 (!!!)\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% (16-5)/16 = 11/16 approx 0.69\
Hamiltonian_C2 = exp(-((normalization_2_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))-(normalization_2_bmis .*(((16-5)-1)* 0.69))));\
% generate a test function with specific normalizations\
func_C2 = @(X) (Hamiltonian_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 5 (!!!)\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-16|/16 = 0.875, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C3 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))-(normalization_3_bmis .*((((16-2)-1)* 0.875)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C3 = @(X) (Hamiltonian_C3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2 & 5 (!!!)\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-16|/16 = 0.75, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C4 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))-(normalization_3_bmis .*((((16-4)-1)* 0.75)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C4 = @(X) (Hamiltonian_C4)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4 & 5 (!!!)\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-16|/16 = 0.50, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-16|/16 = 0.375.\
Hamiltonian_C5 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))-(normalization_3_bmis .*((((16-8)-1)* 0.5)+ (((16-10)-1)* 0.375)))));\
% generate a test function with specific normalizations\
func_C5 = @(X) (Hamiltonian_C5)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 8 & 10 (!!!)\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |14-16|/16 = 0.125, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |15-16|/16 = 0.0625.\
Hamiltonian_C6 = exp(-((normalization_3_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-8)+(16-10))))-(normalization_3_bmis .*((((16-14)-1)* 0.125)+ (((16-15)-1)* 0.0625)))));\
% generate a test function with specific normalizations\
func_C6 = @(X) (Hamiltonian_C6)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 14 & 15 (!!!)\
% REPEAT SIMILAR CASES AS ABOVE, BUT NOW, PUSH THE POSITION\
% OF BINDING FURTHER UP THE SEQUENCE TO N = 13\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 13, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |13-8|/13 = 0.3846 (!!!)\
Hamiltonian_C1_2 = exp(-((normalization_1_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_1_bmis *((((13-8)-1)*(0.3846))))));\
% generate a test function with specific normalizations\
func_C1_2 = @(X) (Hamiltonian_C1_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 8 (!!!)\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 13, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% |5-13|/13 = 11/16 approx 0.615\
Hamiltonian_C2_2 = exp(-((normalization_2_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_2_bmis .*((((13-5)-1)* 0.615)))));\
% generate a test function with specific normalizations\
func_C2_2 = @(X) (Hamiltonian_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 5 (!!!)\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 13, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.61538.\
Hamiltonian_C3 = exp(-((normalization_3_bm * (((13-1)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*(((13-2)-1)* 0.846)+ (((13-5)-1)* 0.61538))));\
% generate a test function with specific normalizations\
func_C3 = @(X) (Hamiltonian_C3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2 & 5 (!!!)\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.6154.\
Hamiltonian_C4_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
% generate a test function with specific normalizations\
func_C4_2 = @(X) (Hamiltonian_C4_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4 & 5 (!!!)\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-13|/13 = 0.3846, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.375.\
Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-8)-1)* 0.3846))+ (((16-10)-1)* 0.2307))));\
% generate a test function with specific normalizations\
func_C5_2 = @(X) (Hamiltonian_C5_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 8 & 10 (!!!)\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |10-13|/13 = 0.2307, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |11-13|/13 = 0.1538.\
Hamiltonian_C6_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))-(normalization_3_bmis .*((((13-10)-1)* 0.2307))+ (((13-11)-1)* 0.1538))));\
% generate a test function with specific normalizations\
func_C6_2 = @(X) (Hamiltonian_C6_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 10 & 11 (!!!)\
% SIMULATE MORE TARGET SEQUENCE CASES BY\
% CHANGING THE POSITION OF BINDING TO N=17\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 17, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |8-17|/17 = 0.529 (!!!)\
Hamiltonian_C3_1 = exp(-((normalization_1_bm * (((17-1)+(17-2)+(17-3)+(17-4)+(17-5)+(17-6)+(17-7)+(17-9)+(17-10)+(17-11)+(17-12)+(17-13)+(17-14)+(17-15)+(17-16))))-(normalization_1_bmis *(((17-8)-1)*(0.529)))));\
% generate a test function with specific normalizations\
func_C3_1 = @(X) (Hamiltonian_C3_1)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 8 (!!!)\
% simulate SECOND CASE (FROM THE THIRD CASE ABOVE)\
% for base pair mismatch, with same position of\
% binding, N = 17, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-17|/17 = 0.8823, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-17|/17 = 0.706.\
Hamiltonian_C3_2 = exp(-((normalization_3_bm * (((17-1)+(17-3)+(17-4)+(17-6)+(17-7)+(17-8)+(17-9)+(17-10)+(17-11)+(17-12)+(17-13)+(17-14)+(17-15))))-(normalization_3_bmis .*(((13-2)-1)* 0.8823)+ ((13-5)-1)* 0.706)));\
% generate a test function with specific normalizations\
func_C3_2 = @(X) (Hamiltonian_C3_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2 & 5 (!!!)\
% simulate THIRD CASE (FROM FIFTH CASE ABOVE) for base pair mismatch, with\'a0\
% same position of binding, N = 17, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-17|/17 = 0.529, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-17|/17 = 0.4118.\
Hamiltonian_C3_3 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-8)-1)* 0.529)+ (((16-10)-1)* 0.4118)))));\
% generate a test function with specific normalizations\
func_C3_3 = @(X) (Hamiltonian_C3_3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 8 & 10 (!!!)\
% WITH 15 SEQUENCES SO FAR, GENERATE 30 MORE. FOR\
% THE FIRST 15 ADDITIONAL SEQUENCES BELOW, USE\
% THE 3 BASE PAIR MISMATCH CASES TO SHOW THAT\
% BINDING CANNOT OCCUR.\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 13\
normalization_triple_bm = 1/(14+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-13|/13 = 0.769, and the THIRD mismatch factor\
% comes from |4-13|/13 = 0.6923.\
Hamiltonian_triple = exp(-((normalization_triple_bm * (((13-1)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_triple_bmis .*((((13-2)-1)* 0.846)+ (((13-3)-1)* 0.769)+(((13-4)-1)* 0.6923)))));\
% generate a test function with specific normalizations\
func_triple = @(X) (Hamiltonian_triple)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,3,4 (!!!)\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 13\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-13|/13 = 0.6923, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.615, and the THIRD T_ij factor comes\
% from the fact that |6-13|/13 = 0.5384.\
Hamiltonian_triple_2 = exp(-((normalization_triple_bm_1 * (((13-1)+(13-2)+(13-3)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_triple_bmis_1 .*((((13-4)-1)* 0.6923)+ (((13-5)-1)* 0.615)+(((13-6)-1)* 0.5384)))));\
% generate a test function with specific normalizations\
func_triple_2 = @(X) (Hamiltonian_triple_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,5,6 (!!!)\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-13|/13 = 0.692\
Hamiltonian_double = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-4)-1)* 0.692)))));\
% generate a test function with specific normalizations\
func_double_2 = @(X) (Hamiltonian_double)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,4 (!!!)\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-13|/13 = 0.538\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-6)-1)* 0.538)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,6 (!!!)\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,7 (!!!)\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2A = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-2)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2A = @(X) (Hamiltonian_double_C2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,7 (!!!)\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-13|/13 = 0.385\
Hamiltonian_double_C2_2B = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-8)-1)* 0.385)))));\
% generate a test function with specific normalizations\
func_double_C2_2B = @(X) (Hamiltonian_double_C2_2B)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,8 (!!!)\
% simulate EIGTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308\
Hamiltonian_double_C2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-10)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-9)-1)* 0.308)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2 = @(X) (Hamiltonian_double_C2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,9 (!!!)\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231\
Hamiltonian_double_C2_2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12)+(13-11))))-(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-10)-1)* 0.231)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,10 (!!!)\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.15 = |11-13|/13\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))-(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-10)-1)* 0.231)+(((13-11)-1)* 0.15)))));\
% generate a test function with specific normalizations\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,10, 11 (!!!)\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13\
Hamiltonian_triple_A_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.077)))));\
% generate a test function with specific normalizations\
func_triple_A_2 = @(X) (Hamiltonian_triple_A_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,11, 12 (!!!)\
% simulate TWELFTH case of 4 base pair mismatch,\
% in which we have TWO base pair mismatchES\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(8+2)^3;\
normalization_double_2 = 1/(2+4)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2, comes from the fact that\
% the quantity T_ij is equal to |2-13|/13 = 0.846. While\
% for the SECOND mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13, and FINALLY, the\
% FOURTH mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_quad = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-2)-1)* 0.846)+(((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_quad = @(X) (Hamiltonian_quad)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,4,11, 12 (!!!)\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.153 = |11-13|/13, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_triple_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9))))-(normalization_double_2 .*((((13-10)-1)* 0.231)+(((13-11)-1)* 0.153)+ (((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_triple_II = @(X) (Hamiltonian_triple_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 10,11, 12 (!!!)\
% simulate FOURTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 11, comes from the fact that\
% |10-13|/13 = 0.153, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.0769 = |12-13|/13, at 12.\
Hamiltonian_double_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))-(normalization_double_2 .*((((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_double_II = @(X) (Hamiltonian_double_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 11,12 (!!!)\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308, while the SECOND\
% T_ij factor comes from the fact that\
% 0.231 = |10-13|/13, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-13|/13 = 0.154.\
Hamiltonian_TRIPLE_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8))))-(normalization_double_2 .*((((13-9)-1)* 0.308)+(((13-10)-1)* 0.231) + (((13-11)-1)*0.154)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II = @(X) (Hamiltonian_TRIPLE_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 9,10,11 (!!!)\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3]\
sequences_Hamiltonian\
sequences_Hamiltonian_SECONDfifteen\
max(sequences_Hamiltonian_SECONDfifteen)\
max(sequences_Hamiltonian_FIRSTfifteen)\
Hamiltonian_C1 = exp(-((normalization_1_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-5)+(16-6)+(16-7)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))-(normalization_1_bmis *(((16-8)-1)*(0.5)))));\
Hamiltonian_C!\
Hamiltonian_C1\
Hamiltonian_C4_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
Hamiltonian_C4_2\
Hamiltonian_C4_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
Hamiltonian_C4_2\
Hamiltonian_C4_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
Hamiltonian_C4_2\
Hamiltonian_C5_2\
Hamiltonian_C3\
normalization_3_bm = 1/(14+2+1)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.6154.\
Hamiltonian_C4_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
% generate a test function with specific normalizations\
func_C4_2 = @(X) (Hamiltonian_C4_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
Hamiltonian_C4_2\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.6154.\
Hamiltonian_C4_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
% generate a test function with specific normalizations\
func_C4_2 = @(X) (Hamiltonian_C4_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
Hamiltonian_C4_2\
Hamiltonian_C4_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))-(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
Hamiltonian_C4_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
Hamiltonian_C4_2\
Hamiltonian_C2 = exp(-((normalization_2_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))-(normalization_2_bmis .*(((16-5)-1)* 0.69))));\
Hamiltonian_C2\
Hamiltonian_C2 = exp(-((normalization_2_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_2_bmis .*(((16-5)-1)* 0.69))));\
Hamiltonian_C2\
Hamiltonian_C1 = exp(-((normalization_1_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-5)+(16-6)+(16-7)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))-(normalization_1_bmis *(((16-8)-1)*(0.5)))));\
Hamiltonian_C1 = exp(-((normalization_1_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-5)+(16-6)+(16-7)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_1_bmis *(((16-8)-1)*(0.5)))));\
Hamiltonian_C1\
Table = readtable('First6-Data.csv');\
Table_3 = readtable('PAMData.csv');\
Table_4 = readtable('Last14Data.csv');\
% define positions for terms in partition function\
I = 30;\
JI = 45;\
IJ=20;\
beta = 0.005;\
N = 16;\
N_1 = 13;\
% define possible cases of 3 mismatches\
number_1 = 1;\
number_2 = 2;\
number_3 = 3;\
J=3;\
lambda_mismatch = exp(-5/2);\
lambda_c = 0.025;\
lambda_p = 0.015;\
couplings_ij1 = exp(N-J);\
couplings_ij2 = N-J;\
hamiltonian_i1 = exp(couplings_ij1 * 1 * exp(lambda_mismatch * (N-J)));\
hamiltonian_i2 = exp(couplings_ij2 * 1) * exp(lambda_mismatch * (N-J));\
% generate test functions, given specific instances of binding energies\
func = @(X) (hamiltonian_i1.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated = @(X) (hamiltonian_i1.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_2 = @(X) (hamiltonian_i2.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_2 = @(X) (hamiltonian_i2.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii1 = @(X) exp(hamiltonian_ii)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 16, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, (N-8)/N = 0.5 (!!!)\
Hamiltonian_C1 = exp(-((normalization_1_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-5)+(16-6)+(16-7)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_1_bmis *(((16-8)-1)*(0.5)))));\
% generate a test function with specific normalizations\
func_C1 = @(X) (Hamiltonian_C1)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 8 (!!!)\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% (16-5)/16 = 11/16 approx 0.69\
Hamiltonian_C2 = exp(-((normalization_2_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_2_bmis .*(((16-5)-1)* 0.69))));\
% generate a test function with specific normalizations\
func_C2 = @(X) (Hamiltonian_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 5 (!!!)\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-16|/16 = 0.875, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C3 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-2)-1)* 0.875)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C3 = @(X) (Hamiltonian_C3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2 & 5 (!!!)\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-16|/16 = 0.75, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C4 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-4)-1)* 0.75)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C4 = @(X) (Hamiltonian_C4)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4 & 5 (!!!)\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-16|/16 = 0.50, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-16|/16 = 0.375.\
Hamiltonian_C5 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-8)-1)* 0.5)+ (((16-10)-1)* 0.375)))));\
% generate a test function with specific normalizations\
func_C5 = @(X) (Hamiltonian_C5)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 8 & 10 (!!!)\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |14-16|/16 = 0.125, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |15-16|/16 = 0.0625.\
Hamiltonian_C6 = exp(-((normalization_3_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-8)+(16-10))))+(normalization_3_bmis .*((((16-14)-1)* 0.125)+ (((16-15)-1)* 0.0625)))));\
% generate a test function with specific normalizations\
func_C6 = @(X) (Hamiltonian_C6)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 14 & 15 (!!!)\
% REPEAT SIMILAR CASES AS ABOVE, BUT NOW, PUSH THE POSITION\
% OF BINDING FURTHER UP THE SEQUENCE TO N = 13\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 13, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |13-8|/13 = 0.3846 (!!!)\
Hamiltonian_C1_2 = exp(-((normalization_1_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_1_bmis *((((13-8)-1)*(0.3846))))));\
% generate a test function with specific normalizations\
func_C1_2 = @(X) (Hamiltonian_C1_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 8 (!!!)\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 13, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% |5-13|/13 = 11/16 approx 0.615\
Hamiltonian_C2_2 = exp(-((normalization_2_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_2_bmis .*((((13-5)-1)* 0.615)))));\
% generate a test function with specific normalizations\
func_C2_2 = @(X) (Hamiltonian_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 5 (!!!)\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 13, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.61538.\
Hamiltonian_C3 = exp(-((normalization_3_bm * (((13-1)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*(((13-2)-1)* 0.846)+ (((13-5)-1)* 0.61538))));\
% generate a test function with specific normalizations\
func_C3 = @(X) (Hamiltonian_C3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2 & 5 (!!!)\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.6154.\
Hamiltonian_C4_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
% generate a test function with specific normalizations\
func_C4_2 = @(X) (Hamiltonian_C4_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4 & 5 (!!!)\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-13|/13 = 0.3846, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.375.\
Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-8)-1)* 0.3846))+ (((16-10)-1)* 0.2307))));\
% generate a test function with specific normalizations\
func_C5_2 = @(X) (Hamiltonian_C5_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 8 & 10 (!!!)\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |10-13|/13 = 0.2307, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |11-13|/13 = 0.1538.\
Hamiltonian_C6_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_3_bmis .*((((13-10)-1)* 0.2307))+ (((13-11)-1)* 0.1538))));\
% generate a test function with specific normalizations\
func_C6_2 = @(X) (Hamiltonian_C6_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 10 & 11 (!!!)\
% SIMULATE MORE TARGET SEQUENCE CASES BY\
% CHANGING THE POSITION OF BINDING TO N=17\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 17, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |8-17|/17 = 0.529 (!!!)\
Hamiltonian_C3_1 = exp(-((normalization_1_bm * (((17-1)+(17-2)+(17-3)+(17-4)+(17-5)+(17-6)+(17-7)+(17-9)+(17-10)+(17-11)+(17-12)+(17-13)+(17-14)+(17-15)+(17-16))))+(normalization_1_bmis *(((17-8)-1)*(0.529)))));\
% generate a test function with specific normalizations\
func_C3_1 = @(X) (Hamiltonian_C3_1)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at position of mismatch, 8 (!!!)\
% simulate SECOND CASE (FROM THE THIRD CASE ABOVE)\
% for base pair mismatch, with same position of\
% binding, N = 17, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-17|/17 = 0.8823, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-17|/17 = 0.706.\
Hamiltonian_C3_2 = exp(-((normalization_3_bm * (((17-1)+(17-3)+(17-4)+(17-6)+(17-7)+(17-8)+(17-9)+(17-10)+(17-11)+(17-12)+(17-13)+(17-14)+(17-15))))+(normalization_3_bmis .*(((13-2)-1)* 0.8823)+ ((13-5)-1)* 0.706)));\
% generate a test function with specific normalizations\
func_C3_2 = @(X) (Hamiltonian_C3_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2 & 5 (!!!)\
% simulate THIRD CASE (FROM FIFTH CASE ABOVE) for base pair mismatch, with\'a0\
% same position of binding, N = 17, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(14+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-17|/17 = 0.529, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-17|/17 = 0.4118.\
Hamiltonian_C3_3 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-8)-1)* 0.529)+ (((16-10)-1)* 0.4118)))));\
% generate a test function with specific normalizations\
func_C3_3 = @(X) (Hamiltonian_C3_3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 8 & 10 (!!!)\
% WITH 15 SEQUENCES SO FAR, GENERATE 30 MORE. FOR\
% THE FIRST 15 ADDITIONAL SEQUENCES BELOW, USE\
% THE 3 BASE PAIR MISMATCH CASES TO SHOW THAT\
% BINDING CANNOT OCCUR.\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 13\
normalization_triple_bm = 1/(10+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-13|/13 = 0.769, and the THIRD mismatch factor\
% comes from |4-13|/13 = 0.6923.\
Hamiltonian_triple = exp(-((normalization_triple_bm * (((13-1)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_triple_bmis .*((((13-2)-1)* 0.846)+ (((13-3)-1)* 0.769)+(((13-4)-1)* 0.6923)))));\
% generate a test function with specific normalizations\
func_triple = @(X) (Hamiltonian_triple)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,3,4 (!!!)\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 13\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-13|/13 = 0.6923, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.615, and the THIRD T_ij factor comes\
% from the fact that |6-13|/13 = 0.5384.\
Hamiltonian_triple_2 = exp(-((normalization_triple_bm_1 * (((13-1)+(13-2)+(13-3)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_triple_bmis_1 .*((((13-4)-1)* 0.6923)+ (((13-5)-1)* 0.615)+(((13-6)-1)* 0.5384)))));\
% generate a test function with specific normalizations\
func_triple_2 = @(X) (Hamiltonian_triple_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,5,6 (!!!)\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-13|/13 = 0.692\
Hamiltonian_double = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-4)-1)* 0.692)))));\
% generate a test function with specific normalizations\
func_double_2 = @(X) (Hamiltonian_double)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,4 (!!!)\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-13|/13 = 0.538\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-6)-1)* 0.538)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,6 (!!!)\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,7 (!!!)\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2A = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-2)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2A = @(X) (Hamiltonian_double_C2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,7 (!!!)\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-13|/13 = 0.385\
Hamiltonian_double_C2_2B = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-8)-1)* 0.385)))));\
% generate a test function with specific normalizations\
func_double_C2_2B = @(X) (Hamiltonian_double_C2_2B)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,8 (!!!)\
% simulate EIGTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308\
Hamiltonian_double_C2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-9)-1)* 0.308)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2 = @(X) (Hamiltonian_double_C2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,9 (!!!)\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231\
Hamiltonian_double_C2_2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-10)-1)* 0.231)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,10 (!!!)\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.15 = |11-13|/13\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-10)-1)* 0.231)+(((13-11)-1)* 0.15)))));\
% generate a test function with specific normalizations\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,10, 11 (!!!)\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13\
Hamiltonian_triple_A_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))+(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.077)))));\
% generate a test function with specific normalizations\
func_triple_A_2 = @(X) (Hamiltonian_triple_A_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 4,11, 12 (!!!)\
% simulate TWELFTH case of 4 base pair mismatch,\
% in which we have TWO base pair mismatchES\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(8+2)^3;\
normalization_double_2 = 1/(2+4)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2, comes from the fact that\
% the quantity T_ij is equal to |2-13|/13 = 0.846. While\
% for the SECOND mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13, and FINALLY, the\
% FOURTH mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_quad = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+(((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_quad = @(X) (Hamiltonian_quad)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 2,4,11, 12 (!!!)\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.153 = |11-13|/13, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_triple_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9))))+(normalization_double_2 .*((((13-10)-1)* 0.231)+(((13-11)-1)* 0.153)+ (((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_triple_II = @(X) (Hamiltonian_triple_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 10,11, 12 (!!!)\
% simulate FOURTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 11, comes from the fact that\
% |10-13|/13 = 0.153, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.0769 = |12-13|/13, at 12.\
Hamiltonian_double_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))+(normalization_double_2 .*((((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_double_II = @(X) (Hamiltonian_double_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 11,12 (!!!)\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308, while the SECOND\
% T_ij factor comes from the fact that\
% 0.231 = |10-13|/13, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-13|/13 = 0.154.\
Hamiltonian_TRIPLE_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8))))+(normalization_double_2 .*((((13-9)-1)* 0.308)+(((13-10)-1)* 0.231) + (((13-11)-1)*0.154)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II = @(X) (Hamiltonian_TRIPLE_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% generate calculation for change in transition probability\
% at positions of mismatch, 9,10,11 (!!!)\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3; Hamiltonian_C4_2; Hamiltonian_C5_2;\
]\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3]\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II]\
demo()\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II]\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3]\
demo()\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
demo()\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; amiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2]\
demo()\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; amiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2]\
demo()\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; amiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2]\
Hamiltonian_triple_2_2A = exp(-((normalization_triple_bm_1 * (((15-1)+(15-2)+(15-3)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_triple_bmis_1 .*((((15-4)-1)* 0.733)+ (((15-5)-1)* 0.667)+(((15-6)-1)* 0.600)))));\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; amiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2]\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2; Hamiltonian_triple_2_2A; Hamiltonian_double_C2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2; Hamiltonian_quad; Hamiltonian_triple_II; amiltonian_double_II_2 ; Hamiltonian_TRIPLE_II]\
% READ IN TABLE DATA\
Table = readtable('First6-Data.csv');\
Table_3 = readtable('PAMData.csv');\
Table_4 = readtable('Last14Data.csv');\
% define positions for terms in partition function\
I = 30;\
JI = 45;\
IJ=20;\
beta = 0.005;\
N = 16;\
N_1 = 13;\
% define possible cases of 3 mismatches\
number_1 = 1;\
number_2 = 2;\
number_3 = 3;\
J=3;\
lambda_mismatch = exp(-5/2);\
lambda_c = 0.025;\
lambda_p = 0.015;\
couplings_ij1 = exp(N-J);\
couplings_ij2 = N-J;\
hamiltonian_i1 = exp(couplings_ij1 * 1 * exp(lambda_mismatch * (N-J)));\
hamiltonian_i2 = exp(couplings_ij2 * 1) * exp(lambda_mismatch * (N-J));\
% generate test functions, given specific instances of binding energies\
func = @(X) (hamiltonian_i1.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated = @(X) (hamiltonian_i1.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_2 = @(X) (hamiltonian_i2.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_2 = @(X) (hamiltonian_i2.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii1 = @(X) exp(hamiltonian_ii)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 16, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, (N-8)/N = 0.5 (!!!)\
Hamiltonian_C1 = exp(-((normalization_1_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-5)+(16-6)+(16-7)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_1_bmis *(((16-8)-1)*(0.5)))));\
% generate a test function with specific normalizations\
func_C1 = @(X) (Hamiltonian_C1)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% (16-5)/16 = 11/16 approx 0.69\
Hamiltonian_C2 = exp(-((normalization_2_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_2_bmis .*(((16-5)-1)* 0.69))));\
% generate a test function with specific normalizations\
func_C2 = @(X) (Hamiltonian_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-16|/16 = 0.875, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C3 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-2)-1)* 0.875)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C3 = @(X) (Hamiltonian_C3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-16|/16 = 0.75, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C4 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-4)-1)* 0.75)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C4 = @(X) (Hamiltonian_C4)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-16|/16 = 0.50, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-16|/16 = 0.375.\
Hamiltonian_C5 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-8)-1)* 0.5)+ (((16-10)-1)* 0.375)))));\
% generate a test function with specific normalizations\
func_C5 = @(X) (Hamiltonian_C5)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |14-16|/16 = 0.125, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |15-16|/16 = 0.0625.\
Hamiltonian_C6 = exp(-((normalization_3_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-8)+(16-10))))+(normalization_3_bmis .*((((16-14)-1)* 0.125)+ (((16-15)-1)* 0.0625)))));\
% generate a test function with specific normalizations\
func_C6 = @(X) (Hamiltonian_C6)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% REPEAT SIMILAR CASES AS ABOVE, BUT NOW, PUSH THE POSITION\
% OF BINDING FURTHER UP THE SEQUENCE TO N = 13\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 13, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |13-8|/13 = 0.3846 (!!!)\
Hamiltonian_C1_2 = exp(-((normalization_1_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_1_bmis *((((13-8)-1)*(0.3846))))));\
% generate a test function with specific normalizations\
func_C1_2 = @(X) (Hamiltonian_C1_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 13, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% |5-13|/13 = 11/16 approx 0.615\
Hamiltonian_C2_2 = exp(-((normalization_2_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_2_bmis .*((((13-5)-1)* 0.615)))));\
% generate a test function with specific normalizations\
func_C2_2 = @(X) (Hamiltonian_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 13, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.61538.\
Hamiltonian_C3_2 = exp(-((normalization_3_bm * (((13-1)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*(((13-2)-1)* 0.846)+ (((13-5)-1)* 0.61538))));\
% generate a test function with specific normalizations\
func_C3_2 = @(X) (Hamiltonian_C3_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.6154.\
Hamiltonian_C4_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
% generate a test function with specific normalizations\
func_C4_2 = @(X) (Hamiltonian_C4_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-13|/13 = 0.3846, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.375.\
Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-8)-1)* 0.3846))+ (((16-10)-1)* 0.2307))));\
% generate a test function with specific normalizations\
func_C5_2 = @(X) (Hamiltonian_C5_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |10-13|/13 = 0.2307, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |11-13|/13 = 0.1538.\
Hamiltonian_C6_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_3_bmis .*((((13-10)-1)* 0.2307))+ (((13-11)-1)* 0.1538))));\
% generate a test function with specific normalizations\
func_C6_2 = @(X) (Hamiltonian_C6_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% SIMULATE MORE TARGET SEQUENCE CASES BY\
% CHANGING THE POSITION OF BINDING TO N=17\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 17, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |8-17|/17 = 0.529 (!!!)\
Hamiltonian_C3_1 = exp(-((normalization_1_bm * (((17-1)+(17-2)+(17-3)+(17-4)+(17-5)+(17-6)+(17-7)+(17-9)+(17-10)+(17-11)+(17-12)+(17-13)+(17-14)+(17-15)+(17-16))))+(normalization_1_bmis *(((17-8)-1)*(0.529)))));\
% generate a test function with specific normalizations\
func_C3_1 = @(X) (Hamiltonian_C3_1)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND CASE (FROM THE THIRD CASE ABOVE)\
% for base pair mismatch, with same position of\
% binding, N = 17, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-17|/17 = 0.8823, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-17|/17 = 0.706.\
Hamiltonian_C3_2 = exp(-((normalization_3_bm * (((17-1)+(17-3)+(17-4)+(17-6)+(17-7)+(17-8)+(17-9)+(17-10)+(17-11)+(17-12)+(17-13)+(17-14)+(17-15))))+(normalization_3_bmis .*(((13-2)-1)* 0.8823)+ ((13-5)-1)* 0.706)));\
% generate a test function with specific normalizations\
func_C3_2 = @(X) (Hamiltonian_C3_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD CASE (FROM FIFTH CASE ABOVE) for base pair mismatch, with\'a0\
% same position of binding, N = 17, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-17|/17 = 0.529, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-17|/17 = 0.4118.\
Hamiltonian_C3_3 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-8)-1)* 0.529)+ (((16-10)-1)* 0.4118)))));\
% generate a test function with specific normalizations\
func_C3_3 = @(X) (Hamiltonian_C3_3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% WITH 15 SEQUENCES SO FAR, GENERATE 30 MORE. FOR\
% THE FIRST 15 ADDITIONAL SEQUENCES BELOW, USE\
% THE 3 BASE PAIR MISMATCH CASES TO SHOW THAT\
% BINDING CANNOT OCCUR.\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 13\
normalization_triple_bm = 1/(10+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-13|/13 = 0.769, and the THIRD mismatch factor\
% comes from |4-13|/13 = 0.6923.\
Hamiltonian_triple = exp(-((normalization_triple_bm * (((13-1)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_triple_bmis .*((((13-2)-1)* 0.846)+ (((13-3)-1)* 0.769)+(((13-4)-1)* 0.6923)))));\
% generate a test function with specific normalizations\
func_triple = @(X) (Hamiltonian_triple)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 13\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-13|/13 = 0.6923, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.615, and the THIRD T_ij factor comes\
% from the fact that |6-13|/13 = 0.5384.\
Hamiltonian_triple_2 = exp(-((normalization_triple_bm_1 * (((13-1)+(13-2)+(13-3)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_triple_bmis_1 .*((((13-4)-1)* 0.6923)+ (((13-5)-1)* 0.615)+(((13-6)-1)* 0.5384)))));\
% generate a test function with specific normalizations\
func_triple_2 = @(X) (Hamiltonian_triple_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-13|/13 = 0.692\
Hamiltonian_double = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-4)-1)* 0.692)))));\
% generate a test function with specific normalizations\
func_double_2 = @(X) (Hamiltonian_double)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-13|/13 = 0.538\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-6)-1)* 0.538)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2A = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-2)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2A = @(X) (Hamiltonian_double_C2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-13|/13 = 0.385\
Hamiltonian_double_C2_2B = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-8)-1)* 0.385)))));\
% generate a test function with specific normalizations\
func_double_C2_2B = @(X) (Hamiltonian_double_C2_2B)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate EIGTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308\
Hamiltonian_double_C2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-9)-1)* 0.308)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2 = @(X) (Hamiltonian_double_C2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231\
Hamiltonian_double_C2_2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-10)-1)* 0.231)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.15 = |11-13|/13\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-10)-1)* 0.231)+(((13-11)-1)* 0.15)))));\
% generate a test function with specific normalizations\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13\
Hamiltonian_triple_A_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))+(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.077)))));\
% generate a test function with specific normalizations\
func_triple_A_2 = @(X) (Hamiltonian_triple_A_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TWELFTH case of 4 base pair mismatch,\
% in which we have TWO base pair mismatchES\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(8+2)^3;\
normalization_double_2 = 1/(2+4)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2, comes from the fact that\
% the quantity T_ij is equal to |2-13|/13 = 0.846. While\
% for the SECOND mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13, and FINALLY, the\
% FOURTH mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_quad = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+(((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_quad = @(X) (Hamiltonian_quad)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.153 = |11-13|/13, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_triple_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9))))+(normalization_double_2 .*((((13-10)-1)* 0.231)+(((13-11)-1)* 0.153)+ (((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_triple_II = @(X) (Hamiltonian_triple_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 11, comes from the fact that\
% |10-13|/13 = 0.153, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.0769 = |12-13|/13, at 12.\
Hamiltonian_double_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))+(normalization_double_2 .*((((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_double_II = @(X) (Hamiltonian_double_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308, while the SECOND\
% T_ij factor comes from the fact that\
% 0.231 = |10-13|/13, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-13|/13 = 0.154.\
Hamiltonian_TRIPLE_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8))))+(normalization_double_2 .*((((13-9)-1)* 0.308)+(((13-10)-1)* 0.231) + (((13-11)-1)*0.154)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II = @(X) (Hamiltonian_TRIPLE_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% NOW, WE WILL GENERATE THE LAST 15 SEQUENCES, FOR THE FINAL THIRD PLOT,\
% BY TAKING ALL OF THE MUTATIONS IN THE PREVIOUS 15 AND\
% CHANGING THE POSITION OF BINDING. ALL OF THE BASE\
% MISMATCH PATTERNS ARE THE SAME.\
% THE BINDING POSITION WILL BE\
% CHANGED TO N = 15.\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 15\
normalization_triple_bm = 1/(11+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-15|/15 = 0.8, and the THIRD mismatch factor\
% comes from |4-15|/15 = 0.733\
Hamiltonian_triple_2 = exp(-((normalization_triple_bm * (((15-1)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_triple_bmis .*((((15-2)-1)* 0.867)+ (((15-3)-1)* 0.800)+(((15-4)-1)* 0.733)))));\
% generate a test function with specific normalizations\
func_triple_2 = @(X) (Hamiltonian_triple_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 15\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-15|/15 = 2/3, and the THIRD T_ij factor comes\
% from the fact that |6-15|/15 = 0.6\
Hamiltonian_triple_2_2A = exp(-((normalization_triple_bm_1 * (((15-1)+(15-2)+(15-3)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_triple_bmis_1 .*((((15-4)-1)* 0.733)+ (((15-5)-1)* 0.667)+(((15-6)-1)* 0.600)))));\
% generate a test function with specific normalizations\
func_triple_2_2A = @(X) (Hamiltonian_triple_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-15|/15 = 0.733\
Hamiltonian_double_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-4)-1)* 0.733)))));\
% generate a test function with specific normalizations\
func_double_2_2 = @(X) (Hamiltonian_double_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-15|/15 = 0.6\
Hamiltonian_double_C2_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-6)-1)* 0.600)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-15|/15 = 0.533\
Hamiltonian_double_C2_2_2A = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-7)-1)* 0.533)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2A = @(X) (Hamiltonian_double_C2_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-15|/15 = 0.533\
Hamiltonian_double_C2_2A_2A = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-2)+(15-5)+(15-6)+(15-8)+(15-9)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-7)-1)* 0.533)))));\
% generate a test function with specific normalizations\
func_double_C2_2A_2A = @(X) (Hamiltonian_double_C2_2A_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-15|/15 = 0.467\
Hamiltonian_double_C2_2B_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-9)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-8)-1)* 0.467)))));\
% generate a test function with specific normalizations\
func_double_C2_2B_2 = @(X) (Hamiltonian_double_C2_2B_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate EIGHTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-15|/15 = 0.4\
Hamiltonian_double_C2_2_2_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-9)-1)* 0.400)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3\
Hamiltonian_double_C2_2_2_2_2A = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-10)-1)* 0.333)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2_2A = @(X) (Hamiltonian_double_C2_2_2_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.267 = |11-15|/15\
Hamiltonian_triple_A_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-12))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-10)-1)* 0.333)+(((15-11)-1)* 0.267)))));\
% generate a test function with specific normalizations\
func_triple_A_2 = @(X) (Hamiltonian_triple_A_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-15|/15 = 0.267, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 1/5 = |12-15|/15\
Hamiltonian_triple_A_2_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-11)-1)* 0.267)+(((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_triple_A_2_2 = @(X) (Hamiltonian_triple_A_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TWELFTH case of 4 base pair mismatch,\
% in which we have TWO base pair mismatchES\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 15\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+4)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2, comes from the fact that\
% the quantity T_ij is equal to |2-15|/15 = 0.867. While\
% for the SECOND mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-15|/15 = 0.267, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 1/5 = |12-15|/15, and FINALLY, the\
% FOURTH mismatch factor comes from\
% the fact that 3/15 = 1/5\
Hamiltonian_quad_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+(((15-4)-1)* 0.733)+ (((15-11)-1)* 0.267)+(((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_quad_2 = @(X) (Hamiltonian_quad_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3 , while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.267 = |11-15|/15, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 3/15 = 1/5\
Hamiltonian_triple_II_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9))))+(normalization_double_2 .*((((15-10)-1)* 0.333)+(((15-11)-1)* 0.267)+ (((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_triple_II_2 = @(X) (Hamiltonian_triple_II_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 11, comes from the fact that\
% |10-15|/15 = 1/3, while finally, the SECOND\
% T_ij factor comes from the fact that\
%  1/5 = |12-15|/15, at 12.\
Hamiltonian_double_II_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10))))+(normalization_double_2 .*((((15-11)-1)* 0.333)+(((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_double_II_2 = @(X) (Hamiltonian_double_II_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-15|/15 = 0.400, while the SECOND\
% T_ij factor comes from the fact that\
% 1/3 = |10-15|/15, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-15|/15 = 0.267.\
Hamiltonian_TRIPLE_II_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8))))+(normalization_double_2 .*((((15-9)-1)* 0.400)+(((15-10)-1)* 0.333) + (((15-11)-1)*0.267)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II_2 = @(X) (Hamiltonian_TRIPLE_II_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% SPARE CODE FOR OLD HAMILTONIANS AND TEST FUNCTION\
% hamiltonian_test_13 = exp(-((normalization * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+ 0.5*(((13-7)-1)*(1-0.4))));\
% hamiltonian_test_16 = exp(-((normalization * (((16-1)+(16-2)+(16-3)+(16-4)+(16-5)+(16-6)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12))))+ 0.5*(((13-7)-1)*(1-0.4))));\
% func_truncated_ii_test_2 = @(X) exp(hamiltonian_ii_test)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; amiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2]\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2]\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sequences_Hamiltonian_SECONDfifteen\
sequences_Hamiltonian_FIRSTfifteen\
length(sequences_Hamiltonian_FIRSTfifteen)\
length(sequences_Hamiltonian_SECONDfifteen)\
length(sequences_Hamiltonian_THIRDfifteen)\
xticks([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]);\
xticks([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]);xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});yticks([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,20,20);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y)\
x\
x = linspace(0,15,20);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y)\
x = linspace(0,15,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y)\
xticks([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]);xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});yticks([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,15,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y)\
xticks([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]);xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});yticks([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
Error using yticks (line 33)\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303], 'descend')\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303], 'ascend')\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,15,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y)\
xticks([10 20 30 40 50 60 70 80 90 100 110 120 130 140 150]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
yticks(sorted_values)\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,15,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([0 100 200 300 400 500 600 700 800 900 1000 1100 1200 1300 1400]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
yticks(sorted_values)\
legend(\{'Hamiltonian', 'Sequence Representative'\})\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,1400,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([0 100 200 300 400 500 600 700 800 900 1000 1100 1200 1300 1400]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
yticks(sorted_values)\
legend(\{'Hamiltonian', 'Sequence Representative'\})\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,14000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
yticks(sorted_values)\
legend(\{'Hamiltonian', 'Sequence Representative'\})\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,14000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
yticks(sorted_values)\
legend(\{'Hamiltonian, Sequence Representative'\})\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,14000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
yticks(sorted_values)\
legend(\{'Hamiltonian Value for a given sequence representative'\})\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,14000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
set(xticklabels , 'Rotation' , 60);\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,14000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(75)\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,15000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(60)\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,15000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(45)\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,15000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
generate_plots_hamiltonian()\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2]\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
makehamiltonian()\
demo()\
makehamiltonian()\
% READ IN TABLE DATA\
Table = readtable('First6-Data.csv');\
Table_3 = readtable('PAMData.csv');\
Table_4 = readtable('Last14Data.csv');\
% define positions for terms in partition function\
I = 30;\
JI = 45;\
IJ=20;\
beta = 0.005;\
N = 16;\
N_1 = 13;\
% define possible cases of 3 mismatches\
number_1 = 1;\
number_2 = 2;\
number_3 = 3;\
J=3;\
lambda_mismatch = exp(-5/2);\
lambda_c = 0.025;\
lambda_p = 0.015;\
couplings_ij1 = exp(N-J);\
couplings_ij2 = N-J;\
hamiltonian_i1 = exp(couplings_ij1 * 1 * exp(lambda_mismatch * (N-J)));\
hamiltonian_i2 = exp(couplings_ij2 * 1) * exp(lambda_mismatch * (N-J));\
% generate test functions, given specific instances of binding energies\
func = @(X) (hamiltonian_i1.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated = @(X) (hamiltonian_i1.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_2 = @(X) (hamiltonian_i2.* exp(X))./(1 + (lambda_p .* exp(- beta * Table_3\{IJ,8\})) + (lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_2 = @(X) (hamiltonian_i2.* exp(X))./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_truncated_ii1 = @(X) exp(hamiltonian_ii)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 16, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, (N-8)/N = 0.5 (!!!)\
Hamiltonian_C1 = exp(-((normalization_1_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-5)+(16-6)+(16-7)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_1_bmis *(((16-8)-1)*(0.5)))));\
% generate a test function with specific normalizations\
func_C1 = @(X) (Hamiltonian_C1)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% (16-5)/16 = 11/16 approx 0.69\
Hamiltonian_C2 = exp(-((normalization_2_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_2_bmis .*(((16-5)-1)* 0.69))));\
% generate a test function with specific normalizations\
func_C2 = @(X) (Hamiltonian_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-16|/16 = 0.875, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C3 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-2)-1)* 0.875)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C3 = @(X) (Hamiltonian_C3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-16|/16 = 0.75, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C4 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-4)-1)* 0.75)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C4 = @(X) (Hamiltonian_C4)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-16|/16 = 0.50, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-16|/16 = 0.375.\
Hamiltonian_C5 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-8)-1)* 0.5)+ (((16-10)-1)* 0.375)))));\
% generate a test function with specific normalizations\
func_C5 = @(X) (Hamiltonian_C5)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |14-16|/16 = 0.125, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |15-16|/16 = 0.0625.\
Hamiltonian_C6 = exp(-((normalization_3_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-8)+(16-10))))+(normalization_3_bmis .*((((16-14)-1)* 0.125)+ (((16-15)-1)* 0.0625)))));\
% generate a test function with specific normalizations\
func_C6 = @(X) (Hamiltonian_C6)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% REPEAT SIMILAR CASES AS ABOVE, BUT NOW, PUSH THE POSITION\
% OF BINDING FURTHER UP THE SEQUENCE TO N = 13\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 13, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |13-8|/13 = 0.3846 (!!!)\
Hamiltonian_C1_2 = exp(-((normalization_1_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_1_bmis *((((13-8)-1)*(0.3846))))));\
% generate a test function with specific normalizations\
func_C1_2 = @(X) (Hamiltonian_C1_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 13, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% |5-13|/13 = 11/16 approx 0.615\
Hamiltonian_C2_2 = exp(-((normalization_2_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_2_bmis .*((((13-5)-1)* 0.615)))));\
% generate a test function with specific normalizations\
func_C2_2 = @(X) (Hamiltonian_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 13, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.61538.\
Hamiltonian_C3_2 = exp(-((normalization_3_bm * (((13-1)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*(((13-2)-1)* 0.846)+ (((13-5)-1)* 0.61538))));\
% generate a test function with specific normalizations\
func_C3_2 = @(X) (Hamiltonian_C3_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.6154.\
Hamiltonian_C4_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
% generate a test function with specific normalizations\
func_C4_2 = @(X) (Hamiltonian_C4_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-13|/13 = 0.3846, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.375.\
Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-8)-1)* 0.3846))+ (((16-10)-1)* 0.2307))));\
% generate a test function with specific normalizations\
func_C5_2 = @(X) (Hamiltonian_C5_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |10-13|/13 = 0.2307, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |11-13|/13 = 0.1538.\
Hamiltonian_C6_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_3_bmis .*((((13-10)-1)* 0.2307))+ (((13-11)-1)* 0.1538))));\
% generate a test function with specific normalizations\
func_C6_2 = @(X) (Hamiltonian_C6_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% SIMULATE MORE TARGET SEQUENCE CASES BY\
% CHANGING THE POSITION OF BINDING TO N=17\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 17, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |8-17|/17 = 0.529 (!!!)\
Hamiltonian_C3_1 = exp(-((normalization_1_bm * (((17-1)+(17-2)+(17-3)+(17-4)+(17-5)+(17-6)+(17-7)+(17-9)+(17-10)+(17-11)+(17-12)+(17-13)+(17-14)+(17-15)+(17-16))))+(normalization_1_bmis *(((17-8)-1)*(0.529)))));\
% generate a test function with specific normalizations\
func_C3_1 = @(X) (Hamiltonian_C3_1)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND CASE (FROM THE THIRD CASE ABOVE)\
% for base pair mismatch, with same position of\
% binding, N = 17, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-17|/17 = 0.8823, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-17|/17 = 0.706.\
Hamiltonian_C3_2 = exp(-((normalization_3_bm * (((17-1)+(17-3)+(17-4)+(17-6)+(17-7)+(17-8)+(17-9)+(17-10)+(17-11)+(17-12)+(17-13)+(17-14)+(17-15))))+(normalization_3_bmis .*(((13-2)-1)* 0.8823)+ ((13-5)-1)* 0.706)));\
% generate a test function with specific normalizations\
func_C3_2 = @(X) (Hamiltonian_C3_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD CASE (FROM FIFTH CASE ABOVE) for base pair mismatch, with\'a0\
% same position of binding, N = 17, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-17|/17 = 0.529, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-17|/17 = 0.4118.\
Hamiltonian_C3_3 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-8)-1)* 0.529)+ (((16-10)-1)* 0.4118)))));\
% generate a test function with specific normalizations\
func_C3_3 = @(X) (Hamiltonian_C3_3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% WITH 15 SEQUENCES SO FAR, GENERATE 30 MORE. FOR\
% THE FIRST 15 ADDITIONAL SEQUENCES BELOW, USE\
% THE 3 BASE PAIR MISMATCH CASES TO SHOW THAT\
% BINDING CANNOT OCCUR.\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 13\
normalization_triple_bm = 1/(10+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-13|/13 = 0.769, and the THIRD mismatch factor\
% comes from |4-13|/13 = 0.6923.\
Hamiltonian_triple = exp(-((normalization_triple_bm * (((13-1)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_triple_bmis .*((((13-2)-1)* 0.846)+ (((13-3)-1)* 0.769)+(((13-4)-1)* 0.6923)))));\
% generate a test function with specific normalizations\
func_triple = @(X) (Hamiltonian_triple)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 13\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-13|/13 = 0.6923, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.615, and the THIRD T_ij factor comes\
% from the fact that |6-13|/13 = 0.5384.\
Hamiltonian_triple_2 = exp(-((normalization_triple_bm_1 * (((13-1)+(13-2)+(13-3)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_triple_bmis_1 .*((((13-4)-1)* 0.6923)+ (((13-5)-1)* 0.615)+(((13-6)-1)* 0.5384)))));\
% generate a test function with specific normalizations\
func_triple_2 = @(X) (Hamiltonian_triple_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-13|/13 = 0.692\
Hamiltonian_double = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-4)-1)* 0.692)))));\
% generate a test function with specific normalizations\
func_double_2 = @(X) (Hamiltonian_double)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-13|/13 = 0.538\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-6)-1)* 0.538)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2A = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-2)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2A = @(X) (Hamiltonian_double_C2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-13|/13 = 0.385\
Hamiltonian_double_C2_2B = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-8)-1)* 0.385)))));\
% generate a test function with specific normalizations\
func_double_C2_2B = @(X) (Hamiltonian_double_C2_2B)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate EIGTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308\
Hamiltonian_double_C2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-9)-1)* 0.308)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2 = @(X) (Hamiltonian_double_C2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231\
Hamiltonian_double_C2_2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-10)-1)* 0.231)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.15 = |11-13|/13\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-10)-1)* 0.231)+(((13-11)-1)* 0.15)))));\
% generate a test function with specific normalizations\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13\
Hamiltonian_triple_A_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))+(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.077)))));\
% generate a test function with specific normalizations\
func_triple_A_2 = @(X) (Hamiltonian_triple_A_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TWELFTH case of 4 base pair mismatch,\
% in which we have TWO base pair mismatchES\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(8+2)^3;\
normalization_double_2 = 1/(2+4)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2, comes from the fact that\
% the quantity T_ij is equal to |2-13|/13 = 0.846. While\
% for the SECOND mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13, and FINALLY, the\
% FOURTH mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_quad = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+(((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_quad = @(X) (Hamiltonian_quad)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.153 = |11-13|/13, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_triple_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9))))+(normalization_double_2 .*((((13-10)-1)* 0.231)+(((13-11)-1)* 0.153)+ (((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_triple_II = @(X) (Hamiltonian_triple_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 11, comes from the fact that\
% |10-13|/13 = 0.153, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.0769 = |12-13|/13, at 12.\
Hamiltonian_double_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))+(normalization_double_2 .*((((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_double_II = @(X) (Hamiltonian_double_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308, while the SECOND\
% T_ij factor comes from the fact that\
% 0.231 = |10-13|/13, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-13|/13 = 0.154.\
Hamiltonian_TRIPLE_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8))))+(normalization_double_2 .*((((13-9)-1)* 0.308)+(((13-10)-1)* 0.231) + (((13-11)-1)*0.154)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II = @(X) (Hamiltonian_TRIPLE_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% NOW, WE WILL GENERATE THE LAST 15 SEQUENCES, FOR THE FINAL THIRD PLOT,\
% BY TAKING ALL OF THE MUTATIONS IN THE PREVIOUS 15 AND\
% CHANGING THE POSITION OF BINDING. ALL OF THE BASE\
% MISMATCH PATTERNS ARE THE SAME.\
% THE BINDING POSITION WILL BE\
% CHANGED TO N = 15.\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 15\
normalization_triple_bm = 1/(11+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-15|/15 = 0.8, and the THIRD mismatch factor\
% comes from |4-15|/15 = 0.733\
Hamiltonian_triple_2 = exp(-((normalization_triple_bm * (((15-1)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_triple_bmis .*((((15-2)-1)* 0.867)+ (((15-3)-1)* 0.800)+(((15-4)-1)* 0.733)))));\
% generate a test function with specific normalizations\
func_triple_2 = @(X) (Hamiltonian_triple_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 15\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-15|/15 = 2/3, and the THIRD T_ij factor comes\
% from the fact that |6-15|/15 = 0.6\
Hamiltonian_triple_2_2A = exp(-((normalization_triple_bm_1 * (((15-1)+(15-2)+(15-3)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_triple_bmis_1 .*((((15-4)-1)* 0.733)+ (((15-5)-1)* 0.667)+(((15-6)-1)* 0.600)))));\
% generate a test function with specific normalizations\
func_triple_2_2A = @(X) (Hamiltonian_triple_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-15|/15 = 0.733\
Hamiltonian_double_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-4)-1)* 0.733)))));\
% generate a test function with specific normalizations\
func_double_2_2 = @(X) (Hamiltonian_double_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-15|/15 = 0.6\
Hamiltonian_double_C2_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-6)-1)* 0.600)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-15|/15 = 0.533\
Hamiltonian_double_C2_2_2A = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-7)-1)* 0.533)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2A = @(X) (Hamiltonian_double_C2_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-15|/15 = 0.533\
Hamiltonian_double_C2_2A_2A = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-2)+(15-5)+(15-6)+(15-8)+(15-9)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-7)-1)* 0.533)))));\
% generate a test function with specific normalizations\
func_double_C2_2A_2A = @(X) (Hamiltonian_double_C2_2A_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-15|/15 = 0.467\
Hamiltonian_double_C2_2B_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-9)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-8)-1)* 0.467)))));\
% generate a test function with specific normalizations\
func_double_C2_2B_2 = @(X) (Hamiltonian_double_C2_2B_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate EIGHTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-15|/15 = 0.4\
Hamiltonian_double_C2_2_2_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-9)-1)* 0.400)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3\
Hamiltonian_double_C2_2_2_2_2A = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-10)-1)* 0.333)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2_2A = @(X) (Hamiltonian_double_C2_2_2_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.267 = |11-15|/15\
Hamiltonian_triple_A_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-12))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-10)-1)* 0.333)+(((15-11)-1)* 0.267)))));\
% generate a test function with specific normalizations\
func_triple_A_2 = @(X) (Hamiltonian_triple_A_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-15|/15 = 0.267, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 1/5 = |12-15|/15\
Hamiltonian_triple_A_2_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-11)-1)* 0.267)+(((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_triple_A_2_2 = @(X) (Hamiltonian_triple_A_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TWELFTH case of 4 base pair mismatch,\
% in which we have TWO base pair mismatchES\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 15\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+4)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2, comes from the fact that\
% the quantity T_ij is equal to |2-15|/15 = 0.867. While\
% for the SECOND mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-15|/15 = 0.267, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 1/5 = |12-15|/15, and FINALLY, the\
% FOURTH mismatch factor comes from\
% the fact that 3/15 = 1/5\
Hamiltonian_quad_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+(((15-4)-1)* 0.733)+ (((15-11)-1)* 0.267)+(((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_quad_2 = @(X) (Hamiltonian_quad_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3 , while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.267 = |11-15|/15, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 3/15 = 1/5\
Hamiltonian_triple_II_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9))))+(normalization_double_2 .*((((15-10)-1)* 0.333)+(((15-11)-1)* 0.267)+ (((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_triple_II_2 = @(X) (Hamiltonian_triple_II_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 11, comes from the fact that\
% |10-15|/15 = 1/3, while finally, the SECOND\
% T_ij factor comes from the fact that\
%  1/5 = |12-15|/15, at 12.\
Hamiltonian_double_II_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10))))+(normalization_double_2 .*((((15-11)-1)* 0.333)+(((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_double_II_2 = @(X) (Hamiltonian_double_II_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-15|/15 = 0.400, while the SECOND\
% T_ij factor comes from the fact that\
% 1/3 = |10-15|/15, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-15|/15 = 0.267.\
Hamiltonian_TRIPLE_II_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8))))+(normalization_double_2 .*((((15-9)-1)* 0.400)+(((15-10)-1)* 0.333) + (((15-11)-1)*0.267)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II_2 = @(X) (Hamiltonian_TRIPLE_II_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% SPARE CODE FOR OLD HAMILTONIANS AND TEST FUNCTION\
makehamiltonian()\
% NOW, WE WILL GENERATE THE LAST 15 SEQUENCES, FOR THE FINAL THIRD PLOT,\
% BY TAKING ALL OF THE MUTATIONS IN THE PREVIOUS 15 AND\
% CHANGING THE POSITION OF BINDING. ALL OF THE BASE\
% MISMATCH PATTERNS ARE THE SAME.\
% THE BINDING POSITION WILL BE\
% CHANGED TO N = 15.\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 15\
normalization_triple_bm = 1/(11+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-15|/15 = 0.8, and the THIRD mismatch factor\
% comes from |4-15|/15 = 0.733\
Hamiltonian_triple_2 = exp(-((normalization_triple_bm * (((15-1)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_triple_bmis .*((((15-2)-1)* 0.867)+ (((15-3)-1)* 0.800)+(((15-4)-1)* 0.733)))));\
% generate a test function with specific normalizations\
func_triple_2 = @(X) (Hamiltonian_triple_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 15\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-15|/15 = 2/3, and the THIRD T_ij factor comes\
% from the fact that |6-15|/15 = 0.6\
Hamiltonian_triple_2_2A = exp(-((normalization_triple_bm_1 * (((15-1)+(15-2)+(15-3)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_triple_bmis_1 .*((((15-4)-1)* 0.733)+ (((15-5)-1)* 0.667)+(((15-6)-1)* 0.600)))));\
% generate a test function with specific normalizations\
func_triple_2_2A = @(X) (Hamiltonian_triple_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-15|/15 = 0.733\
Hamiltonian_double_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-4)-1)* 0.733)))));\
% generate a test function with specific normalizations\
func_double_2_2 = @(X) (Hamiltonian_double_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-15|/15 = 0.6\
Hamiltonian_double_C2_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-6)-1)* 0.600)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-15|/15 = 0.533\
Hamiltonian_double_C2_2_2A = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-7)-1)* 0.533)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2A = @(X) (Hamiltonian_double_C2_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-15|/15 = 0.533\
Hamiltonian_double_C2_2A_2A = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-2)+(15-5)+(15-6)+(15-8)+(15-9)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-7)-1)* 0.533)))));\
% generate a test function with specific normalizations\
func_double_C2_2A_2A = @(X) (Hamiltonian_double_C2_2A_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-15|/15 = 0.467\
Hamiltonian_double_C2_2B_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-9)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-8)-1)* 0.467)))));\
% generate a test function with specific normalizations\
func_double_C2_2B_2 = @(X) (Hamiltonian_double_C2_2B_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate EIGHTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-15|/15 = 0.4\
Hamiltonian_double_C2_2_2_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-9)-1)* 0.400)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3\
Hamiltonian_double_C2_2_2_2_2A = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-10)-1)* 0.333)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2_2A = @(X) (Hamiltonian_double_C2_2_2_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.267 = |11-15|/15\
Hamiltonian_triple_A_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-12))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-10)-1)* 0.333)+(((15-11)-1)* 0.267)))));\
% generate a test function with specific normalizations\
func_triple_A_2 = @(X) (Hamiltonian_triple_A_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-15|/15 = 0.267, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 1/5 = |12-15|/15\
Hamiltonian_triple_A_2_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-11)-1)* 0.267)+(((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_triple_A_2_2 = @(X) (Hamiltonian_triple_A_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TWELFTH case of 4 base pair mismatch,\
% in which we have TWO base pair mismatchES\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 15\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+4)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2, comes from the fact that\
% the quantity T_ij is equal to |2-15|/15 = 0.867. While\
% for the SECOND mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-15|/15 = 0.267, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 1/5 = |12-15|/15, and FINALLY, the\
% FOURTH mismatch factor comes from\
% the fact that 3/15 = 1/5\
Hamiltonian_quad_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+(((15-4)-1)* 0.733)+ (((15-11)-1)* 0.267)+(((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_quad_2 = @(X) (Hamiltonian_quad_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3 , while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.267 = |11-15|/15, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 3/15 = 1/5\
Hamiltonian_triple_II_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9))))+(normalization_double_2 .*((((15-10)-1)* 0.333)+(((15-11)-1)* 0.267)+ (((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_triple_II_2 = @(X) (Hamiltonian_triple_II_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 11, comes from the fact that\
% |10-15|/15 = 1/3, while finally, the SECOND\
% T_ij factor comes from the fact that\
%  1/5 = |12-15|/15, at 12.\
Hamiltonian_double_II_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10))))+(normalization_double_2 .*((((15-11)-1)* 0.333)+(((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_double_II_2 = @(X) (Hamiltonian_double_II_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-15|/15 = 0.400, while the SECOND\
% T_ij factor comes from the fact that\
% 1/3 = |10-15|/15, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-15|/15 = 0.267.\
Hamiltonian_TRIPLE_II_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8))))+(normalization_double_2 .*((((15-9)-1)* 0.400)+(((15-10)-1)* 0.333) + (((15-11)-1)*0.267)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II_2 = @(X) (Hamiltonian_TRIPLE_II_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% SPARE CODE FOR OLD HAMILTONIANS AND TEST FUNCTION\
makehamiltonian()\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,15000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,15000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,15000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
%-- 2/26/20, 1:39 AM --%\
demo()\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,15000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,15000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,15000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
demo()\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,15000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,15000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 13\
normalization_triple_bm = 1/(10+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-13|/13 = 0.769, and the THIRD mismatch factor\
% comes from |4-13|/13 = 0.6923.\
Hamiltonian_triple = exp(-((normalization_triple_bm * (((13-1)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_triple_bmis .*((((13-2)-1)* 0.846)+ (((13-3)-1)* 0.769)+(((13-4)-1)* 0.6923)))));\
% generate a test function with specific normalizations\
func_triple = @(X) (Hamiltonian_triple)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 13\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-13|/13 = 0.6923, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.615, and the THIRD T_ij factor comes\
% from the fact that |6-13|/13 = 0.5384.\
Hamiltonian_triple_2_A = exp(-((normalization_triple_bm_1 * (((13-1)+(13-2)+(13-3)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_triple_bmis_1 .*((((13-4)-1)* 0.6923)+ (((13-5)-1)* 0.615)+(((13-6)-1)* 0.5384)))));\
% generate a test function with specific normalizations\
func_triple_2_A = @(X) (Hamiltonian_triple_2_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-13|/13 = 0.692\
Hamiltonian_double = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-4)-1)* 0.692)))));\
% generate a test function with specific normalizations\
func_double_2 = @(X) (Hamiltonian_double)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-13|/13 = 0.538\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-6)-1)* 0.538)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2A = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-2)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2A = @(X) (Hamiltonian_double_C2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-13|/13 = 0.385\
Hamiltonian_double_C2_2B = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-8)-1)* 0.385)))));\
% generate a test function with specific normalizations\
func_double_C2_2B = @(X) (Hamiltonian_double_C2_2B)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate EIGHTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308\
Hamiltonian_double_C2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-9)-1)* 0.308)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2 = @(X) (Hamiltonian_double_C2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231\
Hamiltonian_double_C2_2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-10)-1)* 0.231)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.15 = |11-13|/13\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-10)-1)* 0.231)+(((13-11)-1)* 0.15)))));\
% generate a test function with specific normalizations\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13\
Hamiltonian_triple_A_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))+(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.077)))));\
% generate a test function with specific normalizations\
func_triple_A_2 = @(X) (Hamiltonian_triple_A_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TWELFTH case of 4 base pair mismatch,\
% in which we have TWO base pair mismatchES\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(8+2)^3;\
normalization_double_2 = 1/(2+4)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2, comes from the fact that\
% the quantity T_ij is equal to |2-13|/13 = 0.846. While\
% for the SECOND mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13, and FINALLY, the\
% FOURTH mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_quad = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+(((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_quad = @(X) (Hamiltonian_quad)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.153 = |11-13|/13, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_triple_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9))))+(normalization_double_2 .*((((13-10)-1)* 0.231)+(((13-11)-1)* 0.153)+ (((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_triple_II = @(X) (Hamiltonian_triple_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 11, comes from the fact that\
% |10-13|/13 = 0.153, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.0769 = |12-13|/13, at 12.\
Hamiltonian_double_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))+(normalization_double_2 .*((((13-11)-1)* 0.153)+(((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_double_II = @(X) (Hamiltonian_double_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308, while the SECOND\
% T_ij factor comes from the fact that\
% 0.231 = |10-13|/13, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-13|/13 = 0.154.\
Hamiltonian_TRIPLE_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8))))+(normalization_double_2 .*((((13-9)-1)* 0.308)+(((13-10)-1)* 0.231) + (((13-11)-1)*0.154)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II = @(X) (Hamiltonian_TRIPLE_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(0,15000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
x = transpose(x)\
sorted_values = sort([   0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
legend(\{'Hamiltonian for a given sequence representative'\})\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('Confirming that the Hamiltonian assigns less energy to sequences with base mismatches of the given sequence types')\
xlabel('target sequence')\
ylabel('Hamiltonian value')\
legend(\{'Hamiltonian value computed for a given sequence'\})\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('Confirming that the Hamiltonian assigns less energy to sequences with base mismatches of the given sequence types')\
xlabel('target sequence')\
ylabel('Hamiltonian value')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('Confirming that the Hamiltonian assigns less energy to sequences with base mismatches of the given sequence types')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN VALUE')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('Confirming that the Hamiltonian assigns \\color\{red\}less energy to sequences with base mismatches of the given sequence types')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN VALUE')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('Confirming that the Hamiltonian assigns \{\\color\{red\}less energy\} to sequences with base mismatches of the given sequence types')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN VALUE')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches of the given sequence types')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN VALUE')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGAAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAGAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAGAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN VALUE')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN VALUE')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_THIRDfifteen\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_A; Hamiltonian_triple_2_A; Hamiltonian_double_C2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2; Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II ; Hamiltonian_TRIPLE_II];\
% THE BINDING POSITION WILL BE\
% CHANGED TO N = 15.\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 15\
normalization_triple_bm = 1/(11+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-15|/15 = 0.8, and the THIRD mismatch factor\
% comes from |4-15|/15 = 0.733\
Hamiltonian_triple_2_B = exp(-((normalization_triple_bm * (((15-1)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_triple_bmis .*((((15-2)-1)* 0.867)+ (((15-3)-1)* 0.800)+(((15-4)-1)* 0.733)))));\
% generate a test function with specific normalizations\
func_triple_2_B = @(X) (Hamiltonian_triple_2_B)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 15\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-15|/15 = 2/3, and the THIRD T_ij factor comes\
% from the fact that |6-15|/15 = 0.6\
Hamiltonian_triple_2_2A = exp(-((normalization_triple_bm_1 * (((15-1)+(15-2)+(15-3)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_triple_bmis_1 .*((((15-4)-1)* 0.733)+ (((15-5)-1)* 0.667)+(((15-6)-1)* 0.600)))));\
% generate a test function with specific normalizations\
func_triple_2_2A = @(X) (Hamiltonian_triple_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-15|/15 = 0.733\
Hamiltonian_double_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-4)-1)* 0.733)))));\
% generate a test function with specific normalizations\
func_double_2_2 = @(X) (Hamiltonian_double_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-15|/15 = 0.6\
Hamiltonian_double_C2_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-6)-1)* 0.600)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-15|/15 = 0.533\
Hamiltonian_double_C2_2_2A = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-7)-1)* 0.533)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2A = @(X) (Hamiltonian_double_C2_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-15|/15 = 0.533\
Hamiltonian_double_C2_2A_2A = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-2)+(15-5)+(15-6)+(15-8)+(15-9)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-7)-1)* 0.533)))));\
% generate a test function with specific normalizations\
func_double_C2_2A_2A = @(X) (Hamiltonian_double_C2_2A_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-15|/15 = 0.467\
Hamiltonian_double_C2_2B_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-9)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-8)-1)* 0.467)))));\
% generate a test function with specific normalizations\
func_double_C2_2B_2 = @(X) (Hamiltonian_double_C2_2B_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate EIGHTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-15|/15 = 0.4\
Hamiltonian_double_C2_2_2_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-9)-1)* 0.400)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3\
Hamiltonian_double_C2_2_2_2_2A = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-10)-1)* 0.333)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2_2A = @(X) (Hamiltonian_double_C2_2_2_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.267 = |11-15|/15\
Hamiltonian_triple_A_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-12))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-10)-1)* 0.333)+(((15-11)-1)* 0.267)))));\
% generate a test function with specific normalizations\
func_triple_A_2 = @(X) (Hamiltonian_triple_A_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-15|/15 = 0.267, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 1/5 = |12-15|/15\
Hamiltonian_triple_A_2_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-11)-1)* 0.267)+(((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_triple_A_2_2 = @(X) (Hamiltonian_triple_A_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TWELFTH case of 4 base pair mismatch,\
% in which we have TWO base pair mismatchES\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 15\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+4)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2, comes from the fact that\
% the quantity T_ij is equal to |2-15|/15 = 0.867. While\
% for the SECOND mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-15|/15 = 0.267, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 1/5 = |12-15|/15, and FINALLY, the\
% FOURTH mismatch factor comes from\
% the fact that 3/15 = 1/5\
Hamiltonian_quad_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+(((15-4)-1)* 0.733)+ (((15-11)-1)* 0.267)+(((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_quad_2 = @(X) (Hamiltonian_quad_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3 , while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.267 = |11-15|/15, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 3/15 = 1/5\
Hamiltonian_triple_II_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9))))+(normalization_double_2 .*((((15-10)-1)* 0.333)+(((15-11)-1)* 0.267)+ (((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_triple_II_2 = @(X) (Hamiltonian_triple_II_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 11, comes from the fact that\
% |10-15|/15 = 1/3, while finally, the SECOND\
% T_ij factor comes from the fact that\
%  1/5 = |12-15|/15, at 12.\
Hamiltonian_double_II_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10))))+(normalization_double_2 .*((((15-11)-1)* 0.333)+(((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_double_II_2 = @(X) (Hamiltonian_double_II_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-15|/15 = 0.400, while the SECOND\
% T_ij factor comes from the fact that\
% 1/3 = |10-15|/15, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-15|/15 = 0.267.\
Hamiltonian_TRIPLE_II_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8))))+(normalization_double_2 .*((((15-9)-1)* 0.400)+(((15-10)-1)* 0.333) + (((15-11)-1)*0.267)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II_2 = @(X) (Hamiltonian_TRIPLE_II_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% SPARE CODE FOR OLD HAMILTONIANS AND TEST FUNCTION\
sequences_Hamiltonian_THIRDfifteen\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_A; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
sequences_Hamiltonian_THIRDfifteen\
format long\
sequences_Hamiltonian_THIRDfifteen\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
sorted_values = sort([0.784810520925704 0.837079725306906 0.736740607519727 0.802988704367723 0.778506198652469 0.816216256906491 0.789601309899058 0.799266926400893 0.846466326508041 0.893125988846724 0.898991269958390 0.879193736507195 0.940607860875021 0.945085039872948 0.909199833712599]);\
x_1 = linspace(1000,14000,15);\
% x = transpose(x);\
y_1 = sequences_Hamiltonian_THIRDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAnAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAnAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGGAnAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAnAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAnAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAnAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAnAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAnAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAnAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAnAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAnAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('CASE 3: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('CASE 2: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
sorted_values = sort([0.784810520925704 0.837079725306906 0.736740607519727 0.802988704367723 0.778506198652469 0.816216256906491 0.789601309899058 0.799266926400893 0.846466326508041 0.893125988846724 0.898991269958390 0.879193736507195 0.940607860875021 0.945085039872948 0.909199833712599]);\
x_1 = linspace(1000,14000,15);\
% x = transpose(x);\
y_1 = sequences_Hamiltonian_THIRDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAnAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAnAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGGAnAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAnAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAnAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAnAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAnAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAnAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAnAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAnAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAnAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('CASE 3: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 16, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, (N-8)/N = 0.5 (!!!)\
Hamiltonian_C1 = exp(-((normalization_1_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-5)+(16-6)+(16-7)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_1_bmis *(((16-8)-1)*(0.5)))));\
% generate a test function with specific normalizations\
func_C1 = @(X) (Hamiltonian_C1)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% (16-5)/16 = 11/16 approx 0.69\
Hamiltonian_C2 = exp(-((normalization_2_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_2_bmis .*(((16-5)-1)* 0.69))));\
% generate a test function with specific normalizations\
func_C2 = @(X) (Hamiltonian_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-16|/16 = 0.875, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C3 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-2)-1)* 0.875)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C3 = @(X) (Hamiltonian_C3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-16|/16 = 0.75, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C4 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-4)-1)* 0.75)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C4 = @(X) (Hamiltonian_C4)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-16|/16 = 0.50, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-16|/16 = 0.375.\
Hamiltonian_C5 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-8)-1)* 0.5)+ (((16-10)-1)* 0.375)))));\
% generate a test function with specific normalizations\
func_C5 = @(X) (Hamiltonian_C5)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |14-16|/16 = 0.125, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |15-16|/16 = 0.0625.\
Hamiltonian_C6 = exp(-((normalization_3_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-8)+(16-10))))+(normalization_3_bmis .*((((16-14)-1)* 0.125)+ (((16-15)-1)* 0.0625)))));\
% generate a test function with specific normalizations\
func_C6 = @(X) (Hamiltonian_C6)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% REPEAT SIMILAR CASES AS ABOVE, BUT NOW, PUSH THE POSITION\
% OF BINDING FURTHER UP THE SEQUENCE TO N = 13\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 13, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |13-8|/13 = 0.3846 (!!!)\
Hamiltonian_C1_2 = exp(-((normalization_1_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_1_bmis *((((13-8)-1)*(0.3846))))));\
% generate a test function with specific normalizations\
func_C1_2 = @(X) (Hamiltonian_C1_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 13, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% |5-13|/13 = 11/16 approx 0.615\
Hamiltonian_C2_2 = exp(-((normalization_2_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_2_bmis .*((((13-5)-1)* 0.615)))));\
% generate a test function with specific normalizations\
func_C2_2 = @(X) (Hamiltonian_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 13, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.61538.\
Hamiltonian_C3_2 = exp(-((normalization_3_bm * (((13-1)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*(((13-2)-1)* 0.846)+ (((13-5)-1)* 0.61538))));\
% generate a test function with specific normalizations\
func_C3_2 = @(X) (Hamiltonian_C3_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.6154.\
Hamiltonian_C4_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
% generate a test function with specific normalizations\
func_C4_2 = @(X) (Hamiltonian_C4_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-13|/13 = 0.3846, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.375.\
Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-8)-1)* 0.3846))+ (((16-10)-1)* 0.2307))));\
% generate a test function with specific normalizations\
func_C5_2 = @(X) (Hamiltonian_C5_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |10-13|/13 = 0.2307, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |11-13|/13 = 0.1538.\
Hamiltonian_C6_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_3_bmis .*((((13-10)-1)* 0.2307))+ (((13-11)-1)* 0.1538))));\
% generate a test function with specific normalizations\
func_C6_2 = @(X) (Hamiltonian_C6_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
N=16;\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 16, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, (N-8)/N = 0.5 (!!!)\
Hamiltonian_C1 = exp(-((normalization_1_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-5)+(16-6)+(16-7)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_1_bmis *(((16-8)-1)*(0.5)))));\
% generate a test function with specific normalizations\
func_C1 = @(X) (Hamiltonian_C1)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% (16-5)/16 = 11/16 approx 0.69\
Hamiltonian_C2 = exp(-((normalization_2_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_2_bmis .*(((16-5)-1)* 0.69))));\
% generate a test function with specific normalizations\
func_C2 = @(X) (Hamiltonian_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-16|/16 = 0.875, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C3 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-2)-1)* 0.875)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C3 = @(X) (Hamiltonian_C3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-16|/16 = 0.75, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C4 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-4)-1)* 0.75)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C4 = @(X) (Hamiltonian_C4)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-16|/16 = 0.50, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-16|/16 = 0.375.\
Hamiltonian_C5 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-8)-1)* 0.5)+ (((16-10)-1)* 0.375)))));\
% generate a test function with specific normalizations\
func_C5 = @(X) (Hamiltonian_C5)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |14-16|/16 = 0.125, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |15-16|/16 = 0.0625.\
Hamiltonian_C6 = exp(-((normalization_3_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-8)+(16-10))))+(normalization_3_bmis .*((((16-14)-1)* 0.125)+ (((16-15)-1)* 0.0625)))));\
% generate a test function with specific normalizations\
func_C6 = @(X) (Hamiltonian_C6)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% REPEAT SIMILAR CASES AS ABOVE, BUT NOW, PUSH THE POSITION\
% OF BINDING FURTHER UP THE SEQUENCE TO N = 13\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 13, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |13-8|/13 = 0.3846 (!!!)\
Hamiltonian_C1_2 = exp(-((normalization_1_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_1_bmis *((((13-8)-1)*(0.3846))))));\
% generate a test function with specific normalizations\
func_C1_2 = @(X) (Hamiltonian_C1_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 13, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% |5-13|/13 = 11/16 approx 0.615\
Hamiltonian_C2_2 = exp(-((normalization_2_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_2_bmis .*((((13-5)-1)* 0.615)))));\
% generate a test function with specific normalizations\
func_C2_2 = @(X) (Hamiltonian_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 13, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.61538.\
Hamiltonian_C3_2 = exp(-((normalization_3_bm * (((13-1)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*(((13-2)-1)* 0.846)+ (((13-5)-1)* 0.61538))));\
% generate a test function with specific normalizations\
func_C3_2 = @(X) (Hamiltonian_C3_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.6154.\
Hamiltonian_C4_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
% generate a test function with specific normalizations\
func_C4_2 = @(X) (Hamiltonian_C4_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-13|/13 = 0.3846, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.375.\
Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-8)-1)* 0.3846))+ (((16-10)-1)* 0.2307))));\
% generate a test function with specific normalizations\
func_C5_2 = @(X) (Hamiltonian_C5_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |10-13|/13 = 0.2307, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |11-13|/13 = 0.1538.\
Hamiltonian_C6_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_3_bmis .*((((13-10)-1)* 0.2307))+ (((13-11)-1)* 0.1538))));\
% generate a test function with specific normalizations\
func_C6_2 = @(X) (Hamiltonian_C6_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
number_1 = 1;\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 16, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, (N-8)/N = 0.5 (!!!)\
Hamiltonian_C1 = exp(-((normalization_1_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-5)+(16-6)+(16-7)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_1_bmis *(((16-8)-1)*(0.5)))));\
% generate a test function with specific normalizations\
func_C1 = @(X) (Hamiltonian_C1)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% (16-5)/16 = 11/16 approx 0.69\
Hamiltonian_C2 = exp(-((normalization_2_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_2_bmis .*(((16-5)-1)* 0.69))));\
% generate a test function with specific normalizations\
func_C2 = @(X) (Hamiltonian_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-16|/16 = 0.875, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C3 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-2)-1)* 0.875)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C3 = @(X) (Hamiltonian_C3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-16|/16 = 0.75, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C4 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-4)-1)* 0.75)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C4 = @(X) (Hamiltonian_C4)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-16|/16 = 0.50, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-16|/16 = 0.375.\
Hamiltonian_C5 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-8)-1)* 0.5)+ (((16-10)-1)* 0.375)))));\
% generate a test function with specific normalizations\
func_C5 = @(X) (Hamiltonian_C5)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |14-16|/16 = 0.125, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |15-16|/16 = 0.0625.\
Hamiltonian_C6 = exp(-((normalization_3_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-8)+(16-10))))+(normalization_3_bmis .*((((16-14)-1)* 0.125)+ (((16-15)-1)* 0.0625)))));\
% generate a test function with specific normalizations\
func_C6 = @(X) (Hamiltonian_C6)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% REPEAT SIMILAR CASES AS ABOVE, BUT NOW, PUSH THE POSITION\
% OF BINDING FURTHER UP THE SEQUENCE TO N = 13\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 13, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |13-8|/13 = 0.3846 (!!!)\
Hamiltonian_C1_2 = exp(-((normalization_1_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_1_bmis *((((13-8)-1)*(0.3846))))));\
% generate a test function with specific normalizations\
func_C1_2 = @(X) (Hamiltonian_C1_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 13, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% |5-13|/13 = 11/16 approx 0.615\
Hamiltonian_C2_2 = exp(-((normalization_2_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_2_bmis .*((((13-5)-1)* 0.615)))));\
% generate a test function with specific normalizations\
func_C2_2 = @(X) (Hamiltonian_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 13, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.61538.\
Hamiltonian_C3_2 = exp(-((normalization_3_bm * (((13-1)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*(((13-2)-1)* 0.846)+ (((13-5)-1)* 0.61538))));\
% generate a test function with specific normalizations\
func_C3_2 = @(X) (Hamiltonian_C3_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.6154.\
Hamiltonian_C4_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
% generate a test function with specific normalizations\
func_C4_2 = @(X) (Hamiltonian_C4_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-13|/13 = 0.3846, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.375.\
Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-8)-1)* 0.3846))+ (((16-10)-1)* 0.2307))));\
% generate a test function with specific normalizations\
func_C5_2 = @(X) (Hamiltonian_C5_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |10-13|/13 = 0.2307, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |11-13|/13 = 0.1538.\
Hamiltonian_C6_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_3_bmis .*((((13-10)-1)* 0.2307))+ (((13-11)-1)* 0.1538))));\
% generate a test function with specific normalizations\
func_C6_2 = @(X) (Hamiltonian_C6_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted_values_3 = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values_3)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
Hamiltonian_C3_1 = exp(-((normalization_1_bm * (((17-1)+(17-2)+(17-3)+(17-4)+(17-5)+(17-6)+(17-7)+(17-9)+(17-10)+(17-11)+(17-12)+(17-13)+(17-14)+(17-15)+(17-16))))+(normalization_1_bmis *(((17-8)-1)*(0.529)))));\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted_values_3 = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values_3)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
Hamiltonian_C3_3 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-8)-1)* 0.529)+ (((16-10)-1)* 0.4118)))));\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted_values_3 = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values_3)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , '\{\\color\{yellow\}AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA\}' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('CASE 2: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , '\{\\color\{purple\}AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA\}' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('CASE 2: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , '\{\\color\{red\}AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA\}' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('CASE 2: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , '\{\\color\{orange\}AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA\}' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('CASE 2: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , '\{\\color\{orange\}AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA\}' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' \{\\color\{orange\}AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA\}' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' \{\\color\{orange\}AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA\}' , ' \{\\color\{orange\}AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA\}' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('CASE 2: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted_values_3 = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855589 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619 ]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_FIRSTfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values_3)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted_values_3 = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855589 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_FIRSTfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values_3)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
LENGTH(sequences_Hamiltonian_FIRSTfifteen)\
length(sequences_Hamiltonian_FIRSTfifteen)\
sorted_values_3 = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855589 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619]);\
sorted_values_3\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted_values_3 = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855589 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_FIRSTfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values_3)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
sorted_values_1 = sort([0.784810520925704 0.837079725306906 0.736740607519727 0.802988704367723 0.778506198652469 0.816216256906491 0.789601309899058 0.799266926400893 0.846466326508041 0.893125988846724 0.898991269958390 0.879193736507195 0.940607860875021 0.945085039872948 0.909199833712599]);\
x_1 = linspace(1000,14000,15);\
% x = transpose(x);\
y_1 = sequences_Hamiltonian_THIRDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAnAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAnAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGGAnAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAnAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAnAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAnAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAnAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAnAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAnAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAnAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAnAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values_1)\
title('CASE 3: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
sorted_values_1 = sort([0.784810520925704 0.837079725306906 0.736740607519727 0.802988704367723 0.778506198652469 0.816216256906491 0.789601309899058 0.799266926400893 0.846466326508041 0.893125988846724 0.898991269958390 0.879193736507195 0.940607860875021 0.945085039872948 0.909199833712599]);\
x_1 = linspace(1000,14000,15);\
% x = transpose(x);\
y_1 = sequences_Hamiltonian_THIRDfifteen;\
plot(x_1,y_1,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAnAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAnAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGGAnAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAGAnAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAGAnAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAnAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAnAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAnAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAnAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAnAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAnAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values_1)\
title('CASE 3: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
sorted_values_1 = sort([0.784810520925704 0.837079725306906 0.736740607519727 0.802988704367723 0.778506198652469 0.816216256906491 0.789601309899058 0.799266926400893 0.846466326508041 0.893125988846724 0.898991269958390 0.879193736507195 0.940607860875021 0.945085039872948 0.909199833712599]);\
x_1 = linspace(1000,14000,15);\
% x = transpose(x);\
y_1 = sequences_Hamiltonian_THIRDfifteen;\
plot(x_1,y_1,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAnAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAnAAATCCACGTA' , '\{\\color\{orange\}AATTTA,AcAgAG,CAGTCAGGAnAATCCACGTA\} ' , '\{\\color\{orange\}AATTTA,ACAgAg,CAGTCAGAnAAATCCACGTA\} ' , ' AATTTA,AcAGAG,cAGTCAGAnAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAnAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAnAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAnAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAnAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAnAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAnAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values_1)\
title('CASE 3: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen\
sort(sequences_Hamiltonian_FIRSTfifteen)\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted = sort(sequences_Hamiltonian_FIRSTfifteen);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_FIRSTfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855589 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619+0.00001]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_FIRSTfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855589 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619+0.1]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_FIRSTfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855590 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_FIRSTfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855590 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619]);\
x_3 = linspace(1000,14000,15);\
% x = transpose(x);\
y_3 = sequences_Hamiltonian_FIRSTfifteen;\
plot(x_3,y_3,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , 'AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA ' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855590 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619]);\
x_3 = linspace(1000,14000,15);Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3 = sequences_Hamiltonian_FIRSTfifteen;\
plot(x_3,y_3,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , ' AATTTA,ACAgAG,CAGTCaanAAATCCACGTA', ' AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA' , ' AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAGtcAnAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855590 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619]);\
x_3 = linspace(1000,14000,15);Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3 = sequences_Hamiltonian_FIRSTfifteen;\
plot(x_3,y_3,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , ' AATTTA,ACAgAG,CAGTCaanAAATCCACGTA', ' AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA' , ' AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, (N-8)/N = 0.5 (!!!)\
Hamiltonian_C1 = exp(-((normalization_1_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-5)+(16-6)+(16-7)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_1_bmis *(((16-8)-1)*(0.5)))));\
% generate a test function with specific normalizations\
func_C1 = @(X) (Hamiltonian_C1)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% (16-5)/16 = 11/16 approx 0.69\
Hamiltonian_C2 = exp(-((normalization_2_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_2_bmis .*(((16-5)-1)* 0.69))));\
% generate a test function with specific normalizations\
func_C2 = @(X) (Hamiltonian_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-16|/16 = 0.875, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C3 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-2)-1)* 0.875)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C3 = @(X) (Hamiltonian_C3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-16|/16 = 0.75, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-16|/16 = 0.6875.\
Hamiltonian_C4 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-4)-1)* 0.75)+ (((16-5)-1)* 0.6875)))));\
% generate a test function with specific normalizations\
func_C4 = @(X) (Hamiltonian_C4)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-16|/16 = 0.50, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-16|/16 = 0.375.\
Hamiltonian_C5 = exp(-((normalization_3_bm * (((16-1)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-14)+(16-15))))+(normalization_3_bmis .*((((16-8)-1)* 0.5)+ (((16-10)-1)* 0.375)))));\
% generate a test function with specific normalizations\
func_C5 = @(X) (Hamiltonian_C5)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |14-16|/16 = 0.125, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |15-16|/16 = 0.0625.\
Hamiltonian_C6 = exp(-((normalization_3_bm * (((16-1)+(16-2)+(16-3)+(16-4)+(16-6)+(16-7)+(16-8)+(16-9)+(16-10)+(16-11)+(16-12)+(16-13)+(16-8)+(16-10))))+(normalization_3_bmis .*((((16-14)-1)* 0.125)+ (((16-15)-1)* 0.0625)))));\
% generate a test function with specific normalizations\
func_C6 = @(X) (Hamiltonian_C6)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% REPEAT SIMILAR CASES AS ABOVE, BUT NOW, PUSH THE POSITION\
% OF BINDING FURTHER UP THE SEQUENCE TO N = 13\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 13, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |13-8|/13 = 0.3846 (!!!)\
Hamiltonian_C1_2 = exp(-((normalization_1_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_1_bmis *((((13-8)-1)*(0.3846))))));\
% generate a test function with specific normalizations\
func_C1_2 = @(X) (Hamiltonian_C1_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND CASE for base pair mismatch, with\'a0\
% same position of binding, N = 13, but with a base\'a0\
% pair mismatch within the first 6 positions\
normalization_2_bm = 1/(((N-number_1-1+2))^3);\
normalization_2_bmis = 1/((number_1+2)^3);\
% construct the Hamiltonian. The T_ij factor for\
% the single mismatch comes from the fact that\
% |5-13|/13 = 11/16 approx 0.615\
Hamiltonian_C2_2 = exp(-((normalization_2_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_2_bmis .*((((13-5)-1)* 0.615)))));\
% generate a test function with specific normalizations\
func_C2_2 = @(X) (Hamiltonian_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD CASE for base pair mismatch, with\
% same position of binding, N = 13, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.61538.\
Hamiltonian_C3_2 = exp(-((normalization_3_bm * (((13-1)+(13-3)+(13-4)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*(((13-2)-1)* 0.846)+ (((13-5)-1)* 0.61538))));\
% generate a test function with specific normalizations\
func_C3_2 = @(X) (Hamiltonian_C3_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH CASE for base pair mismatch, with\
% same position of binding, N = 16, but with TWO base\
% pair mismatches, within the first 6 positions, that\
% are subsequently right next to each other\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.6154.\
Hamiltonian_C4_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((16-4)-1)* 0.692))+ (((16-5)-1)* 0.6154))));\
% generate a test function with specific normalizations\
func_C4_2 = @(X) (Hamiltonian_C4_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 16, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-13|/13 = 0.3846, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.375.\
Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% generate a test function with specific normalizations\
func_C5_2 = @(X) (Hamiltonian_C5_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH CASE for base pair mismatch, with\'a0\
% same position of binding, N = 13, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 14,comes from the fact that\
% |10-13|/13 = 0.2307, while the T_ij factor for the\
% SECOND mismatch, at 15, comes from the fact that\
% |11-13|/13 = 0.1538.\
Hamiltonian_C6_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_3_bmis .*((((13-10)-1)* 0.2307))+ (((13-11)-1)* 0.1538))));\
% generate a test function with specific normalizations\
func_C6_2 = @(X) (Hamiltonian_C6_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% SIMULATE MORE TARGET SEQUENCE CASES BY\
% CHANGING THE POSITION OF BINDING TO N=17\
% simulate FIRST CASE for base pair mismatch, with position of\'a0\
% binding, N = 17, with a SINGLE base pair mismatch past the\'a0\
% first 6 positions\
normalization_1_bm = 1/(((N-number_1-1+2))^3);\
normalization_1_bmis = 1/(((number_1+2))^3);\
% construct the Hamiltonian. 0.5 comes from the\
% T_ij factor for the single mismatch, |8-17|/17 = 0.529 (!!!)\
Hamiltonian_C3_1 = exp(-((normalization_1_bm * (((17-1)+(17-2)+(17-3)+(17-4)+(17-5)+(17-6)+(17-7)+(17-9)+(17-10)+(17-11)+(17-12)+(17-13)+(17-14)+(17-15)+(17-16))))+(normalization_1_bmis *(((17-8)-1)*(0.529)))));\
% generate a test function with specific normalizations\
func_C3_1 = @(X) (Hamiltonian_C3_1)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND CASE (FROM THE THIRD CASE ABOVE)\
% for base pair mismatch, with same position of\
% binding, N = 17, but with TWO base\
% pair mismatches, BOTH in the first 6 positions\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-17|/17 = 0.8823, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-17|/17 = 0.706.\
Hamiltonian_C3_2 = exp(-((normalization_3_bm * (((17-1)+(17-3)+(17-4)+(17-6)+(17-7)+(17-8)+(17-9)+(17-10)+(17-11)+(17-12)+(17-13)+(17-14)+(17-15))))+(normalization_3_bmis .*(((17-2)-1)* 0.8823)+ ((17-5)-1)* 0.706)));\
% generate a test function with specific normalizations\
func_C3_2 = @(X) (Hamiltonian_C3_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRD CASE (FROM FIFTH CASE ABOVE) for base pair mismatch, with\'a0\
% same position of binding, N = 17, but with TWO\
% base pair mismatches,\'a0past the first 6 base pairs\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |8-17|/17 = 0.529, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-17|/17 = 0.4118.\
Hamiltonian_C3_3 = exp(-((normalization_3_bm * (((17-1)+(17-2)+(17-3)+(17-4)+(17-5)+(17-6)+(17-7)+(17-9)+(17-10)+(17-11)+(17-12))))+(normalization_3_bmis .*((((17-8)-1)* 0.529)+ (((17-10)-1)* 0.4118)))));\
% generate a test function with specific normalizations\
func_C3_3 = @(X) (Hamiltonian_C3_3)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855590 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619]);\
x_3 = linspace(1000,14000,15);Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3 = sequences_Hamiltonian_FIRSTfifteen;\
plot(x_3,y_3,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , ' AATTTA,ACAgAG,CAGTCaanAAATCCACGTA', ' AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA' , ' AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855590 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619]);\
x_3 = linspace(1000,14000,15);Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3 = sequences_Hamiltonian_FIRSTfifteen;\
plot(x_3,y_3,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , ' AATTTA,ACAgAG,CAGTCaanAAATCCACGTA', ' AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA' , ' AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' \{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}' \});\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , '\{\\color\{orange\}AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA\}' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' \{\\color\{orange\}AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA\}' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' \{\\color\{orange\}AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA\}' , ' \{\\color\{orange\}AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA\}' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('CASE 2: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855590 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619]);\
x_3 = linspace(1000,14000,15);Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3 = sequences_Hamiltonian_FIRSTfifteen;\
plot(x_3,y_3,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , ' AATTTA,ACAgAG,CAGTCaanAAATCCACGTA', ' AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA' , ' AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}' \});\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855590 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619]);\
x_3 = linspace(1000,15000,15);Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3 = sequences_Hamiltonian_FIRSTfifteen;\
plot(x_3,y_3,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 15000]);\
xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , ' AATTTA,ACAgAG,CAGTCaanAAATCCACGTA', ' AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA' , ' AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}' \});\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855590 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619]);\
x_3 = linspace(0,15000,15);Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3 = sequences_Hamiltonian_FIRSTfifteen;\
plot(x_3,y_3,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 15000]);\
xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , ' AATTTA,ACAgAG,CAGTCaanAAATCCACGTA', ' AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA' , ' AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855590 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619]);\
x_3 = linspace(1000,15000,15);Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3 = sequences_Hamiltonian_FIRSTfifteen;\
plot(x_3,y_3,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 15000]);\
xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , ' AATTTA,ACAgAG,CAGTCaanAAATCCACGTA', ' AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA' , ' AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855590 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619]);\
x_3 = linspace(1000,15000,15);Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3 = sequences_Hamiltonian_FIRSTfifteen;\
plot(x_3,y_3,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 15000]);\
xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , '\\\{color\{orange\}AATTTA,ACAgAG,CAGTCaanAAATCCACGTA\}', ' AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA' , ' AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855590 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619]);\
x_3 = linspace(1000,15000,15);Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3 = sequences_Hamiltonian_FIRSTfifteen;\
plot(x_3,y_3,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 15000]);\
xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , '\{\\color\{orange\}AATTTA,ACAgAG,CAGTCaanAAATCCACGTA\}', ' AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA' , ' AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855590 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619]);\
x_3 = linspace(1000,15000,15);Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3 = sequences_Hamiltonian_FIRSTfifteen;\
plot(x_3,y_3,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 15000]);\
xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , '\{\\color\{orange\}AATTTA,ACAgAG,CAGTCaanAAATCCACGTA\}', '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
subplot(3,1,1)\
sequences_Hamiltonian_FIRSTfifteen = [Hamiltonian_C1; Hamiltonian_C2; Hamiltonian_C3; Hamiltonian_C4; Hamiltonian_C5; Hamiltonian_C6;  Hamiltonian_C1_2; Hamiltonian_C2_2; Hamiltonian_C3_2; Hamiltonian_C4_2; Hamiltonian_C5_2; Hamiltonian_C6_2; Hamiltonian_C3_1; Hamiltonian_C3_2; Hamiltonian_C3_3];\
sorted = sort([0.854726811659131 0.754147819067206 0.731027355324388 0.767607861569519 0.893925783791197 0.963186056694457 0.927929013307228 0.838170039325183 0.011593287855590 0.001852884668431 0.296059374682612 0.833068835454632 0.828824704709133 0.011593287855589 0.894347497534619]);\
x_3 = linspace(1000,15000,15);Hamiltonian_C5_2 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3 = sequences_Hamiltonian_FIRSTfifteen;\
plot(x_3,y_3,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 15000]);\
xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , '\{\\color\{orange\}AATTTA,ACAgAG,CAGTCaanAAATCCACGTA\}', '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
subplot(3,1,2)\
sequences_Hamiltonian_SECONDfifteen = [Hamiltonian_triple; Hamiltonian_triple_2_A;Hamiltonian_double;Hamiltonian_double_C2;Hamiltonian_double_C2_2;Hamiltonian_double_C2_2A;Hamiltonian_double_C2_2B;Hamiltonian_double_C2_2_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_triple_A ; Hamiltonian_triple_A_2;Hamiltonian_quad; Hamiltonian_triple_II; Hamiltonian_double_II; Hamiltonian_TRIPLE_II];\
sorted_values = sort([ 0.822725246606518 0.784810520925704 0.777048652445489 0.841291448057122 0.802988704367723 0.852951933232366 0.825199891201852 0.832698761282255 0.799266926400893 0.907295259867857 0.893125988846724 0.886463133649195 0.942692943836891 0.955239291590360 0.938554501313303]);\
x = linspace(1000,14000,15);\
% x = transpose(x);\
y = sequences_Hamiltonian_SECONDfifteen;\
plot(x,y,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAnAAAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAnAAAAATCCACGTA' , '\{\\color\{orange\}AATTTA,AcAgAG,CAGTCAGnAAAATCCACGTA\}' , 'AATTTA,ACAgAg,CAGTCAnAAAAATCCACGTA ' , ' \{\\color\{orange\}AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA\}' , ' AATTTA,ACAgAG,cAGTCAnAAAAATCCACGTA', ' \{\\color\{orange\}AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA\}' , ' \{\\color\{orange\}AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA\}' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcanAAAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcanAAAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAnAAAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values)\
title('CASE 2: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
% sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
subplot(3,1,3)\
sequences_Hamiltonian_THIRDfifteen = [Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_double_2; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_C2_2_2_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_quad_2; Hamiltonian_triple_II_2; Hamiltonian_double_II_2 ; Hamiltonian_TRIPLE_II_2];\
sorted_values_1 = sort([0.784810520925704 0.837079725306906 0.736740607519727 0.802988704367723 0.778506198652469 0.816216256906491 0.789601309899058 0.799266926400893 0.846466326508041 0.893125988846724 0.898991269958390 0.879193736507195 0.940607860875021 0.945085039872948 0.909199833712599]);\
x_1 = linspace(1000,14000,15);\
% x = transpose(x);\
y_1 = sequences_Hamiltonian_THIRDfifteen;\
plot(x_1,y_1,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000]);\
xticklabels(\{ 'AATTTA,AcagAG,CAGTCAGAnAAATCCACGTA ' , ' AATTTA,ACAgag,CAGTCAGAnAAATCCACGTA' , '\{\\color\{orange\}AATTTA,AcAgAG,CAGTCAGGAnAATCCACGTA\} ' , '\{\\color\{orange\}AATTTA,ACAgAg,CAGTCAGAnAAATCCACGTA\} ' , ' AATTTA,AcAGAG,cAGTCAGAnAAATCCACGTA' , ' AATTTA,ACAgAG,cAGTCAGAnAAATCCACGTA', ' AATTTA,AcAGAG,cAGTCAnAAAAATCCACGTA' , ' AATTTA,AcAGAG,CAgTCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGtcAnAAAAATCCACGTA' , ' AATTTA,ACAgAG,CAGTcaGAnAAATCCACGTA', 'AATTTA,AcAgAG,CAGTcaGAnAAATCCACGTA ' , ' AATTTA,ACAgAG,CAGtcaGAnAAATCCACGTA ' , '  AATTTA,ACAgAG,CAGTcaGAnAAATCCACGTA ' , ' AATTTA,ACAgAG,CAgtcAGAnAAATCCACGTA ' \});\
xtickangle(35)\
yticks(sorted_values_1)\
title('CASE 3: Confirming that the Hamiltonian assigns \{\\color\{blue\}less energy\} to sequences with base mismatches from sequences of Type I, II or III')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Hamiltonian value corresponding to a sequence'\})\
hold on;\
refline\
sequences_Hamiltonian_FIRSTfifteen\
sequences_Hamiltonian_SECONDfifteen\
sequences_Hamiltonian_THIRDfifteen\
%-- 2/27/20, 10:30 PM --%\
demo()\
nasa_test()\
data_new=struct2cell(data);\
data_new\{1\};\
X=data_new\{1\};\
length(data_new)\
nasa_test()\
nasa_test(data)\
names = fieldnames(data)\
names\{1\}\
names\{4\}\
nasa_test\
nasa_test(data)\
char2str('t')\
string('t')\
TEST = 'Plot of times versus' + string('t')\
nasa_test\
nasa_test(data)\
[data_new] = nasa_test(data)\
data_1 = data;\
[data_new] = nasa_test(data_1,data)\
nasa_test\
[data_new] = nasa_test(data_1,data)\
% READ IN TABLE DATA\
Table = readtable('First6-Data.csv');\
Table_3 = readtable('PAMData.csv');\
Table_4 = readtable('Last14Data.csv');\
% define positions for terms in partition function\
I = 30;\
JI = 45;\
IJ=20;\
beta = 0.005;\
N = 16;\
N_1 = 13;\
% define possible cases of 3 mismatches\
number_1 = 1;\
number_2 = 2;\
number_3 = 3;\
J=3;\
lambda_mismatch = exp(-5/2);\
lambda_c = 0.025;\
lambda_p = 0.015;\
couplings_ij1 = exp(N-J);\
couplings_ij2 = N-J;\
% hamiltonian_i1 = exp(couplings_ij1 * 1 * exp(lambda_mismatch * (N-J)));\
% hamiltonian_i2 = exp(couplings_ij2 * 1) * exp(lambda_mismatch * (N-J));\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-13|/13 = 0.692\
Hamiltonian_double = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-4)-1)* 0.692)))));\
% generate a test function with specific normalizations\
func_double_2 = @(X) (Hamiltonian_double)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-13|/13 = 0.385\
Hamiltonian_double_C2_2B = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-8)-1)* 0.385)))));\
% generate a test function with specific normalizations\
func_double_C2_2B = @(X) (Hamiltonian_double_C2_2B)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate EIGHTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308\
Hamiltonian_double_C2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-9)-1)* 0.308)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2 = @(X) (Hamiltonian_double_C2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-13|/13 = 0.538\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-6)-1)* 0.538)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2A = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-2)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2A = @(X) (Hamiltonian_double_C2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231\
Hamiltonian_double_C2_2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-10)-1)* 0.231)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% REPEAT THE SAME SEQUENCES FOR A DIFFERENT POSITION OF BINDING,\
% ORIGINALLY FROM THE THIRD SET OF 15 SEQUENCES IN THE DEMO .M FILE\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-15|/15 = 0.733\
Hamiltonian_double_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-4)-1)* 0.733)))));\
% generate a test function with specific normalizations\
func_double_2_2 = @(X) (Hamiltonian_double_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-15|/15 = 0.533\
Hamiltonian_double_C2_2_2A = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-7)-1)* 0.533)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2A = @(X) (Hamiltonian_double_C2_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-15|/15 = 0.467\
Hamiltonian_double_C2_2B_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-9)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-8)-1)* 0.467)))));\
% generate a test function with specific normalizations\
func_double_C2_2B_2 = @(X) (Hamiltonian_double_C2_2B_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate EIGHTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-15|/15 = 0.4\
Hamiltonian_double_C2_2_2_2X = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-9)-1)* 0.400)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2X)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-15|/15 = 0.6\
Hamiltonian_double_C2_2Y = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-6)-1)* 0.600)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2Y)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-15|/15 = 0.533\
Hamiltonian_double_C2_2A_2A = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-2)+(15-5)+(15-6)+(15-8)+(15-9)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-7)-1)* 0.533)))));\
% generate a test function with specific normalizations\
func_double_C2_2A_2A = @(X) (Hamiltonian_double_C2_2A_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3\
Hamiltonian_double_C2_2_2_2_2A = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-10)-1)* 0.333)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2_2A = @(X) (Hamiltonian_double_C2_2_2_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% THE ABOVE SEQUENCES CONCLUDE THE 2 BP GROUP\
% CONTINUE WITH 3 BP GROUP, FOR EACH BINDING\
% POSITION, ORIGINALLY FROM THE SECOND\
% AND THIRD GROUP IN DEMO .M\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 13\
normalization_triple_bm = 1/(10+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-13|/13 = 0.769, and the THIRD mismatch factor\
% comes from |4-13|/13 = 0.6923.\
Hamiltonian_triple = exp(-((normalization_triple_bm * (((13-1)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_triple_bmis .*((((13-2)-1)* 0.846)+ (((13-3)-1)* 0.769)+(((13-4)-1)* 0.6923)))));\
% generate a test function with specific normalizations\
func_triple = @(X) (Hamiltonian_triple)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 13\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-13|/13 = 0.6923, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.615, and the THIRD T_ij factor comes\
% from the fact that |6-13|/13 = 0.5384.\
Hamiltonian_triple_2_A = exp(-((normalization_triple_bm_1 * (((13-1)+(13-2)+(13-3)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_triple_bmis_1 .*((((13-4)-1)* 0.6923)+ (((13-5)-1)* 0.615)+(((13-6)-1)* 0.5384)))));\
% generate a test function with specific normalizations\
func_triple_2_A = @(X) (Hamiltonian_triple_2_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.15 = |11-13|/13\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-10)-1)* 0.231)+(((13-11)-1)* 0.15)))));\
% generate a test function with specific normalizations\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13\
Hamiltonian_triple_A_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))+(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.077)))));\
% generate a test function with specific normalizations\
func_triple_A_2 = @(X) (Hamiltonian_triple_A_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.153 = |11-13|/13, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_triple_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9))))+(normalization_double_2 .*((((13-10)-1)* 0.231)+(((13-11)-1)* 0.153)+ (((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_triple_II = @(X) (Hamiltonian_triple_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308, while the SECOND\
% T_ij factor comes from the fact that\
% 0.231 = |10-13|/13, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-13|/13 = 0.154.\
Hamiltonian_TRIPLE_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8))))+(normalization_double_2 .*((((13-9)-1)* 0.308)+(((13-10)-1)* 0.231) + (((13-11)-1)*0.154)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II = @(X) (Hamiltonian_TRIPLE_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% CHANGE THE BINDING POSITION (!!!)\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 15\
normalization_triple_bm = 1/(11+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-15|/15 = 0.8, and the THIRD mismatch factor\
% comes from |4-15|/15 = 0.733\
Hamiltonian_triple_2_B = exp(-((normalization_triple_bm * (((15-1)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_triple_bmis .*((((15-2)-1)* 0.867)+ (((15-3)-1)* 0.800)+(((15-4)-1)* 0.733)))));\
% generate a test function with specific normalizations\
func_triple_2_B = @(X) (Hamiltonian_triple_2_B)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 15\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-15|/15 = 2/3, and the THIRD T_ij factor comes\
% from the fact that |6-15|/15 = 0.6\
Hamiltonian_triple_2_2A = exp(-((normalization_triple_bm_1 * (((15-1)+(15-2)+(15-3)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_triple_bmis_1 .*((((15-4)-1)* 0.733)+ (((15-5)-1)* 0.667)+(((15-6)-1)* 0.600)))));\
% generate a test function with specific normalizations\
func_triple_2_2A = @(X) (Hamiltonian_triple_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.267 = |11-15|/15\
Hamiltonian_triple_A_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-12))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-10)-1)* 0.333)+(((15-11)-1)* 0.267)))));\
% generate a test function with specific normalizations\
func_triple_A_2 = @(X) (Hamiltonian_triple_A_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-15|/15 = 0.267, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 1/5 = |12-15|/15\
Hamiltonian_triple_A_2_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-11)-1)* 0.267)+(((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_triple_A_2_2 = @(X) (Hamiltonian_triple_A_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-15|/15 = 0.400, while the SECOND\
% T_ij factor comes from the fact that\
% 1/3 = |10-15|/15, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-15|/15 = 0.267.\
Hamiltonian_TRIPLE_II_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8))))+(normalization_double_2 .*((((15-9)-1)* 0.400)+(((15-10)-1)* 0.333) + (((15-11)-1)*0.267)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II_2 = @(X) (Hamiltonian_TRIPLE_II_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3 , while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.267 = |11-15|/15, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 3/15 = 1/5\
Hamiltonian_triple_II_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9))))+(normalization_double_2 .*((((15-10)-1)* 0.333)+(((15-11)-1)* 0.267)+ (((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_triple_II_2 = @(X) (Hamiltonian_triple_II_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% PLOTTING THE SEQUENCES SO FAR, SEPARATELY\
% AND INDIVIDUALLY\
sequences_Hamiltonian_2bp = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
length(sequences_Hamiltonian_2bp)\
% READ IN TABLE DATA\
Table = readtable('First6-Data.csv');\
Table_3 = readtable('PAMData.csv');\
Table_4 = readtable('Last14Data.csv');\
% define positions for terms in partition function\
I = 30;\
JI = 45;\
IJ=20;\
beta = 0.005;\
N = 16;\
N_1 = 13;\
% define possible cases of 3 mismatches\
number_1 = 1;\
number_2 = 2;\
number_3 = 3;\
J=3;\
lambda_mismatch = exp(-5/2);\
lambda_c = 0.025;\
lambda_p = 0.015;\
couplings_ij1 = exp(N-J);\
couplings_ij2 = N-J;\
% hamiltonian_i1 = exp(couplings_ij1 * 1 * exp(lambda_mismatch * (N-J)));\
% hamiltonian_i2 = exp(couplings_ij2 * 1) * exp(lambda_mismatch * (N-J));\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-13|/13 = 0.692\
Hamiltonian_double = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-4)-1)* 0.692)))));\
% generate a test function with specific normalizations\
func_double_2 = @(X) (Hamiltonian_double)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-13|/13 = 0.385\
Hamiltonian_double_C2_2B = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-8)-1)* 0.385)))));\
% generate a test function with specific normalizations\
func_double_C2_2B = @(X) (Hamiltonian_double_C2_2B)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate EIGHTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308\
Hamiltonian_double_C2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-2)-1)* 0.846)+ (((13-9)-1)* 0.308)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2 = @(X) (Hamiltonian_double_C2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-13|/13 = 0.538\
Hamiltonian_double_C2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-6)-1)* 0.538)))));\
% generate a test function with specific normalizations\
func_double_C2 = @(X) (Hamiltonian_double_C2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-13|/13 = 0.462\
Hamiltonian_double_C2_2A = exp(-((normalization_double_1 * (((13-1)+(13-3)+(13-2)+(13-5)+(13-6)+(13-8)+(13-9)+(13-10)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-7)-1)* 0.462)))));\
% generate a test function with specific normalizations\
func_double_C2_2A = @(X) (Hamiltonian_double_C2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231\
Hamiltonian_double_C2_2_2_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12)+(13-11))))+(normalization_double_2 .*((((13-4)-1)* 0.692)+ (((13-10)-1)* 0.231)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% REPEAT THE SAME SEQUENCES FOR A DIFFERENT POSITION OF BINDING,\
% ORIGINALLY FROM THE THIRD SET OF 15 SEQUENCES IN THE DEMO .M FILE\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 4, comes from the fact that\
% |4-15|/15 = 0.733\
Hamiltonian_double_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-4)-1)* 0.733)))));\
% generate a test function with specific normalizations\
func_double_2_2 = @(X) (Hamiltonian_double_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-15|/15 = 0.533\
Hamiltonian_double_C2_2_2A = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-7)-1)* 0.533)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2A = @(X) (Hamiltonian_double_C2_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SEVENTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 8, comes from the fact that\
% |8-15|/15 = 0.467\
Hamiltonian_double_C2_2B_2 = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-9)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-8)-1)* 0.467)))));\
% generate a test function with specific normalizations\
func_double_C2_2B_2 = @(X) (Hamiltonian_double_C2_2B_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate EIGHTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 2,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 9, comes from the fact that\
% |9-15|/15 = 0.4\
Hamiltonian_double_C2_2_2_2X = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-2)-1)* 0.867)+ (((15-9)-1)* 0.400)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2_2 = @(X) (Hamiltonian_double_C2_2_2_2X)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FOURTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 6, comes from the fact that\
% |6-15|/15 = 0.6\
Hamiltonian_double_C2_2Y = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-6)-1)* 0.600)))));\
% generate a test function with specific normalizations\
func_double_C2_2 = @(X) (Hamiltonian_double_C2_2Y)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SIXTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 7, comes from the fact that\
% |7-15|/15 = 0.533\
Hamiltonian_double_C2_2A_2A = exp(-((normalization_double_1 * (((15-1)+(15-3)+(15-2)+(15-5)+(15-6)+(15-8)+(15-9)+(15-10)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-7)-1)* 0.533)))));\
% generate a test function with specific normalizations\
func_double_C2_2A_2A = @(X) (Hamiltonian_double_C2_2A_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate NINTH case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3\
Hamiltonian_double_C2_2_2_2_2A = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-12)+(15-11))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-10)-1)* 0.333)))));\
% generate a test function with specific normalizations\
func_double_C2_2_2_2_2A = @(X) (Hamiltonian_double_C2_2_2_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% THE ABOVE SEQUENCES CONCLUDE THE 2 BP GROUP\
% CONTINUE WITH 3 BP GROUP, FOR EACH BINDING\
% POSITION, ORIGINALLY FROM THE SECOND\
% AND THIRD GROUP IN DEMO .M\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 13\
normalization_triple_bm = 1/(10+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-13|/13 = 0.846, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-13|/13 = 0.769, and the THIRD mismatch factor\
% comes from |4-13|/13 = 0.6923.\
Hamiltonian_triple = exp(-((normalization_triple_bm * (((13-1)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_triple_bmis .*((((13-2)-1)* 0.846)+ (((13-3)-1)* 0.769)+(((13-4)-1)* 0.6923)))));\
% generate a test function with specific normalizations\
func_triple = @(X) (Hamiltonian_triple)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 13\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-13|/13 = 0.6923, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-13|/13 = 0.615, and the THIRD T_ij factor comes\
% from the fact that |6-13|/13 = 0.5384.\
Hamiltonian_triple_2_A = exp(-((normalization_triple_bm_1 * (((13-1)+(13-2)+(13-3)+(13-7)+(13-8)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_triple_bmis_1 .*((((13-4)-1)* 0.6923)+ (((13-5)-1)* 0.615)+(((13-6)-1)* 0.5384)))));\
% generate a test function with specific normalizations\
func_triple_2_A = @(X) (Hamiltonian_triple_2_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.15 = |11-13|/13\
Hamiltonian_triple_A = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-10)-1)* 0.231)+(((13-11)-1)* 0.15)))));\
% generate a test function with specific normalizations\
func_triple_A = @(X) (Hamiltonian_triple_A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-13|/13 = 0.692, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-13|/13 = 0.153, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.077 = |12-13|/13\
Hamiltonian_triple_A_2 = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-10))))+(normalization_double_2 .*((((13-4)-1)* 0.6923)+ (((13-11)-1)* 0.153)+(((13-12)-1)* 0.077)))));\
% generate a test function with specific normalizations\
func_triple_A_2 = @(X) (Hamiltonian_triple_A_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(9+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-13|/13 = 0.231, while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.153 = |11-13|/13, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 1/13 = 0.0769\
Hamiltonian_triple_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9))))+(normalization_double_2 .*((((13-10)-1)* 0.231)+(((13-11)-1)* 0.153)+ (((13-12)-1)* 0.0769)))));\
% generate a test function with specific normalizations\
func_triple_II = @(X) (Hamiltonian_triple_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-13|/13 = 0.308, while the SECOND\
% T_ij factor comes from the fact that\
% 0.231 = |10-13|/13, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-13|/13 = 0.154.\
Hamiltonian_TRIPLE_II = exp(-((normalization_double_1 * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-8))))+(normalization_double_2 .*((((13-9)-1)* 0.308)+(((13-10)-1)* 0.231) + (((13-11)-1)*0.154)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II = @(X) (Hamiltonian_TRIPLE_II)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% CHANGE THE BINDING POSITION (!!!)\
% simulate FIRST case of 3 base pair\
% mismatch, in which we have 3 base pair\
% mismatches (2,3,4), consecutively all within\
% the first 6 positions, with N = 15\
normalization_triple_bm = 1/(11+2)^3;\
normalization_triple_bmis = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |2-15|/15 = 0.867, while the T_ij factor for the\
% SECOND mismatch, at 3, comes from the fact that\
% |3-15|/15 = 0.8, and the THIRD mismatch factor\
% comes from |4-15|/15 = 0.733\
Hamiltonian_triple_2_B = exp(-((normalization_triple_bm * (((15-1)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_triple_bmis .*((((15-2)-1)* 0.867)+ (((15-3)-1)* 0.800)+(((15-4)-1)* 0.733)))));\
% generate a test function with specific normalizations\
func_triple_2_B = @(X) (Hamiltonian_triple_2_B)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate SECOND case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches\
% as in the first case, BUT we translate\
% the sequence of mismatches down the sequence\
% by one unit, again with N = 15\
normalization_triple_bm_1 = 1/(11+2)^3;\
normalization_triple_bmis_1 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 8,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 5, comes from the fact that\
% |5-15|/15 = 2/3, and the THIRD T_ij factor comes\
% from the fact that |6-15|/15 = 0.6\
Hamiltonian_triple_2_2A = exp(-((normalization_triple_bm_1 * (((15-1)+(15-2)+(15-3)+(15-7)+(15-8)+(15-9)+(15-10)+(15-11)+(15-12))))+(normalization_triple_bmis_1 .*((((15-4)-1)* 0.733)+ (((15-5)-1)* 0.667)+(((15-6)-1)* 0.600)))));\
% generate a test function with specific normalizations\
func_triple_2_2A = @(X) (Hamiltonian_triple_2_2A)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate TENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 0.267 = |11-15|/15\
Hamiltonian_triple_A_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-12))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-10)-1)* 0.333)+(((15-11)-1)* 0.267)))));\
% generate a test function with specific normalizations\
func_triple_A_2 = @(X) (Hamiltonian_triple_A_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate ELEVENTH case of 3 base pair mismatch,\
% in which we have ONE base pair mismatch\
% within the first 6 position, while we\
% also have 2 additional mismatches past\
% the first 6 positions, for a\
% position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 4,comes from the fact that\
% |4-15|/15 = 0.733, while the T_ij factor for the\
% SECOND mismatch, at 10, comes from the fact that\
% |11-15|/15 = 0.267, while finally, the THIRD\
% T_ij factor comes from the fact that\
% 1/5 = |12-15|/15\
Hamiltonian_triple_A_2_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9)+(15-10))))+(normalization_double_2 .*((((15-4)-1)* 0.733)+ (((15-11)-1)* 0.267)+(((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_triple_A_2_2 = @(X) (Hamiltonian_triple_A_2_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate FIFTEENTH case of 2 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 15\
normalization_double_1 = 1/(12+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 9, comes from the fact that\
% |9-15|/15 = 0.400, while the SECOND\
% T_ij factor comes from the fact that\
% 1/3 = |10-15|/15, at 10, and finally,\
% the THIRD mismatch at 11 comes from the\
% fact that |11-15|/15 = 0.267.\
Hamiltonian_TRIPLE_II_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8))))+(normalization_double_2 .*((((15-9)-1)* 0.400)+(((15-10)-1)* 0.333) + (((15-11)-1)*0.267)))));\
% generate a test function with specific normalizations\
func_TRIPLE_II_2 = @(X) (Hamiltonian_TRIPLE_II_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% simulate THIRTEENTH case of 3 base pair mismatch,\
% in which we have 3 base pair mismatches,\
% each of which are past the first 6 positions\
% with position of binding, N = 15\
normalization_double_1 = 1/(11+2)^3;\
normalization_double_2 = 1/(2+3)^3;\
% construct the Hamiltonian. The T_ij factor for\
% the FIRST mismatch, at 10, comes from the fact that\
% |10-15|/15 = 1/3 , while finally, the SECOND\
% T_ij factor comes from the fact that\
% 0.267 = |11-15|/15, and FINALLY, the\
% THIRD mismatch factor comes from\
% the fact that 3/15 = 1/5\
Hamiltonian_triplee_II_2 = exp(-((normalization_double_1 * (((15-1)+(15-2)+(15-3)+(15-4)+(15-5)+(15-6)+(15-7)+(15-8)+(15-9))))+(normalization_double_2 .*((((15-10)-1)* 0.333)+(((15-11)-1)* 0.267)+ (((15-12)-1)* 0.200)))));\
% generate a test function with specific normalizations\
func_triple_II_2 = @(X) (Hamiltonian_triplee_II_2)./(1+(lambda_c .* exp(-beta * Table\{I,8\})) + (lambda_c * exp(-beta * Table_4\{JI,8\})) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
% PLOTTING THE SEQUENCES SO FAR, SEPARATELY\
% AND INDIVIDUALLY\
sequences_Hamiltonian_2bp = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2; Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sequences_Hamiltonian_3bp = [Hamiltonian_triple; Hamiltonian_triple_2; Hamiltonian_triple_A; Hamiltonian_triple_A_2; Hamiltonian_triple_II; Hamiltonian_TRIPLE_II; Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_TRIPLE_II_2; Hamiltonian_triplee_II_2];\
sequences_Hamiltonian_3bp = [Hamiltonian_triple; Hamiltonian_triple_2A; Hamiltonian_triple_A; Hamiltonian_triple_A_2; Hamiltonian_triple_II; Hamiltonian_TRIPLE_II; Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_TRIPLE_II_2; Hamiltonian_triplee_II_2];\
sequences_Hamiltonian_3bp = [Hamiltonian_triple; Hamiltonian_triple_A; Hamiltonian_triple_A; Hamiltonian_triple_A_2; Hamiltonian_triple_II; Hamiltonian_TRIPLE_II; Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_TRIPLE_II_2; Hamiltonian_triplee_II_2];\
length(sequences_Hamiltonian_3bp)\
sequences_Hamiltonian_2bp\
format long\
sequences_Hamiltonian_2bp\
sequences_Hamiltonian_3bp\
Hamiltonian_double_C2_2_2_2\
Hamiltonian_double_2\
subplot(2,1,1);\
plot(1:10);\
uitable('Data', [1 2 3], 'ColumnName', \{'A', 'B', 'C'\}, 'Position', [20 20 500 150]);\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,15000,15);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 15000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian value of a corresponding sequence'\})\
hold on;\
plot(x_3_1 , y_3_2, 'or')\
hold on;\
refline\
uitable('Data', [AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA  AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA], 'ColumnName', \{'Orange sequence form'\}, 'Position', [20 20 500 150]);\
normalization_3_bm = 1/(13+2)^3;\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,15000,15);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 15000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian value of a corresponding sequence'\})\
hold on;\
plot(x_3_1 , y_3_2, 'or')\
hold on;\
refline\
uitable('Data', [AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA  AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA], 'ColumnName', \{'Orange sequence form'\}, 'Position', [20 20 500 150]);\
normalization_3_bmis = 1/(2+2)^3;\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,15000,15);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 15000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian value of a corresponding sequence'\})\
hold on;\
plot(x_3_1 , y_3_2, 'or')\
hold on;\
refline\
uitable('Data', [AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA  AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA], 'ColumnName', \{'Orange sequence form'\}, 'Position', [20 20 500 150]);\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,15000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 15000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian value of a corresponding sequence'\})\
hold on;\
plot(x_3_1 , y_3_2, 'or')\
hold on;\
refline\
uitable('Data', [AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA  AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA], 'ColumnName', \{'Orange sequence form'\}, 'Position', [20 20 500 150]);\
plot(1:10);\
uitable('Data', [1 2 3], 'ColumnName', \{'A', 'B', 'C'\}, 'Position', [20 20 500 150]);\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,15000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 15000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian value of a corresponding sequence'\})\
hold on;\
plot(x_3_1 , y_3_2, 'or')\
hold on;\
refline\
uitable('Data', [AATTTAAcAGaGCAGTCAGAAnAATCCACGTA  AATTTAACAgaGCAGTCAGAAnATCCACGTA], 'ColumnName', \{'Orange sequence form'\}, 'Position', [20 20 500 150]);\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,15000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 15000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
% legend(\{'Computed Hamiltonian value of a corresponding sequence'\})\
hold on;\
plot(x_3_1 , y_3_2, 'or')\
hold on;\
refline\
uitable('Data', [AATTTAAcAGaGCAGTCAGAAnAATCCACGTA  AATTTAACAgaGCAGTCAGAAnATCCACGTA], 'ColumnName', \{'Orange sequence form'\}, 'Position', [20 20 500 150]);\
subplot(2,1,1);\
plot(1:10);\
uitable('Data', [1 2 3], 'ColumnName', \{'A', 'B', 'C'\}, 'Position', [20 20 500 150]);\
subplot(2,1,1);\
plot(1:10);\
uitable('Data', [1 2 3], 'ColumnName', \{'A', 'ccc', 'C'\}, 'Position', [20 20 500 150]);\
subplot(2,1,1);\
plot(1:10);\
uitable('Data', ['bb' 2 3], 'ColumnName', \{'A', 'B', 'C'\}, 'Position', [20 20 500 150]);\
str = 'AATTTAAcAGaGCAGTCAGAAnAATCCACGTA';\
subplot(2,1,1);\
plot(1:10);\
uitable('Data', [str 2 3], 'ColumnName', \{'first', 'second'\}, 'Position', [20 20 500 150]);\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,15000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'or')\
xticks([1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 15000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
% legend(\{'Computed Hamiltonian value of a corresponding sequence'\})\
hold on;\
plot(x_3_1 , y_3_2, 'or')\
hold on;\
refline\
x_3_1 = linspace(1000,15000,7);\
x_3_1\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,15000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'or')\
xticks([1000 3000 5000 7000 9000 11000 13000 15000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
% legend(\{'Computed Hamiltonian value of a corresponding sequence'\})\
hold on;\
plot(x_3_1 , y_3_2, 'or')\
hold on;\
refline\
length(sequences_Hamiltonian_2bp_1)\
length(sequences_Hamiltonian_2bp_2)\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,15000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'or')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(35)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
% legend(\{'Computed Hamiltonian value of a corresponding sequence'\})\
hold on;\
plot(x_3_1 , y_3_2, 'or')\
hold on;\
refline\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
length(sorted)\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,15000,6);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'or')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
% legend(\{'Computed Hamiltonian value of a corresponding sequence'\})\
hold on;\
plot(x_3_1 , y_3_2, 'or')\
hold on;\
refline\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,15000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'or')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
% legend(\{'Computed Hamiltonian value of a corresponding sequence'\})\
hold on;\
plot(x_3_1 , y_3_2, 'or')\
hold on;\
refline\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(0,15000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'or')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
% legend(\{'Computed Hamiltonian value of a corresponding sequence'\})\
hold on;\
plot(x_3_1 , y_3_2, 'or')\
hold on;\
refline\
refline\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(0,15000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'or')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
% legend(\{'Computed Hamiltonian value of a corresponding sequence'\})\
hold on;\
plot(x_3_1 , y_3_2, 'or')\
hold on;\
refline\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'or')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
% legend(\{'Computed Hamiltonian value of a corresponding sequence'\})\
hold on;\
plot(x_3_1 , y_3_2, 'or')\
hold on;\
refline\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'or')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13', 'Computed Hamiltonian for Binding Position 15'\})\
hold on;\
plot(x_3_1 , y_3_2, 'or')\
hold on;\
refline\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'or', 'b')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\})\
hold on;\
plot(x_3_1 , y_3_2, 'or', 'r')\
hold on;\
refline\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'b', 'or' )\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\})\
hold on;\
plot(x_3_1 , y_3_2, 'r' , 'or')\
hold on;\
refline\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'b')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\})\
hold on;\
plot(x_3_1 , y_3_2, 'r')\
hold on;\
refline\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'b', '.')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\})\
hold on;\
plot(x_3_1 , y_3_2, 'r', '.')\
hold on;\
refline\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'b', '*')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\})\
hold on;\
plot(x_3_1 , y_3_2, 'r', '*')\
hold on;\
refline\
figure(1)\
plot(1,1, 'p', 'MarkerSize',20, 'Color',[0 0.9 0], 'MarkerFaceColor',[0 0.9 0])\
hold on\
plot(2,2, 'p', 'MarkerSize',20, 'Color',[0 0.8 0], 'MarkerFaceColor',[0 0.8 0])\
plot(1,2, 'p', 'MarkerSize',20, 'Color',[0 0.5 0], 'MarkerFaceColor',[0 0.5 0])\
plot(2,1, 'p', 'MarkerSize',20, 'Color',[0 0.1 0], 'MarkerFaceColor',[0 0.1 0])\
hold off\
axis([0  3    0  3])\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'-o', 'g',x_3_1 , y_3_2, '-o' , 'b')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\})\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'g',x_3_1 , y_3_2, 'b')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\})\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
a = get(leg, 'position')\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'g',x_3_1 , y_3_2, 'b')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\}, 'Location', 'northwest')\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'g',x_3_1 , y_3_2, 'b')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\}, 'Location', 'northeast')\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'g',x_3_1 , y_3_2, 'b')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\}, 'Location', 'northsouth')\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
figure(1)\
subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'g',x_3_1 , y_3_2, 'b')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\}, 'Location', 'southoutside')\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
figure(1)\
% subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'g',x_3_1 , y_3_2, 'b')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\}, 'Location', 'southoutside')\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
figure(1)\
% subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'g','.', x_3_1 , y_3_2, 'b', '.')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\}, 'Location', 'southoutside')\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
figure(1)\
% subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
plot(x_3_1,y_3_1,'g','.')\
hold on;\
plot(x_3_1 , y_3_2, 'b', '.')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\}, 'Location', 'southoutside')\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
figure(1)\
% subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
scatter(x_3_1,y_3_1,'g')\
hold on;\
scatter(x_3_1 , y_3_2, 'b')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\}, 'Location', 'southoutside')\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
sequences_Hamiltonian_3bp_1 = [Hamiltonian_triple; Hamiltonian_triple_2A; Hamiltonian_triple_A; Hamiltonian_triple_A_2; Hamiltonian_triple_II; Hamiltonian_TRIPLE_II; Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_TRIPLE_II_2; Hamiltonian_triplee_II_2];\
sequences_Hamiltonian_3bp_1 = [Hamiltonian_triple; Hamiltonian_triple_2_A; Hamiltonian_triple_A; Hamiltonian_triple_A_2; Hamiltonian_triple_II; Hamiltonian_TRIPLE_II; Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_TRIPLE_II_2; Hamiltonian_triplee_II_2];\
sequences_Hamiltonian_3bp_1\
sequences_Hamiltonian_3bp_1(7)\
Hamiltonian_triple_2_B\
figure(1)\
% subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
% Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
scatter(x_3_1,y_3_1,'g')\
hold on;\
scatter(x_3_1 , y_3_2, 'b')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\}, 'Location', 'southoutside')\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
% uitable('Data', [AATTTAAcAGaGCAGTCAGAAnAATCCACGTA  AATTTAACAgaGCAGTCAGAAnATCCACGTA], 'ColumnName', \{'Orange sequence form'\}, 'Position', [20 20 500 150]);\
% subplot(2,1,2)\
figure(2)\
% subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_3bp_1 = [Hamiltonian_triple; Hamiltonian_triple_2_A; Hamiltonian_triple_A; Hamiltonian_triple_A_2; Hamiltonian_triple_II; Hamiltonian_TRIPLE_II];\
sequences_Hamiltonian_3bp_2 = [Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_TRIPLE_II_2; Hamiltonian_triplee_II_2];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_11 = linspace(1000,13000,7);\
% Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_11 = sequences_Hamiltonian_3bp_1;\
y_3_22 = sequences_Hamiltonian_3bp_2;\
scatter(x_3_11,y_3_11,'g')\
hold on;\
scatter(x_3_11 , y_3_22, 'b')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\}, 'Location', 'southoutside')\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
length(x_3_11)\
length(y_3_11)\
length(y_3_22)\
figure(1)\
% subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
% Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
scatter(x_3_1,y_3_1,'g')\
hold on;\
scatter(x_3_1 , y_3_2, 'b')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\}, 'Location', 'southoutside')\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
% uitable('Data', [AATTTAAcAGaGCAGTCAGAAnAATCCACGTA  AATTTAACAgaGCAGTCAGAAnATCCACGTA], 'ColumnName', \{'Orange sequence form'\}, 'Position', [20 20 500 150]);\
% subplot(2,1,2)\
figure(2)\
% subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_3bp_1 = [Hamiltonian_triple; Hamiltonian_triple_2_A; Hamiltonian_triple_A; Hamiltonian_triple_A_2; Hamiltonian_triple_II; Hamiltonian_TRIPLE_II];\
sequences_Hamiltonian_3bp_2 = [Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_TRIPLE_II_2; Hamiltonian_triplee_II_2];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_11 = linspace(1000,13000,6);\
% Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_11 = sequences_Hamiltonian_3bp_1;\
y_3_22 = sequences_Hamiltonian_3bp_2;\
scatter(x_3_11,y_3_11,'g')\
hold on;\
scatter(x_3_11 , y_3_22, 'b')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' \})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\}, 'Location', 'southoutside')\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
demo_2\
figure(1)\
% subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
% Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
scatter(x_3_1,y_3_1,'g')\
hold on;\
scatter(x_3_1 , y_3_2, 'b')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\}, 'Location', 'southoutside')\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
% uitable('Data', [AATTTAAcAGaGCAGTCAGAAnAATCCACGTA  AATTTAACAgaGCAGTCAGAAnATCCACGTA], 'ColumnName', \{'Orange sequence form'\}, 'Position', [20 20 500 150]);\
% subplot(2,1,2)\
figure(2)\
% subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_3bp_1 = [Hamiltonian_triple; Hamiltonian_triple_2_A; Hamiltonian_triple_A; Hamiltonian_triple_A_2; Hamiltonian_triple_II; Hamiltonian_TRIPLE_II];\
sequences_Hamiltonian_3bp_2 = [Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_TRIPLE_II_2; Hamiltonian_triplee_II_2];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_11 = linspace(1000,11000,6);\
% Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_11 = sequences_Hamiltonian_3bp_1;\
y_3_22 = sequences_Hamiltonian_3bp_2;\
scatter(x_3_11,y_3_11,'g')\
hold on;\
scatter(x_3_11 , y_3_22, 'b')\
xticks([1000 3000 5000 7000 9000 11000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' \})\
xtickangle(25)\
yticks(sorted)\
title('CASE 2: \{\\color\{blue\}Three base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\}, 'Location', 'southoutside')\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
figure(1)\
% subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_2bp_1 = [Hamiltonian_double; Hamiltonian_double_C2_2; Hamiltonian_double_C2_2B; Hamiltonian_double_C2_2_2; Hamiltonian_double_C2; Hamiltonian_double_C2_2A; Hamiltonian_double_C2_2_2_2];\
sequences_Hamiltonian_2bp_2 = [Hamiltonian_double_2; Hamiltonian_double_C2_2_2A; Hamiltonian_double_C2_2B_2; Hamiltonian_double_C2_2_2_2X; Hamiltonian_double_C2_2Y; Hamiltonian_double_C2_2A_2A; Hamiltonian_double_C2_2_2_2_2A];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_1 = linspace(1000,13000,7);\
% Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_1 = sequences_Hamiltonian_2bp_1;\
y_3_2 = sequences_Hamiltonian_2bp_2;\
scatter(x_3_1,y_3_1,'g')\
hold on;\
scatter(x_3_1 , y_3_2, 'b')\
xticks([1000 3000 5000 7000 9000 11000 13000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' , 'Sequence 7'\})\
xtickangle(25)\
yticks(sorted)\
title('CASE 1: \{\\color\{blue\}Two base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\}, 'Location', 'southoutside')\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
% uitable('Data', [AATTTAAcAGaGCAGTCAGAAnAATCCACGTA  AATTTAACAgaGCAGTCAGAAnATCCACGTA], 'ColumnName', \{'Orange sequence form'\}, 'Position', [20 20 500 150]);\
% subplot(2,1,2)\
figure(2)\
% subplot(2,1,1)\
% define sequences_Hamiltonian as in demo .m\
sequences_Hamiltonian_3bp_1 = [Hamiltonian_triple; Hamiltonian_triple_2_A; Hamiltonian_triple_A; Hamiltonian_triple_A_2; Hamiltonian_triple_II; Hamiltonian_TRIPLE_II];\
sequences_Hamiltonian_3bp_2 = [Hamiltonian_triple_2_B; Hamiltonian_triple_2_2A; Hamiltonian_triple_A_2; Hamiltonian_triple_A_2_2; Hamiltonian_TRIPLE_II_2; Hamiltonian_triplee_II_2];\
sorted = sort([0.777048652445489 0.815803162187861 0.825199891201852 0.832698761282255 0.841291448057122 0.852951933232366 0.876417069648107 0.736740607519727 0.778506198652469 0.789601309899058 0.799266926400893 0.802988704367723 0.816216256906491 0.846466326508041]);\
x_3_11 = linspace(500,12000,6);\
% Hamiltonian_C5_2_1 = exp(-((normalization_3_bm * (((13-1)+(13-2)+(13-3)+(13-4)+(13-5)+(13-6)+(13-7)+(13-9)+(13-10)+(13-11)+(13-12))))+(normalization_3_bmis .*((((13-8)-1)* 0.3846))+ (((13-10)-1)* 0.2307))));\
% x = transpose(x);\
y_3_11 = sequences_Hamiltonian_3bp_1;\
y_3_22 = sequences_Hamiltonian_3bp_2;\
scatter(x_3_11,y_3_11,'g')\
hold on;\
scatter(x_3_11 , y_3_22, 'b')\
xticks([500 3000 5000 7000 9000 12000]);\
%xticklabels(\{ 'AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGaG,CAGTCAGAAnAATCCACGTA' , ' AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , ' AATTTA,ACAgaG,CAGTCAGAAnATCCACGTA ' , ' AATTTA,ACAGAG,CaGtCAGAAnTCCACGTA' , , '\{\\color\{orange\}AATTTA,ACAGAG,CaGTCAnAAAAATCCACGTA\}' , '\{\\color\{orange\}AATTTA,ACAGaG,CAGTCAnAAAAATCCACGTA\}' , ' AATTTA,AcAgaG,CAGtCAnAAAAATCCACGTA' , ' AATTTA,ACAgaG,CAGtCAAAnAAAATCCACGTA' , ' AATTTA,ACAGAG,CaGtCAAAAnAAATCCACGTA', 'AATTTA,AcAgAG,CAgtCAnAAAAATCCACGTA ' , ' AATTTA,ACAGAG,CaGTCAGAAnATCCACGTA ' , '  AATTTA,AcAGaG,CAGTCAGAAnAATCCACGTA ' , '\{\\color\{orange\}AATTTA,ACAGAG,CaGtCAGAAnAATCCACGTA\}'\});\
xticklabels(\{ '\{\\color\{orange\}Sequence 1\}', ' Sequence 2', 'Sequence 3' , ' Sequence 4 '  , '\{\\color\{orange\}Sequence 5\}' , ' Sequence 6 ' \})\
xtickangle(25)\
yticks(sorted)\
title('CASE 2: \{\\color\{blue\}Three base pair mismatches\}')\
xlabel('TARGET SEQUENCE')\
ylabel('HAMILTONIAN')\
legend(\{'Computed Hamiltonian for Binding Position 13' 'Computed Hamiltonian for Binding Position 15'\}, 'Location', 'southoutside')\
% hold on;\
% plot(x_3_1 , y_3_2, '-o', '*', [0 1 0])\
hold on;\
refline\
length(sequences_Hamiltonian_3bp_1) + length(sequences_Hamiltonian_3bp_2)\
visit_pos = zeros(1,20)\
visit_pos(1)=1\
TEST = linspace(exp(-3/2), exp(-1/2),20)\
TEST = linspace(exp(-1/2), exp(-3/2),20)\
length(TEST)\
for m = 1 : length(sequences_Hamiltonian_3bp_1) + length(sequences_Hamiltonian_3bp_2)\
for n = 1 : 5000\
for I = 1 : length(TEST)\
if rand > TEST(I)\
% Change only x.\
% x_t(n+1) = x_t(n) + 1;\
visit_positions_2(I)=visit_positions_2(I)+1;\
else\
% Change only y.\
% x_t(n+1) = x_t(n)-1;\
visit_positions_2(I-1) = visit_positions_2(I-1)+1;\
end\
% distance = sqrt(x_t(n+1)^2 + y_t(n+1)^2);\
end\
plot(visit_positions_2, [1,20], 'LineWidth', 2);\
caption = sprintf('Random Walk #%d of %d', m,  length(sequences_Hamiltonian_3bp_1) + length(sequences_Hamiltonian_3bp_2));\
title(caption, 'FontSize', 25, 'FontWeight', 'bold');\
hold on\
drawnow;\
end\
end\
visit_positions_2 = zeros(1,20);\
visit_positions_2(1)=1;\
TEST = linspace(exp(-1/2), exp(-3/2),20);\
for m = 1 : length(sequences_Hamiltonian_3bp_1) + length(sequences_Hamiltonian_3bp_2)\
for n = 1 : 5000\
for I = 1 : length(TEST)\
if rand > TEST(I)\
% Change only x.\
% x_t(n+1) = x_t(n) + 1;\
visit_positions_2(I)=visit_positions_2(I)+1;\
else\
% Change only y.\
% x_t(n+1) = x_t(n)-1;\
visit_positions_2(I-1) = visit_positions_2(I-1)+1;\
end\
% distance = sqrt(x_t(n+1)^2 + y_t(n+1)^2);\
end\
plot(visit_positions_2, [1,20], 'LineWidth', 2);\
caption = sprintf('Random Walk #%d of %d', m,  length(sequences_Hamiltonian_3bp_1) + length(sequences_Hamiltonian_3bp_2));\
title(caption, 'FontSize', 25, 'FontWeight', 'bold');\
hold on\
drawnow;\
end\
end\
for m = 1 : length(sequences_Hamiltonian_3bp_1) + length(sequences_Hamiltonian_3bp_2)\
for n = 1 : 5000\
for I = 1 : length(TEST)\
if rand > TEST(I)\
% Change only x.\
% x_t(n+1) = x_t(n) + 1;\
visit_positions_2(I)=visit_positions_2(I)+1;\
else\
% Change only y.\
% x_t(n+1) = x_t(n)-1;\
visit_positions_2(I-1) = visit_positions_2(I-1)+1;\
end\
% distance = sqrt(x_t(n+1)^2 + y_t(n+1)^2);\
end\
end\
end\
length(sequences_Hamiltonian_3bp_1) + length(sequences_Hamiltonian_3bp_2)\
visit_positions_1 = zeros(1,20);\
visit_positions_2 = zeros(1,20);\
visit_positions_3 = zeros(1,20);\
visit_positions_4 = zeros(1,20);\
visit_positions_5 = zeros(1,20);\
visit_positions_6 = zeros(1,20);\
visit_positions_7 = zeros(1,20);\
visit_positions_8 = zeros(1,20);\
visit_positions_9 = zeros(1,20);\
visit_positions_10 = zeros(1,20);\
visit_positions_11 = zeros(1,20);\
visit_positions_12 = zeros(1,20);\
visit_positions_1(1)=1;\
visit_positions_2(1)=1;\
visit_positions_3(1)=1;\
visit_positions_4(1)=1;\
visit_positions_5(1)=1;\
visit_positions_6(1)=1;\
visit_positions_7(1)=1;\
visit_positions_8(1)=1;\
visit_positions_9(1)=1;\
visit_positions_10(1)=1;\
visit_positions_11(1)=1;\
visit_positions_12(1)=1;\
visit_array = \{visit_positions_1; visit_positions_2; visit_positions_3; visit_positions_4; visit_positions_5; visit_positions_6; visit_positions_7; visit_positions_8; visit_positions_9; visit_positions_10; visit_positions_11; visit_positions_12\};\
TEST = linspace(exp(-1/2), exp(-3/2),20);\
visit_array\
visit_array\{2\}\
size(visit_array)\
visit_array\{2\}\{3\}\
visit_array\{2\}(3)\
visit_array\{2\}(1)\
L = size(visit_array);\
L\
L(1)\
visit_array = \{visit_positions_1; visit_positions_2; visit_positions_3; visit_positions_4; visit_positions_5; visit_positions_6; visit_positions_7; visit_positions_8; visit_positions_9; visit_positions_10; visit_positions_11; visit_positions_12\};\
L = size(visit_array);\
TEST = linspace(exp(-1/2), exp(-3/2),20);\
for m = 1 : length(sequences_Hamiltonian_3bp_1) + length(sequences_Hamiltonian_3bp_2)\
for J = 1 : L(1)\
for I = 1 : length(TEST)\
for n = 1 : 5000\
if rand > TEST(I)\
% Change only x.\
% x_t(n+1) = x_t(n) + 1;\
visit_array\{J\}(I)=visit_array\{J\}(I)+1;\
else\
% Change only y.\
% x_t(n+1) = x_t(n)-1;\
visit_array\{J\}(I-1)=visit_array\{J\}(I-1)+1;\
end\
% distance = sqrt(x_t(n+1)^2 + y_t(n+1)^2);\
end\
end\
end\
end\
demo_2()\
for m = 1 : length(sequences_Hamiltonian_3bp_1) + length(sequences_Hamiltonian_3bp_2)\
for J = 1 : L(1)\
for I = 2 : length(TEST)\
for n = 1 : 5000\
if rand > TEST(I)\
% Change only x.\
% x_t(n+1) = x_t(n) + 1;\
visit_array\{J\}(I)=visit_array\{J\}(I)+1;\
else\
% Change only y.\
% x_t(n+1) = x_t(n)-1;\
visit_array\{J\}(I-1)=visit_array\{J\}(I-1)+1;\
end\
% distance = sqrt(x_t(n+1)^2 + y_t(n+1)^2);\
end\
end\
end\
end\
visit_array = \{visit_positions_1; visit_positions_2; visit_positions_3; visit_positions_4; visit_positions_5; visit_positions_6; visit_positions_7; visit_positions_8; visit_positions_9; visit_positions_10; visit_positions_11; visit_positions_12\};\
L = size(visit_array);\
TEST = linspace(exp(-1/2), exp(-3/2),20);\
for m = 1 : length(sequences_Hamiltonian_3bp_1) + length(sequences_Hamiltonian_3bp_2)\
for J = 1 : L(1)\
for I = 2 : length(TEST)\
for n = 1 : 5000\
if rand > TEST(I)\
% Change only x.\
% x_t(n+1) = x_t(n) + 1;\
visit_array\{J\}(I)=visit_array\{J\}(I)+1;\
else\
% Change only y.\
% x_t(n+1) = x_t(n)-1;\
visit_array\{J\}(I-1)=visit_array\{J\}(I-1)+1;\
end\
% distance = sqrt(x_t(n+1)^2 + y_t(n+1)^2);\
end\
end\
end\
end\
visit_array\
visit_array\{1\}\
visit_array\{2\}\
visit_array\{3\}\
length(visit_array\{3\})\
tempy = []\
tempy(1)=1\
tempy(2)=3\
VISIT_AVG = [ ];\
% compute average, the mean field type approximation\
for A = 1 : L(1)\
temp = [];\
for AI = 1 : L(1)\
temp(AI) = visit_array\{AI\};\
end\
VISIT_AVG(A) = avg(temp);\
end\
Y = linspace(1,20,20);\
for J = 1 : L(1)\
scatter(VISIT_AVG,Y)\
hold on;\
end\
Y = linspace(1,20,20);\
Y\
demo_2()\
visit_array\{3\}\
visit_array = \{visit_positions_1; visit_positions_2; visit_positions_3; visit_positions_4; visit_positions_5; visit_positions_6; visit_positions_7; visit_positions_8; visit_positions_9; visit_positions_10; visit_positions_11; visit_positions_12\};\
L = size(visit_array);\
% GENERALIZE the code by having arbitrary\
% sequences, as shown below, of transition\
% probabilities\
TEST = linspace(exp(-1/2), exp(-3/2),20);\
for m = 1 : length(sequences_Hamiltonian_3bp_1) + length(sequences_Hamiltonian_3bp_2)\
for J = 1 : L(1)\
for I = 2 : length(TEST)\
for n = 1 : 5000\
if rand > TEST(I)\
% Change only x.\
% x_t(n+1) = x_t(n) + 1;\
visit_array\{J\}(I)=visit_array\{J\}(I)+1;\
else\
% Change only y.\
% x_t(n+1) = x_t(n)-1;\
visit_array\{J\}(I-1)=visit_array\{J\}(I-1)+1;\
end\
% distance = sqrt(x_t(n+1)^2 + y_t(n+1)^2);\
end\
end\
end\
end\
VISIT_AVG = [ ];\
% compute average, the mean field type approximation\
for A = 1 : L(1)\
temp = [];\
for AI = 1 : L(1)\
temp(AI) = visit_array\{AI\};\
end\
VISIT_AVG(A,:) = avg(temp);\
end\
figure(3)\
Y = linspace(1,20,20);\
for J = 1 : L(1)\
scatter(VISIT_AVG,Y)\
hold on;\
end\
demo_2()\
for A = 1 : L(1)\
temp = [];\
for AI = 1 : L(1)\
temp(AI,:) = visit_array\{AI\};\
end\
end\
for A = 1 : L(1)\
temp = [];\
for AI = 1 : L(1)\
temp(AI,:) = visit_array\{AI\};\
end\
VISIT_AVG(A) = mean(temp);\
end\
visit_array\{1\}\
temp(1,:) = visit_array\{1\}\
temp(1,:) = transpose(visit_array\{1\})\
temp(:,1) = transpose(visit_array\{1\})\
tempr(:,1) = visit_array\{1\}\
VISIT_AVG = [ ];\
% compute average, the mean field type approximation\
for A = 1 : L(1)\
temp = [];\
for AI = 1 : L(1)\
temp(:,AI) = visit_array\{AI\};\
end\
VISIT_AVG(A) = mean(temp);\
end\
figure(3)\
Y = linspace(1,20,20);\
for J = 1 : L(1)\
scatter(VISIT_AVG,Y)\
hold on;\
end\
demo_2()\
sum(tempr)/20\
demo_2()\
VISIT_AVG = [ ];\
% compute average, the mean field type approximation\
for A = 1 : L(1)\
temp = [];\
for AI = 1 : L(1)\
temp(:,AI) = visit_array\{AI\};\
VISIT_AVG(A) = sum(temp(:,AI))/length(temp(:,AI));\
end\
end\
VISIT_AVG\
demo_2()\
[visit_array] = demo_2()\
visit_array\{1\}\
visit_array\{4\}\
[visit_array_1, visit_array_2] = demo_2()\
visit_array_2\{1\}\
visit_array_1\{1\}\
TEST_2 = linspace(exp(-1/2), exp(-10/2),20)\
rand\
visit_array_1\{2\}\
visit_array_2\{2\}\
exp(-1/2)\
exp(-3/2)\
[visit_array_1, visit_array_2] = demo_2()\
%-- 3/9/20, 7:31 AM --%\
data_replace = data\
data_replace_HIRF26 = data\
data_replace_HIRF27= data\
data_replace_HIRF27.t\
[data_new] = nasa_test(data_replace_HIRF27.t, data_replace_HIRF26.t)\
data_replace_HIRF27\{1\}\
data_replace_HIRF27*1)\
data_replace_HIRF27(1)\
[data_new] = nasa_test()\
nasa_test\
[data_new] = nasa_test(data_replace_HIRF27, data_replace_HIRF26)\
data_new\{3\}\
data_new = struct2cell(data_replace_HIRF27);\
x=data_new\{3\};\
y = data_new\{1\};\
plot(y,x)\
figure(1)\
figure(1); plot(y,x)\
find(x==21)\
find(x==20.5)\
21<x<18.5\
positions= find(21<x<18.5)\
C_max_1 = 100;\
C_max_2 = exp(-1*abs(1180-1200)-1*abs(270-300))*C_max_1\
C_max_2 = exp(-(1/1000)*abs(1180-1200)-(1/1000)*abs(270-300))*C_max_1\
C_max_3 = exp(-(1/1000)*abs(1180-1200)-(1/1000)*abs(270-300))*C_max_1\
C_max_3 = exp(-(1/1000)*abs(1180-1200)-(1/1000)*abs(270-300))*C_max_2\
X_test = [C_max_1 ; C_max_2; C_max_3];\
Y_test = [1 ; 2 ; 3];\
plot(X_test,Y_test)\
plot(Y_test,X_test)\
[visit_array_1, visit_array_2] = demo_2()\
length(visit_array_1)\
length(visit_array_2)\
visit_array_1\{1\}\
short()\
short(visit_array_1)\
short(visit_array_2)\
[visit_array_1, visit_array_2, visit_array_3] = demo_2()\
short(visit_array_3)\
%-- 3/13/20, 5:11 AM --%\
nasa_test\
[data_new] = nasa_test(data_replace_HIRF27, data_replace_HIRF26)\
data_replace_HIRF26 = data;\
data_replace_HIRF27 = data;\
[data_new] = nasa_test(data_replace_HIRF27, data_replace_HIRF26)\
C_max_array = [ ];\
C_max_i = 100;\
C_max_array(1) = C_max_i;\
for I = 1 : 5\
C_max_temp = C_max_i * exp(((1/1000) * 15)+((1/1000)*100));\
C_max_array(i+1) = C_max_temp;\
end\
C_max_array = [ ];\
C_max_i = 100;\
C_max_array(1) = C_max_i;\
for I = 1 : 5\
C_max_temp = C_max_i * exp(((1/1000) * 15)+((1/1000)*100));\
C_max_array(I+1) = C_max_temp;\
end\
C_max_array\
C_max_array = [ ];\
C_max_i = 100;\
C_max_array(1) = C_max_i;\
for I = 1 : 5\
X = C_max_array(I);\
C_max_temp = X * exp(((1/1000) * 15)+((1/1000)*100));\
C_max_array(I+1) = C_max_temp;\
end\
C_max_array\
C_max_array = [ ];\
C_max_i = 100;\
C_max_array(1) = C_max_i;\
for I = 1 : 5\
X = C_max_array(I);\
C_max_temp = X * exp(-((1/1000) * 15)+((1/1000)*100));\
C_max_array(I+1) = C_max_temp;\
end\
C_max_array\
C_max_array = [ ];\
C_max_i = 100;\
C_max_array(1) = C_max_i;\
for I = 1 : 5\
X = C_max_array(I);\
C_max_temp = X * exp((-(1/1000) * 15)-((1/1000)*100));\
C_max_array(I+1) = C_max_temp;\
end\
C_max_array\
plot(C_max_array, [1;2;3;4;5;6])\
[data_new] = nasa_test(data_replace_HIRF27, data_replace_HIRF26)\
%-- 3/20/20, 5:20 AM --%\
[data_new] = nasa_test(data_replace_HIRF27, data_replace_HIRF26)\
data_1 = data;\
data_2 = data;\
data_3 = data;\
data_4 = data;\
data_5 = data;\
data_6 = data;\
data_7 = data;\
[data_new] = nasa_test(data_1,data_2)\
[data_new, C_max_array] = nasa_test(data_1,data_2)\
[data_new, C_max_array] = nasa_test(data_1,data_2,data_3,data_4,data_5,data_6,data_7)\
65+25\
time_array_Set6_1 = [30; 50; 40; 55; 50; 40; 60];\
time_array_Set6_2 = [50; 50; 40; 90; 40; 60; 50];\
time_array_Set6_1\
[data_new, C_max_array] = nasa_test(data_1,data_2,data_3,data_4,data_5,data_6,data_7)\
%-- 3/21/20, 10:51 PM --%\
[visit_array_1, visit_array_2, visit_array_3, visit_array_3_2] = demo_2()\
%-- 3/23/20, 11:45 PM --%\
[visit_array_1, visit_array_2, visit_array_3, visit_array_3_2] = demo_2()\
TEST_3_2 = [exp(-10/2) ; exp(-8/2) ; exp(-7/2); exp(-6/2); exp(-5/2); exp(-4/2); exp(-3/2); exp(-2/2);  exp(-1); exp(-1)/2; exp(-1)/4; exp(-1)/6; 0.00000000009; exp(-1)/7; exp(-1)/8; exp(-1)/9; exp(-1)/10; exp(-1)/11; exp(-1)/12; exp(-1)/12; 0];\
length(TEST_3_2)\
[visit_array_1, visit_array_2, visit_array_3, visit_array_3_2] = demo_2()\
visit_array_3_2 = \{visit_positions_1; visit_positions_2; visit_positions_3; visit_positions_4; visit_positions_5; visit_positions_6; visit_positions_7; visit_positions_8; visit_positions_9; visit_positions_10; visit_positions_11; visit_positions_12; visit_positions_13\};\
visit_positions_1 = zeros(1,20);\
visit_positions_2 = zeros(1,20);\
visit_positions_3 = zeros(1,20);\
visit_positions_4 = zeros(1,20);\
visit_positions_5 = zeros(1,20);\
visit_positions_6 = zeros(1,20);\
visit_positions_7 = zeros(1,20);\
visit_positions_8 = zeros(1,20);\
visit_positions_9 = zeros(1,20);\
visit_positions_10 = zeros(1,20);\
visit_positions_11 = zeros(1,20);\
visit_positions_12 = zeros(1,20);\
visit_positions_13 = zeros(1,20);\
visit_positions_1(1)=1;\
visit_positions_2(1)=1;\
visit_positions_3(1)=1;\
visit_positions_4(1)=1;\
visit_positions_5(1)=1;\
visit_positions_6(1)=1;\
visit_positions_7(1)=1;\
visit_positions_8(1)=1;\
visit_positions_9(1)=1;\
visit_positions_10(1)=1;\
visit_positions_11(1)=1;\
visit_positions_12(1)=1;\
visit_array_1 = \{visit_positions_1; visit_positions_2; visit_positions_3; visit_positions_4; visit_positions_5; visit_positions_6; visit_positions_7; visit_positions_8; visit_positions_9; visit_positions_10; visit_positions_11; visit_positions_12\};\
visit_array_2 = \{visit_positions_1; visit_positions_2; visit_positions_3; visit_positions_4; visit_positions_5; visit_positions_6; visit_positions_7; visit_positions_8; visit_positions_9; visit_positions_10; visit_positions_11; visit_positions_12\};\
visit_array_3 = \{visit_positions_1; visit_positions_2; visit_positions_3; visit_positions_4; visit_positions_5; visit_positions_6; visit_positions_7; visit_positions_8; visit_positions_9; visit_positions_10; visit_positions_11; visit_positions_12\};\
visit_array_3\
[visit_array_1, visit_array_2, visit_array_3, visit_array_3_2] = demo_2()\
short(visit_array_3_2)\
[visit_array_1, visit_array_2, visit_array_3, visit_array_3_2] = demo_2()\
short(visit_array_1)\
length(visit_array_1)\
short(visit_array_1)\
length(visit_array_3_2)\
visit_array_3_2\{1\}\
[visit_array_1, visit_array_2, visit_array_3, visit_array_3_2] = demo_2()\
short(visit_array_3_2)\
[visit_array_1, visit_array_2, visit_array_3, visit_array_3_2] = demo_2()\
short(visit_arra_3_2)\
short(visit_array_3_2)\
visit_array_3_2\{1\}\
visit_array_3_2\{2\}\
visit_array_3_2\{3\}\
TEST_3_2 = [0;exp(-10/2) ; exp(-8/2) ; exp(-7/2); exp(-6/2); exp(-5/2); exp(-4/2); exp(-3/2); exp(-2/2);  exp(-1); exp(-1)/2; exp(-1)/4; exp(-1)/6; 0];\
length(TEST_3_2)\
[visit_array_1, visit_array_2, visit_array_3, visit_array_3_2] = demo_2()\
short(visit_array_3_2)\
visit_array_3_2\{1\}\
exp(-6/2)\
exp(-2)\
exp(-1)\
exp(-5)\
exp(-1)/6\
exp(-1)/4\
exp(-1)/4 - exp(-1)/6\
exp(-1)/12\
exp(-1)/13\
TEST_3_2 = [0; exp(-1)/4 ; exp(-1)/5 ; exp(-1)/6 ; exp(-1)/7; exp(-1)/8; exp(-1)/9 ; exp(-1)/10; exp(-1)/11 ; exp(-1)/12 ; exp(-1)/13 ; exp(-1)/14 ]\
length(TEST_3_2)\
TEST_3_2 = [0; exp(-1)/4 ; exp(-1)/5 ; exp(-1)/6 ; exp(-1)/7; exp(-1)/8; exp(-1)/9 ; exp(-1)/10; exp(-1)/11 ; exp(-1)/12 ; exp(-1)/13 ; exp(-1)/14 ; exp(-1)/15; exp(-1)/16; exp(-1)/17]\
length(TEST_3_2)\
TEST_3_2 = [0; exp(-1)/4 ; exp(-1)/5 ; exp(-1)/6 ; exp(-1)/7; exp(-1)/8; exp(-1)/9 ; exp(-1)/10; exp(-1)/11 ; exp(-1)/12 ; exp(-1)/13 ; exp(-1)/14 ; exp(-1)/15; exp(-1)/16; exp(-1)/17 ; exp(-1)/18; exp(-1)/19; exp(-1)/20 ; exp(-1)/21; exp(-1)/22; exp(-1)/23];\
length(TEST_3_2)\
[visit_array_1, visit_array_2, visit_array_3, visit_array_3_2] = demo_2()\
visit_array_3_2\{1\}\
[visit_array_1, visit_array_2, visit_array_3, visit_array_3_2] = demo_2()\
visit_array_3_2\{1\}\
TEST_3_2 = [0; exp(-1)/4 ; exp(-1)/5 ; exp(-1)/6 ; exp(-1)/7; exp(-1)/8; exp(-1)/9 ; exp(-1)/10; exp(-1)/11 ; exp(-1)/12 ; exp(-1)/13 ; exp(-1)/14 ; exp(-1)/15; exp(-1)/16; exp(-1)/17 ; exp(-1)/18; exp(-1)/19; exp(-1)/20 ; exp(-1)/21; exp(-1)/22; exp(-1)/23;0];\
length(TEST_3_2)\
[visit_array_1, visit_array_2, visit_array_3, visit_array_3_2] = demo_2()\
rand\
TEST_3_2 = [0; exp(-1)/4 ; exp(-1)/5 ; exp(-1)/6 ; exp(-1)/7; exp(-1)/8; exp(-1)/9 ; exp(-1)/10; exp(-1)/11 ; exp(-1)/12 ; exp(-1)/13 ; exp(-1)/14 ; exp(-1)/15; exp(-1)/100; exp(-1)/105 ; exp(-1)/110; exp(-1)/120; exp(-1)/125 ; exp(-1)/130; exp(-1)/135; exp(-1)/140 ; 0];\
length(TEST_3_2)\
inc = linspace(1,22,22)\
plot(TEST_3_2,inc)\
plot(inc,TEST_3_2)\
TEST_3_2 = [0; exp(-1)/4 ; exp(-1)/5 ; exp(-1)/6 ; exp(-1)/7; exp(-1)/8; exp(-1)/9 ; exp(-1)/10; exp(-1)/11 ; exp(-1)/12 ; exp(-1)/13 ; exp(-1)/14 ; exp(-1)/15; exp(-1)/100; exp(-1)/105 ; exp(-1)/110; exp(-1)/120; exp(-1)/125 ; exp(-1)/130; exp(-1)/135; exp(-1)/140 ; 0.000001];\
length(TEST_3_2)\
plot(inc,TEST_3_2)\
inc = linspace(0,22,22)\
inc = linspace(0,22,23)\
TEST_3_2 = [0; exp(-1)/4 ; exp(-1)/5 ; exp(-1)/6 ; exp(-1)/7; exp(-1)/8; exp(-1)/9 ; exp(-1)/10; exp(-1)/11 ; exp(-1)/12 ; exp(-1)/13 ; exp(-1)/14 ; exp(-1)/15; exp(-1)/100; exp(-1)/105 ; exp(-1)/110; exp(-1)/120; exp(-1)/125 ; exp(-1)/130; exp(-1)/135; exp(-1)/140 ; 0.000001];\
length(TEST_3_2)\
plot(inc,TEST_3_2)\
length(inc)\
inc = linspace(0,22,22)\
inc = linspace(1,22,22)\
plot(inc,TEST_3_2)\
TEST_3_2 = [exp(-1)/3; exp(-1)/4 ; exp(-1)/5 ; exp(-1)/6 ; exp(-1)/7; exp(-1)/8; exp(-1)/9 ; exp(-1)/10; exp(-1)/11 ; exp(-1)/12 ; exp(-1)/13 ; exp(-1)/14 ; exp(-1)/15; exp(-1)/100; exp(-1)/105 ; exp(-1)/110; exp(-1)/120; exp(-1)/125 ; exp(-1)/130; exp(-1)/135; exp(-1)/140 ; 0.000001];\
inc = linspace(1,22,22)\
plot(inc,TEST_3_2)\
TEST_3_2 = [exp(-1)/3; exp(-1)/4 ; exp(-1)/5 ; exp(-1)/6 ; exp(-1)/7; exp(-1)/8; exp(-1)/9 ; exp(-1)/10; exp(-1)/11 ; exp(-1)/12 ; exp(-1)/13 ; exp(-1)/14 ; exp(-1)/15; exp(-1)/100; exp(-1)/105 ; exp(-1)/110; exp(-1)/120; exp(-1)/125 ; exp(-1)/130; exp(-1)/135; exp(-1)/140 ; 0.000001];\
TEST_3_2\
format long\
TEST_3_2\
rand\
[visit_array_1, visit_array_2, visit_array_3, visit_array_3_2, sequences_Hamiltonian_3bp_1 , sequences_Hamiltonian_3bp_2] = demo_2()\
exp(-1)/10\
exp(-1)/5\
exp(-1)/2\
exp(-1)\
[visit_array_1, visit_array_2, visit_array_3, func_triple_II_2] = demo_2()\
func_triple_II_2(1)\
func_triple_II_2(2)\
func_triple_II_2(3)\
func_triple_II_2(4)\
func_triple_II_2(5)\
func_triple_II_2(6)\
linspace(1,20,20)\
[visit_array_1, visit_array_2, visit_array_3, func_triple_II_2] = demo_2()\
func_triple_II_2(20)\
[visit_array_1, visit_array_2, visit_array_3, func_triple_II_2] = demo_2()\
func_triple_II_2(1)\
func_triple_II_2(13)\
func_triple_II_2(14)\
func_triple_II_2(17)\
[visit_array_1, visit_array_2, visit_array_3, func_triple_II_2] = demo_2()\
func_triple_II_2(1)\
[visit_array_1, visit_array_2, visit_array_3, func_triple_II_2] = demo_2()\
func_triple_II_2(3)\
func_triple_II_2(15)\
func_triple_II_2(13)\
func_triple_II_2(12)\
func_triple_II_2(11)\
func_triple_II_2(10)\
func_triple_II_2(9)\
linspace(2,20,18)\
linspace(2,20,19)\
linspace(6,20,13)\
linspace(6,20,14)\
linspace(6,20,12)\
linspace(6,20,15)\
[visit_array_1, visit_array_2, visit_array_3, func_triple_A_1] = demo_2()\
func_triple_A_1(1)\
func_triple_A_1(3)\
[visit_array_1, visit_array_2, visit_array_3, func_triple_A_1] = demo_2()\
func_triple_A_1(1)\
func_triple_A_1(3)\
func_triple_A_1(4)\
func_triple_A_1(5)\
20-6+1\
[visit_array_1, visit_array_2, visit_array_3, func_triple_A_1] = demo_2()\
linspace(17,20,4)\
[visit_array_1, visit_array_2, visit_array_3, func_triple_A_1] = demo_2()\
func_triple_A_1_3 = @(X)(Hamiltonian_triple_A_1)./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (13-X))));\
func_triple_A_1_3(1)\
Hamiltonian_triple_A_1 = exp(-((normalization_double_1_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_double_2_1 .*((((13-4)-1)* 0.6923)+ (((13-10)-1)* 0.231)+(((13-11)-1)* 0.15)))));\
normalization_double_1_1 = 1/(9+2)^3;\
normalization_double_2_1 = 1/(2+3)^3;\
Hamiltonian_triple_A_1 = exp(-((normalization_double_1_1 * (((13-1)+(13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_double_2_1 .*((((13-4)-1)* 0.6923)+ (((13-10)-1)* 0.231)+(((13-11)-1)* 0.15)))));\
func_triple_A_1_3(1)\
func_triple_A_1 = @(X)(Hamiltonian_triple_A_1)./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_triple_A_1(2)\
J=3;\
lambda_mismatch = exp(-5/2);\
lambda_c = 0.025;\
lambda_p = 0.015;\
couplings_ij1 = exp(N-J);\
couplings_ij2 = N-J;\
N=16;\
J=3;\
lambda_mismatch = exp(-5/2);\
lambda_c = 0.025;\
lambda_p = 0.015;\
couplings_ij1 = exp(N-J);\
couplings_ij2 = N-J;\
func_triple_A_1 = @(X)(Hamiltonian_triple_A_1)./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_triple_A_1_2 = @(X)(Hamiltonian_triple_A_1)./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (17-X))));\
func_triple_A_1_3 = @(X)(Hamiltonian_triple_A_1)./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (13-X))));\
func_triple_A_1(2)\
func_triple_A_1_2(2)\
I = 30;\
JI = 45;\
IJ=20;\
beta = 0.005;\
N = 16;\
N_1 = 13;\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% define possible cases of 3 mismatches\
number_1 = 1;\
number_2 = 2;\
number_3 = 3;\
J=3;\
lambda_mismatch = exp(-5/2);\
lambda_c = 0.025;\
lambda_p = 0.015;\
couplings_ij1 = exp(N-J);\
couplings_ij2 = N-J;\
func_triple_A_1 = @(X)(Hamiltonian_triple_A_1)./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_triple_A_1_2 = @(X)(Hamiltonian_triple_A_1)./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (17-X))));\
func_triple_A_1_3 = @(X)(Hamiltonian_triple_A_1)./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (13-X))));\
func_triple_A_1(2)\
Table = readtable('First6-Data.csv');\
Table_3 = readtable('PAMData.csv');\
Table_4 = readtable('Last14Data.csv');\
% define positions for terms in partition function\
I = 30;\
JI = 45;\
IJ=20;\
beta = 0.005;\
N = 16;\
N_1 = 13;\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% define possible cases of 3 mismatches\
number_1 = 1;\
number_2 = 2;\
number_3 = 3;\
J=3;\
lambda_mismatch = exp(-5/2);\
lambda_c = 0.025;\
lambda_p = 0.015;\
couplings_ij1 = exp(N-J);\
couplings_ij2 = N-J;\
func_triple_A_1 = @(X)(Hamiltonian_triple_A_1)./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_triple_A_1(2)\
func_triple_A_1_2 = @(X)(Hamiltonian_triple_A_1)./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (17-X))));\
func_triple_A_2(2)\
func_triple_A_1(2)\
data_75 = data;\
data_76 = data;\
data_77 = data;\
data_78 = data;\
data_79 = data;\
data_80 = data;\
data_81 = data;\
[data_new , C_max_array] = nasa_test(data_75, data_76, data_77, data_78, data_79, data_80 , data_81)\
data_new\{3\}\
x=data_new\{1\};\
x(1)\
x\
x=data_new\{3\};\
x(1)\
max(x)\
min(x)\
length(data_new\{3\})\
x(length(data_new\{3\}))\
vec = [1 ; 1 ; 1]\
[data_new , C_max_array] = nasa_test(data_75, data_76, data_77, data_78, data_79, data_80 , data_81)\
x_1 = data_new\{3\};\
final_x_1 = length(data_new\{3\});\
vec_x_1 = [min(x_1); min(x_1); x_1(final_x_1)];\
vec_x_1\
vec_x_1 = [min(x_1); max(x_1); x_1(final_x_1)];\
vec_x_1\
k = find(min(x_1) <= data_new\{3\} <= max(x_1))\
[data_new , C_max_array] = nasa_test(data_75, data_76, data_77, data_78, data_79, data_80 , data_81)\
k = find(min(x_1) <= data_new\{3\} <= max(x_1))\
[data_new , C_max_array] = nasa_test(data_75, data_76, data_77, data_78, data_79, data_80 , data_81)\
x_1 = data_new\{3\};\
vec_x_1 = [min(x_1); max(x_1); x_1(final_x_1)];\
k_x_1 = find(vec_x_1(1) < data_new\{3\} < vec_x_1(2));\
subvec_x_1 = x_1(k_x_1(1):k_x_1(length(k_x_1)));\
subvec_x_1\
max(subvec_x_1)\
min(subvec_x_1)\
[data_new , C_max_array] = nasa_test(data_75, data_76, data_77, data_78, data_79, data_80 , data_81)\
x_1 = data_new\{3\};\
final_x_1 = length(data_new\{3\});\
x_2 = data_new_2\{3\};\
final_x_2 = length(data_new_2\{3\});\
x_3 = data_new_3\{3\};\
final_x_3 = length(data_new_3\{3\});\
x_4 = data_new_4\{3\};\
final_x_4 = length(data_new_4\{3\});\
x_5 = data_new_5\{3\};\
final_x_5 = length(data_new_5\{3\});\
x_6 = data_new_6\{3\};\
final_x_6 = length(data_new_6\{3\});\
% set up min and max values\
% for each of the x_i vectors above\
vec_x_1 = [min(x_1); max(x_1); x_1(final_x_1)];\
vec_x_2 = [min(x_2); max(x_2); x_2(final_x_2)];\
vec_x_3 = [min(x_3); max(x_3); x_3(final_x_3)];\
vec_x_4 = [min(x_4); max(x_4); x_4(final_x_4)];\
vec_x_5 = [min(x_5); max(x_5); x_5(final_x_5)];\
vec_x_6 = [min(x_6); max(x_6); x_6(final_x_6)];\
% find corresponding times for each\
% of the vectors with the specified\
% positions above, by first finding\
% the indices between the specified\
% ranges of values above ^\
k_x_1 = find(vec_x_1(1) < data_new\{3\} < vec_x_1(2));\
k_x_2 = find(vec_x_2(1) < data_new_2\{3\} < vec_x_2(2));\
k_x_3 = find(vec_x_3(1) < data_new_3\{3\} < vec_x_3(2));\
k_x_4 = find(vec_x_4(1) < data_new_4\{3\} < vec_x_4(2));\
k_x_5 = find(vec_x_5(1) < data_new_5\{3\} < vec_x_5(2));\
k_x_6 = find(vec_x_6(1) < data_new_6\{3\} < vec_x_6(2));\
% use the range of values to form\
% subvectors from the original\
% data set, from which we will determine\
% the maximum and minima\
subvec_x_1 = x_1(k_x_1(1):k_x_1(length(k_x_1)));\
data_new = struct2cell(in1);\
data_new_2 = struct2cell(in2);\
data_new_3 = struct2cell(in3);\
data_new_4 = struct2cell(in4);\
data_new_5 = struct2cell(in5);\
data_new_6 = struct2cell(in6);\
data_new_7 = struct2cell(in7);\
% data_new_2 = struct2cell(in2);\
% data_new = struct2cell(in1);\
% data_new_2 = struct2cell(in2);\
names = fieldnames(in1);\
% plot quantities versus time\
times = data_new\{1\};\
times_2 = data_new_2\{1\};\
times_3 = data_new_3\{1\};\
times_4 = data_new_4\{1\};\
times_5 = data_new_5\{1\};\
times_6 = data_new_6\{1\};\
times_7 = data_new_7\{1\};\
x_1 = data_new\{3\};\
vec_x_1 = [min(x_1); max(x_1); x_1(final_x_1)];\
k_x_1 = find(vec_x_1(1) < data_new\{3\} < vec_x_1(2));\
subvec_x_1 = x_1(k_x_1(1):k_x_1(length(k_x_1)));\
subvec_x_1\
k = find(data_new\{3\}(k_x_1(1):k_x_1(length(k_x_1)))\
k = find(data_new\{3\}(k_x_1(1):k_x_1(length(k_x_1))))\
max(data_new\{1\})\
x_1_ordered = order(x_1(k_x_1(1):k_x_1(length(k_x_1))), 'descend');\
x_1_ordered = sort(x_1(k_x_1(1):k_x_1(length(k_x_1))), 'descend');\
x_1_ordered\
find(data_new\{3\} == x_1_ordered)\
max(find(data_new\{3\} == x_1_ordered))\
min(find(data_new\{3\} == x_1_ordered))\
min(find(data_new\{3\} == max(x_1_ordered)))\
min(find(data_new\{3\} == min(x_1_ordered)))\
min(x_1_ordered)\
max(x_1_ordered)\
k_1 = find(data_new\{3\} == max(x_1_ordered))\
k_2 = find(data_new\{3\} == min(x_1_ordered))\
data_new\{88493\}\
data_new\{1\}(88493)\
data_new\{1\}(17090)\
data_new\{1\}(24646)\
data_new\{1\}(88493)-data_new\{1\}(24646)\
[visit_array_1, visit_array_2, visit_array_3, func_triple_A_1] = demo_2()\
for JJ = 12: 17\
Hamiltonian_triple_A_1 = exp(-((normalization_double_1_1 * (((JJ-1)+(JJ-2)+(JJ-3)+(JJ-5)+(JJ-6)+(JJ-7)+(JJ-8)+(JJ-9)+(JJ-12))))+(normalization_double_2_1 .*((((JJ-4)-1)* 0.6923)+ (((JJ-10)-1)* 0.231)+(((JJ-11)-1)* 0.15)))));\
print(Hamiltonian_triple_A_1)\
end\
JJ=12;\
Hamiltonian_triple_A_1 = exp(-((normalization_double_1_1 * (((JJ-1)+(JJ-2)+(JJ-3)+(JJ-5)+(JJ-6)+(JJ-7)+(JJ-8)+(JJ-9)+(JJ-12))))+(normalization_double_2_1 .*((((JJ-4)-1)* 0.6923)+ (((JJ-10)-1)* 0.231)+(((JJ-11)-1)* 0.15)))));\
Hamiltonian_triple_A_1\
JJ=13;\
Hamiltonian_triple_A_1 = exp(-((normalization_double_1_1 * (((JJ-1)+(JJ-2)+(JJ-3)+(JJ-5)+(JJ-6)+(JJ-7)+(JJ-8)+(JJ-9)+(JJ-12))))+(normalization_double_2_1 .*((((JJ-4)-1)* 0.6923)+ (((JJ-10)-1)* 0.231)+(((JJ-11)-1)* 0.15)))));\
Hamiltonian_triple_A_1\
JJ=14;\
Hamiltonian_triple_A_1 = exp(-((normalization_double_1_1 * (((JJ-1)+(JJ-2)+(JJ-3)+(JJ-5)+(JJ-6)+(JJ-7)+(JJ-8)+(JJ-9)+(JJ-12))))+(normalization_double_2_1 .*((((JJ-4)-1)* 0.6923)+ (((JJ-10)-1)* 0.231)+(((JJ-11)-1)* 0.15)))));\
Hamiltonian_triple_A_1\
JJ=15;\
Hamiltonian_triple_A_1 = exp(-((normalization_double_1_1 * (((JJ-1)+(JJ-2)+(JJ-3)+(JJ-5)+(JJ-6)+(JJ-7)+(JJ-8)+(JJ-9)+(JJ-12))))+(normalization_double_2_1 .*((((JJ-4)-1)* 0.6923)+ (((JJ-10)-1)* 0.231)+(((JJ-11)-1)* 0.15)))));\
Hamiltonian_triple_A_1\
[visit_array_1, visit_array_2, visit_array_3, func_triple_A_1] = demo_2()\
demo_2\
%-- 3/27/20, 4:27 PM --%\
func_triple_A_11 = @(X) exp(-((normalization_double_1_1 * (((12-1)+(12-2)+(12-3)+(12-5)+(12-6)+(12-7)+(12-8)+(12-9))))+(normalization_double_2_1 .*((((12-4)-1)* (abs(12-4))./12)+ (((12-10)-1)* (abs(12-10))./12)+(((JJ-11)-1)* (abs(12-11))./12))))./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (12-X)))));\
func_triple_A_11 = @(N,X) exp(-((normalization_double_1_1 * (((12-1)+(12-2)+(12-3)+(12-5)+(12-6)+(12-7)+(12-8)+(12-9))))+(normalization_double_2_1 .*((((12-4)-1)* (abs(12-4))./12)+ (((12-10)-1)* (abs(12-10))./12)+(((JJ-11)-1)* (abs(12-11))./12))))./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X)))));\
func_triple_A_11(1,12)\
normalization_double_1_1=1;\
normalization_double_2_1=1;\
func_triple_A_11 = @(N,X) exp(-((normalization_double_1_1 * (((12-1)+(12-2)+(12-3)+(12-5)+(12-6)+(12-7)+(12-8)+(12-9))))+(normalization_double_2_1 .*((((12-4)-1)* (abs(12-4))./12)+ (((12-10)-1)* (abs(12-10))./12)+(((JJ-11)-1)* (abs(12-11))./12))))./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X)))));\
func_triple_A_11(1,1)\
Table = readtable('First6-Data.csv');\
Table_3 = readtable('PAMData.csv');\
Table_4 = readtable('Last14Data.csv');\
% define positions for terms in partition function\
I = 30;\
JI = 45;\
IJ=20;\
beta = 0.005;\
N = 16;\
N_1 = 13;\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% define possible cases of 3 mismatches\
number_1 = 1;\
number_2 = 2;\
number_3 = 3;\
J=3;\
lambda_mismatch = exp(-5/2);\
lambda_c = 0.025;\
lambda_p = 0.015;\
couplings_ij1 = exp(N-J);\
couplings_ij2 = N-J;\
func_triple_A_11 = @(N,X) exp(-((normalization_double_1_1 * (((12-1)+(12-2)+(12-3)+(12-5)+(12-6)+(12-7)+(12-8)+(12-9))))+(normalization_double_2_1 .*((((12-4)-1)* (abs(12-4))./12)+ (((12-10)-1)* (abs(12-10))./12)+(((JJ-11)-1)* (abs(12-11))./12))))./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X)))));\
func_triple_A_11(1,1)\
JJ=20;\
func_triple_A_11 = @(N,X) exp(-((normalization_double_1_1 * (((12-1)+(12-2)+(12-3)+(12-5)+(12-6)+(12-7)+(12-8)+(12-9))))+(normalization_double_2_1 .*((((12-4)-1)* (abs(12-4))./12)+ (((12-10)-1)* (abs(12-10))./12)+(((JJ-11)-1)* (abs(12-11))./12))))./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X)))));\
func_triple_A_11(1,1)\
syms i, j\
syms i\
syms j\
func_triple_A_11 = @(N,X, mat,mis) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) *. symprod(2./(mis + 2)^3 .*  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X)))));\
func_triple_A_11 = @(N,X, mat,mis) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 .*  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X)))));\
func_triple_A_11 = @(N,X, mat,mis) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 .*  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X))));\
func_triple_A_11(12,1,9,2)\
func_triple_A_11 = @(N,X_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 .*  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2))))));\
func_triple_A_11 = @(N,X_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 .*  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2))));\
func_triple_A_11 = @(N,N_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-N_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2)))));\
func_triple_A_11 = @(N,X_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+(exp(X)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2)))));\
func_triple_A_11(12,1, 3, 9 , 2)\
func_triple_A_11 = @(N,X_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+((exp(X_1) * exp(X_2))*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2)))));\
func_triple_A_11(12,1, 3, 9 , 2)\
func_triple_A_11(12,5,6, 9 , 2)\
func_triple_A_11 = @(N,X_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+((lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2)))));\
func_triple_A_11(12,5,6, 9 , 2)\
func_triple_A_11(12,1, 3, 9 , 2)\
func_triple_A_11 = @(N,X_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+((exp(-X_1))*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2)))));\
func_triple_A_11(12,1, 3, 9 , 2)\
func_triple_A_11 = @(N,X_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+((exp(X_1))*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2)))));\
func_triple_A_11(12,1, 3, 9 , 2)\
func_triple_A_11(12,5,6, 9 , 2)\
func_triple_A_11 = @(N,X_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+((exp(X_1)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2)))));\
func_triple_A_11 = @(N,N_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+((exp(N_1)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-N_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2))))));\
func_triple_A_11(12,5,6, 9 , 2)\
func_triple_A_11(12,1, 3, 9 , 2)\
func_triple_A_11 = @(N,N_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+((exp((N_1+X_2)./2)*(lambda_c .* exp(-beta * Table\{I,8\}) + lambda_c * exp(-beta * Table_4\{JI,8\}))) + (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-N_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2))))));\
func_triple_A_11(12,1, 3, 9 , 2)\
func_triple_A_11(12,5,6, 9 , 2)\
func_triple_A_11 = @(N,N_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+((exp((N_1+X_2)./2)*lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-N_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2))))));\
func_triple_A_11(12,5,6, 9 , 2)\
func_triple_A_11(12,1, 3, 9 , 2)\
func_triple_A_11 = @(N,N_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+((exp(-(N_1+X_2)./2)*lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-N_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2))))));\
func_triple_A_11(12,1, 3, 9 , 2)\
func_triple_A_11 = @(N,N_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+((exp((N_1+X_2)./2) .* exp(-beta * Table_4\{JI,8\}) ) +lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-N_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2))))));\
func_triple_A_11 = @(N,N_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+((exp((N_1+X_2)./2) .* exp(-beta * Table_4\{JI,8\}) ) +lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-N_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2)))));\
func_triple_A_11(12,1, 3, 9 , 2)\
func_triple_A_11 = @(N,N_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+((exp(-(N_1+X_2)./2) .* exp(-beta * Table_4\{JI,8\}) ) +lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-N_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2)))));\
func_triple_A_11(12,1, 3, 9 , 2)\
plot(func_triple_A_11, linspace(1,20,20))\
func_triple_A_11(12,5,8, 9 , 2)\
func_triple_A_11 = @(N,N_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+exp(-beta * Table_4\{JI,8\})  +lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-N_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2)))));\
func_triple_A_11 = @(N,N_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+exp(-beta * Table_4\{JI,8\})  +lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-N_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2))));\
func_triple_A_11(12,5,8, 9 , 2)\
func_triple_A_11(12,1,3, 9 , 2)\
func_triple_A_11 = @(N,N_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+(exp(N_1) .* exp(-beta * Table_4\{JI,8\}))  +lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-N_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2))));\
func_triple_A_11(12,1,3, 9 , 2)\
func_triple_A_11(12,1,7, 9 , 2)\
[visit_array_1, visit_array_2, visit_array_3, Hamiltonian_array] = demo_2()\
exp(-((normalization_double_1_1 * (((13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_double_2_1 .*(13-1)-1)));\
normalization_double_1_1 = 1/(9+2)^3;\
normalization_double_2_1 = 1/(1+3)^3;\
exp(-((normalization_double_1_1 * (((13-2)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_double_2_1 .*(13-1)-1)))\
exp(-((normalization_double_1_1 * (((13-1)+(13-3)+(13-5)+(13-6)+(13-7)+(13-8)+(13-9)+(13-12))))+(normalization_double_2_1 .*(13-2)-1)))\
linspace(1,12,1)\
linspace(1,12,12)\
[visit_array_1, visit_array_2, visit_array_3 , p_func_array, Hamiltonian_array , energy_array] = demo_2()\
%-- 3/30/20, 5:33 PM --%\
func_triple_A_11 = @(N,N_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+(exp(N_1) .* exp(-beta * Table_4\{JI,8\}))  +lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-N_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2))));\
func_triple_A_11(12,1,2,9,2)\
exp(-5/2)\
exp(-5)\
func_triple_A_11 = @(N,N_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  +lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-N_1)) .* (lambda_mismatch .* exp(- beta * lambda_mismatch .* (N-X_2))));\
Table = readtable('First6-Data.csv');\
Table_3 = readtable('PAMData.csv');\
Table_4 = readtable('Last14Data.csv');\
% define positions for terms in partition function\
I = 30;\
JI = 45;\
IJ=20;\
beta = 0.005;\
N = 16;\
N_1 = 13;\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% define possible cases of 3 mismatches\
number_1 = 1;\
number_2 = 2;\
number_3 = 3;\
J=3;\
lambda_c = 0.025;\
lambda_p = 0.015;\
lambda_mismatch_1 = exp(-10/2);\
lambda_mismatch_2 = exp(-20/2)\
lambda_mismatch_1\
func_triple_A_11 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 .*  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + lambda_mismatch_1 .* exp(- beta * lambda_mismatch_1 .* (N-X_2)));\
func_triple_A_11 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 .*  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + lambda_mismatch_2 .* exp(- beta * lambda_mismatch_2 .* (N-X_2)));\
func_triple_A_11_2 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 .*  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + lambda_mismatch_2 .* exp(- beta * lambda_mismatch_2 .* (N-X_2)));\
func_triple_A_11 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 .*  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + lambda_mismatch_1 .* exp(- beta * lambda_mismatch_1 .* (N-X_2)));\
func_triple_A_11(11,1,2,9,2)\
prod(1,2,3)\
func_triple_A_11(11.0,1.0,2.0,9.0,2.0)\
prod(1.0,2.0,3.0)\
U_1 = [ 1 ; 2 ; 30\
]\
prod(1,3,U_1)\
prod(1,U_1,3)\
A=[1:3:7;2:3:8;3:3:9]\
B = prod(A)\
func_array = [ func_triple_A_11; func_triple_A_11_2]\
func_array = \{ \};\
func_array = \{ func_triple_A_11; func_triple_A_11_2\};\
func_triple_A_11 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 .*  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + lambda_mismatch_1 .* exp(- beta * lambda_mismatch_1 .* (N-X_2)));\
func_triple_A_11 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2)));\
func_triple_A_11(12,1,2,9,3)\
syms i\
syms j\
func_triple_A_11 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2)));\
func_triple_A_11(12,1,2,9,3)\
func_triple_A_11_2(12,1,2,9,3)\
func_triple_A_11_2 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 .*  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + lambda_mismatch_2 .* exp(- beta * lambda_mismatch_2 .* (N-X_2)));\
func_triple_A_11_2(12,1,2,9,3)\
abs(lambda_mismatch_1-lambda_mismatch_2)\
lambda_mismatch_3 = exp(-100/2)\
func_triple_A_11_2 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 .*  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + lambda_mismatch_2 .* exp(- beta * lambda_mismatch_2 .* (N-X_2)));\
func_triple_A_11_3 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 .*  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + lambda_mismatch_3 .* exp(- beta * lambda_mismatch_3 .* (N-X_2)));\
func_triple_A_11_3(12,1,2,9,3)\
func_triple_A_11_3 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 .*  (1-abs(N-j)), j , 1, mis+1)))./(1+(lambda_mismatch_3 * (exp(-beta * Table_4\{JI,8\})))  + lambda_mismatch_3 .* exp(- beta * lambda_mismatch_3 .* (N-X_2)));\
func_triple_A_11_3(12,1,2,9,3)\
func_triple_A_11_3 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 .*  (1-abs(N-j)), j , 1, mis+1)))./((1+ (exp(-beta * Table_4\{JI,8\})) * lambda_mismatch_3 .* exp(- beta * lambda_mismatch_3 .* (N-X_2)));\
func_triple_A_11_3 = @(N,N_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./((1+ (exp(-beta * Table_4\{JI,8\})) * lambda_mismatch_3 .* exp(- beta * lambda_mismatch_3 .* (N-X_2))));\
func_triple_A_11_3(12,1,2,9,3)\
func_triple_A_11_3 = @(N,N_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./((1+ (exp(-beta * Table_4\{JI,8\}))) * lambda_mismatch_3 .* exp(- beta * lambda_mismatch_3 .* (N-X_2))));\
func_triple_A_11_3 = @(N,N_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./((1+ (exp(-beta * Table_4\{JI,8\}))) * lambda_mismatch_3 .* exp(- beta * lambda_mismatch_3 .* (N-X_2)));\
func_triple_A_11_3(12,1,2,9,3)\
func_triple_A_11_3 = @(N,N_1, X_2, mat,min) exp(-(symprod(1./(mat + 2)^3 .*  abs(N-i), i , 1 , mat+1) * symprod(2./(min + 2)^3 .*  (1-abs(N-j)), j , 1, min+1)))./((1+ (exp(-beta * Table_4\{JI,8\}))  + lambda_mismatch_3 .* exp(- beta * lambda_mismatch_3 .* (X_2))));\
func_triple_A_11_3(12,1,2,9,3)\
lambda_p = 0.015;\
1+ (lambda_p * exp(-beta * Table_4\{JI,8\}))\
1+ (lambda_p * exp(-beta * Table_4\{JI,8\}))-1\
lambda_mismatch_3 .* exp(- beta * lambda_mismatch_3 .* (X_2))\
X_2 = 5;\
lambda_mismatch_3 .* exp(- beta * lambda_mismatch_3 .* (X_2))\
lambda_mismatch_1 .* exp(- beta * lambda_mismatch_1 .* (X_2))\
lambda_mismatch_1\
exp(- beta * lambda_mismatch_1 .* (X_2))\
exp(- beta * lambda_mismatch_1 .* (X_2)) * lambda_mismatch_1\
format long\
exp(- beta * lambda_mismatch_1 .* (X_2)) * lambda_mismatch_1\
exp(- beta * lambda_mismatch_1 .* (X_2))\
1+ (lambda_p * exp(-beta * Table_4\{JI,8\}))\
1+ (lambda_p * exp(-beta * Table_4\{JI,8\}))-1\
2 * exp(- beta * lambda_mismatch_1 .* (X_2)) * lambda_mismatch_1\
func_triple_A_11 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2)));\
func_triple_A_11 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + 2 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2)));\
func_triple_A_11(12,1,2,9,3)\
2 * exp(- beta * lambda_mismatch_1 .* (X_2)) * lambda_mismatch_1\
4* exp(- beta * lambda_mismatch_1 .* (X_2)) * lambda_mismatch_1\
func_triple_A_11_test = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + 2 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2)));\
func_triple_A_11_test = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + 4 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2)));\
func_triple_A_11_test(12,1,2,9,3)\
func_triple_A_11_test_2 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + 4 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2)));\
func_triple_A_11_test_2 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + (4 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2))));\
func_triple_A_11_test_2(12,1,2,9,3)\
func_triple_A_11_test_2 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + (4 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2))));\
func_triple_A_11_test_3 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + (10 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2))));\
func_triple_A_11_test_3(12,1,2,9,3)\
func_triple_A_11_test = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + (2 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (X_2))));\
func_triple_A_11_test(12,1,2,9,3)\
func_triple_A_11_test_3 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + (10 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2))));\
func_triple_A_11_test_3 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(exp(-beta * Table_4\{JI,8\}))  + (10^3 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2))));\
func_triple_A_11_test_3(12,1,2,9,3)\
func_triple_A_11_test_3 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (10 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2))));\
func_triple_A_11_test_3(12,1,2,9,3)\
1+(lambda_c * exp(-beta * Table_4\{JI,8\}))\
lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2))\
func_triple_A_11_test_3 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (10 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2))));\
func_triple_A_11_test_4 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (225 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2))));\
func_triple_A_11_test_4(12,1,2,9,3)\
%-- 4/3/20, 10:50 PM --%\
func_triple_A_11_test_3 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (10 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2))));\
Table = readtable('First6-Data.csv');\
Table_3 = readtable('PAMData.csv');\
Table_4 = readtable('Last14Data.csv');\
% define positions for terms in partition function\
I = 30;\
JI = 45;\
IJ=20;\
beta = 0.005;\
N = 16;\
N_1 = 13;\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% define possible cases of 3 mismatches\
number_1 = 1;\
number_2 = 2;\
number_3 = 3;\
J=3;\
lambda_mismatch = exp(-10/2);\
lambda_c = 0.025;\
lambda_p = 0.015;\
couplings_ij1 = exp(N-J);\
couplings_ij2 = N-J;\
% hamiltonian_i1 = exp(couplings_ij1 * 1 * exp(lambda_mismatch * (N-J)));\
% hamiltonian_i2 = exp(couplings_ij2 * 1) * exp(lambda_mismatch * (N-J));\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
normalization_double_1 = 1/(10+2)^3;\
normalization_double_2 = 1/(2+2)^3;\
func_triple_A_11_test_3 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (10 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2))));\
func_triple_A_11_test_3(12,2,3,3)\
syms i\
syms j\
func_triple_A_11_test_3 = @(N,N_1, X_2, mat,mis) exp(-(symprod(1./(mat + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (10 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (N-X_2))));\
func_triple_A_11_test_3 = @(N,N_1, X_2, mis, lambda_mismatch_1) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-i), i , 1 , mat+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (N_1 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (-X_2))));\
func_triple_A_11_test_3(12, 10^2 , 2 , 1 , exp(-10/2))\
func_triple_A_11_test_3 = @(N,N_1, X_2, mis, lambda_mismatch_1) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-i), i , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (N_1 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (-X_2))));\
func_triple_A_11_test_3(12, 10^2 , 2 , 1 , exp(-10/2))\
func_triple_A_11_test_3(12, 15^2 , 2 , 1 , exp(-10/2))\
exp(-10/2)\
exp(-14/2)\
exp(-20/2)\
zeros(1,20)\
x = zeros(1,20)\
x(1)=1\
exp(-1/2)\
func_triple_A_11_test_3 = @(N,N_1, X_2, mis, lambda_mismatch_1) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-i), i , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-j)), j , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (N_1 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (-X_2))));\
func_triple_A_11_test_3(12, 10^3,1,1,exp(-10/2))\
func_triple_A_11_test_3(12, 10^3,2,1,exp(-10/2))\
func_triple_A_11_test_3(12, 10^3,3,1,exp(-10/2))\
double(func_triple_A_11_test_3(12, 10^3,3,1,exp(-10/2)))\
format long\
double(func_triple_A_11_test_3(12, 10^3,3,1,exp(-10/2)))\
double(func_triple_A_11_test_3(12, 10^3,1,1,exp(-10/2)))\
exp(-10/2)\
func_triple_A_11_test_3(12, 10^3,2,1,exp(-10/2))\
double(func_triple_A_11_test_3(12, (12)^3,2,1,exp(-10/2)))\
double(func_triple_A_11_test_3(12, (9)^3,2,1,exp(-100/2)))\
double(func_triple_A_11_test_3(12, (9)^3,2,1,exp(-10/2)))\
exp(-(20-1)/2)\
exp(-(20-2)/2)\
double(func_triple_A_11_test_3(12, (19)^3,1,1,exp(-20/2)))\
[func_value_array , TEST_3_NEW , visit_array_3] = demo_2()\
sym i\
syms i\
[func_value_array , TEST_3_NEW , visit_array_3] = demo_2()\
clear all\
[func_value_array , TEST_3_NEW , visit_array_3] = demo_2()\
syms(parameter)\
syms i j\
syms 1 2\
syms i j\
f = symfun(exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-sym1), sym1 , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-sym2)), sym2 , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (N_1 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (-X_2)))) , [i j N,N_1, X_2, mis, lambda_mismatch_1])\
f = symfun(exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-sym1), sym1 , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-sym2)), sym2 , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (N_1 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (-X_2)))) , [i j N N_1 X_2 mis lambda_mismatch_1])\
[func_value_array , TEST_3_NEW , visit_array_3] = demo_2()\
syms sym1 sym2\
func_triple_A_11_test_3 = @(N,N_1, X_2, mis, lambda_mismatch_1, sym1 , sym2) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-sym1), sym1 , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-sym2)), sym2 , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (N_1 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (-X_2))));\
[func_value_array , TEST_3_NEW , visit_array_3] = demo_2()\
syms sym1\
syms sym2\
func_triple_A_11_test_3 = @(N,N_1, X_2, mis, lambda_mismatch_1) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-sym1), sym1 , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-sym2)), sym2 , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (N_1 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (-X_2))));\
[func_value_array , TEST_3_NEW , visit_array_3] = demo_2()\
syms sym1\
syms sym2\
func_triple_A_11_test_3 = @(N,N_1, X_2, mis, lambda_mismatch_1) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-sym1), sym1 , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-sym2)), sym2 , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (N_1 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (-X_2))));\
double(func_triple_A_11_test_3(N_bind, (20 - IJ+2)^3 ,IJ, exp(-(N_bind-IJ)/2)))\
N_bind=15;\
double(func_triple_A_11_test_3(N_bind, (20 - IJ+2)^3 ,IJ, exp(-(N_bind-IJ)/2)))\
IJ=3;\
double(func_triple_A_11_test_3(N_bind, (20 - IJ+2)^3 ,IJ, exp(-(N_bind-IJ)/2)))\
double(func_triple_A_11_test_3(N_bind, (20 - IJ+2)^3 ,IJ, 1, exp(-(N_bind-IJ)/2))\
double(func_triple_A_11_test_3(N_bind, (20 - IJ+2)^3 ,IJ, 1, exp(-(N_bind-IJ)/2)))\
[func_value_array , TEST_3_NEW , visit_array_3] = demo_2()\
exp((-10+2)/2)\
exp(-10/2)\
1/exp(-10/2)\
1/exp((-10+2)/2)\
double(func_triple_A_11_test_3(15, (20 - 15)^3 , 0 , 1, 0))\
lambda_c = 0.025;\
double(func_triple_A_11_test_3(15, (20 - 15)^3 , 0 , 1, 0))\
func_triple_A_11_test_3 = @(N,N_1, X_2, mis, lambda_mismatch_1) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-sym1), sym1 , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-sym2)), sym2 , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (N_1 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (-X_2))));\
double(func_triple_A_11_test_3(15, (20 - 15)^3 , 0 , 1, 0))\
Table = readtable('First6-Data.csv');\
Table_3 = readtable('PAMData.csv');\
Table_4 = readtable('Last14Data.csv');\
% define positions for terms in partition function\
I = 30;\
JI = 45;\
IJ=20;\
beta = 0.005;\
N = 16;\
N_1 = 13;\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
func_triple_A_11_test_3 = @(N,N_1, X_2, mis, lambda_mismatch_1) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-sym1), sym1 , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-sym2)), sym2 , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (N_1 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (-X_2))));\
double(func_triple_A_11_test_3(15, (20 - 15)^3 , 0 , 1, 0))\
double(func_triple_A_11_test_3(15, (20 - 2)^3 , 2 , 1, exp(-(15-2))/2))\
double(func_triple_A_11_test_3(15, (20 - 3)^3 , 3 , 1, exp(-(15-3))/2))\
[func_value_array , TEST_3_NEW , visit_array_3] = demo_2()\
exp(-1/2)\
a = func (@n) (2./100) .* int(1 * cos(n * w0*t),t, 0, 100);\
a = func (@n) ((2./100) .* int(1 * cos(n * w0*t),t, 0, 100));\
a = func (@n) ((2./100 .* int(1 * cos(n * w0*t),t, 0, 100));\
a = funm (@N) ((2./100 .* int(1 * cos(N * rw*t),t, 0, 100)));\
a = funm (@N) (2./100 .* int(1 * cos(N * rw*t),t, 0, 100));\
a = func (@n) ((2./100) .* int(1 .* cos(n .* w0 .*t),t, 0, 100));\
a = func (@n) 2./100 .* (int(1 .* cos(n .* w0 .*t),t, 0, 100));\
a = func (@n) 2/100 .* (int(1 .* cos(n .* w0 .*t),t, 0, 100));\
a = func (@n) (int(1 .* cos(n .* w0 .*t),t, 0, 100));\
a = func (@n) int(1 .* cos(n .* w0 .*t),t, 0, 100);\
w0 = pi;\
coefficient_array_a = [ ];\
coefficient_array_b = [ ];\
x = linspace(1150, 1250, 100)\
for n = -100:100\
a = (2./100) .* int(1 * cos(n * w0*t),t, 0, 100);\
b = (2./100) .* int(1* sin(n*w0*t),t,0,100);\
coefficient_array_a(n) = a;\
coefficient_array_b(n) = b;\
end\
sym t\
syms t\
w0 = pi;\
coefficient_array_a = [ ];\
coefficient_array_b = [ ];\
x = linspace(1150, 1250, 100)\
for n = -100:100\
a = (2./100) .* int(1 * cos(n * w0*t),t, 0, 100);\
b = (2./100) .* int(1* sin(n*w0*t),t,0,100);\
coefficient_array_a(n) = a;\
coefficient_array_b(n) = b;\
end\
% compute the Fourier coefficients of\
% the basis for each stage of the flight\
% EXAMPLE FLIGHT: SET 3 HIRF 26\
% Fourier coefficients for END of flight\
syms t;\
w0 = pi;\
coefficient_array_a = [ ];\
coefficient_array_b = [ ];\
x = linspace(1150, 1250, 100)\
for n = -100:100\
a = (2./100) .* int(1 * cos(n * w0*t),t, 0, 100);\
b = (2./100) .* int(1* sin(n*w0*t),t,0,100);\
coefficient_array_a(n+100) = a;\
coefficient_array_b(n+100) = b;\
end\
array = []\
array(0)\
array(1)\
array = [ 1 ; 2 ; 3]\
array(0)\
array(1)\
% compute the Fourier coefficients of\
% the basis for each stage of the flight\
% EXAMPLE FLIGHT: SET 3 HIRF 26\
% Fourier coefficients for END of flight\
syms t;\
w0 = pi;\
coefficient_array_a = [ ];\
coefficient_array_b = [ ];\
x = linspace(1150, 1250, 100)\
for n = -100:100\
a = (2./100) .* int(1 * cos(n * w0*t),t, 0, 100);\
b = (2./100) .* int(1* sin(n*w0*t),t,0,100);\
coefficient_array_a(n+101) = a;\
coefficient_array_b(n+101) = b;\
end\
% compute the Fourier coefficients of\
% the basis for each stage of the flight\
% EXAMPLE FLIGHT: SET 3 HIRF 26\
% Fourier coefficients for END of flight\
syms t;\
w0 = pi;\
coefficient_array_a = [ ];\
coefficient_array_b = [ ];\
x = linspace(1150, 1250, 100)\
for n = -5:5\
a = (2./100) .* int(1 * cos(n * w0*t),t, 1150, 1250);\
b = (2./100) .* int(1* sin(n*w0*t),t, 1150, 1250);\
coefficient_array_a(n+6) = a;\
coefficient_array_b(n+6) = b;\
end\
a0 = 1;\
% compute the Fourier coefficients of\
% the basis for each stage of the flight\
% EXAMPLE FLIGHT: SET 3 HIRF 26\
% Fourier coefficients for END of flight\
syms t;\
w0 = pi;\
coefficient_array_a = [ ];\
coefficient_array_b = [ ];\
x = linspace(1150, 1250, 100)\
format long\
for n = -5:5\
a = (2./100) .* int(t^2 * cos(n * w0 * t),t, 1100, 1250);\
b = (2./100) .* int(t^2 * sin(n*w0 * t),t, 1100, 1250);\
coefficient_array_a(n+6) = a;\
coefficient_array_b(n+6) = b;\
end\
a0 = 1;\
f = func (@x) (a0 + (coefficient_array_a(n) * cos(2 * pi * n * x/100) + coefficient_array_b(n) * sin(2 * pi * n * x/100)));\
%-- 4/12/20, 10:14 PM --%\
[func_value_array , TEST_3_NEW , visit_array_3] = demo_2()\
syms sym1\
syms sym2\
func_triple_A_11_test_3 = @(N,N_1, X_2, mis, lambda_mismatch_1) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-sym1), sym1 , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-sym2)), sym2 , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (N_1 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (-X_2))));\
func_triple_A_11_test_3(13,10^2,3,1,6.14e-07)\
J=3;\
lambda_mismatch = exp(-10/2);\
lambda_c = 0.025;\
lambda_p = 0.015;\
func_triple_A_11_test_3 = @(N,N_1, X_2, mis, lambda_mismatch_1) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-sym1), sym1 , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-sym2)), sym2 , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (N_1 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (-X_2))));\
func_triple_A_11_test_3(13,10^2,3,1,6.14e-07)\
func_triple_A_11_test_3(13,10^2,3,1,6.14)\
func_triple_A_11_test_3 = @(N,N_1, X_2, mis, lambda_mismatch_1) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-sym1), sym1 , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-sym2)), sym2 , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (N_1 * lambda_mismatch_1 * exp(lambda_mismatch_1 * (-X_2))));\
func_triple_A_11_test_3(13,10^2,3,1,6.14e-07)\
beta = 0.005;\
func_triple_A_11_test_3 = @(N,N_1, X_2, mis, lambda_mismatch_1) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-sym1), sym1 , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-sym2)), sym2 , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (N_1 * lambda_mismatch_1 * exp(lambda_mismatch_1 * (-X_2))));\
func_triple_A_11_test_3(13,10^2,3,1,6.14e-07)\
I = 30;\
JI = 45;\
func_triple_A_11_test_3 = @(N,N_1, X_2, mis, lambda_mismatch_1) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-sym1), sym1 , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-sym2)), sym2 , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (N_1 * lambda_mismatch_1 * exp(lambda_mismatch_1 * (-X_2))));\
func_triple_A_11_test_3(13,10^2,3,1,6.14e-07)\
Table = readtable('First6-Data.csv');\
Table_3 = readtable('PAMData.csv');\
Table_4 = readtable('Last14Data.csv');\
func_triple_A_11_test_3 = @(N,N_1, X_2, mis, lambda_mismatch_1) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-sym1), sym1 , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-sym2)), sym2 , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (N_1 * lambda_mismatch_1 * exp(lambda_mismatch_1 * (-X_2))));\
func_triple_A_11_test_3(13,10^2,3,1,6.14e-07)\
func_triple_A_11_test_3(13,(25-3)^3,3,1,6.14e-07)\
func_triple_A_11_test_3(13,(25-3)^3,3,1,6.14e-03)\
func_triple_A_11_test_3(13,(25-3)^3,3,1,6.14e-05)\
func_triple_A_11_test_none = @(N,N_1, X_2, mis, lambda_mismatch_1) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-sym1), sym1 , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-sym2)), sym2 , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\})));\
func_triple_A_11_test_3(13,0,0,0,0)\
func_triple_A_11_test_3(13,(25-5)^3,5,1,6.14e-05)\
func_triple_A_11_test_3(13,(25-5)^3,5,1,6.14e-07)\
func_triple_A_11_test_3(13,(25-5)^3,5,1,5.05e-05)\
func_triple_A_11_test_3(13,(25-3)^3,3,1,6.14e-05)\
double(func_triple_A_11_test_3(13,(25-3)^3,3,1,6.14e-05))\
func_triple_A_11_test_3_2 = @(N,N_1, X_2, mis, lambda_mismatch_1) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-sym1), sym1 , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-sym2)), sym2 , 1, mis+1)))./((N./N_1) * (1+(lambda_c * exp(-beta * Table_4\{JI,8\})))  + (N_1 * lambda_mismatch_1 * exp(lambda_mismatch_1 * (-X_2))));\
func_triple_A_11_test_3_2 = @(N,N_11, X_2, mis, lambda_mismatch_1) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-sym1), sym1 , 1 , (N-mis)+1)))./((N_11./N) * (1+(lambda_c * exp(-beta * Table_4\{JI,8\}))));\
func_triple_A_11_test_3_2 = @(N,N_11, mis) exp(-(symprod(1./((N_11- mis) + 2)^3 *  abs(N_11-sym1), sym1 , 1 , (N_11-mis)+1)))./((N_11./N) * (1+(lambda_c * exp(-beta * Table_4\{JI,8\}))));\
func_triple_A_11_test_3_2(13,1,0)\
double(func_triple_A_11_test_3_2(13,1,0))\
exp(-1/13)\
exp(-5/13)\
1-exp(-1/13)\
1-exp(-5/13)\
-beta * Table_4\{JI,8\}\
beta * Table_4\{JI,8\}\
func_triple_A_11_test_3_2 = @(N,N_11, mis) exp(-(symprod(1./((N_11- mis) + 2)^3 *  abs(N_11-sym1), sym1 , 1 , (N_11-mis)+1)))./(1+(lambda_c * exp(- N_11./N * beta * Table_4\{JI,8\})));\
double(func_triple_A_11_test_3_2(13,1,0))\
double(func_triple_A_11_test_3_2(13,2,0))\
func_triple_A_11_test_3_2 = @(N,N_11, mis) exp(-(symprod(1./((N_11- mis) + 2)^3 *  abs(N_11-sym1), sym1 , 1 , (N_11-mis)+1)))./(1+((N_11./ N) *lambda_c * exp(- N_11./N * beta * Table_4\{JI,8\})));\
double(func_triple_A_11_test_3_2(13,1,0))\
double(func_triple_A_11_test_3_2(13,2,0))\
double(func_triple_A_11_test_3_2(13,3,0))\
double(func_triple_A_11_test_3_2(13,4,0))\
func_triple_A_11_test_3_2 = @(N,N_11, mis) exp(-(symprod(1./((N_11- mis) + 2)^3 *  abs(N_11-sym1), sym1 , 1 , (N_11-mis)+1)))./((N_11./N) * (1+(lambda_c * exp(-beta * Table_4\{JI,8\}))));\
func_triple_A_11_test_3_2 = @(N,N_11, mis) exp(-(symprod(1./((N_11- mis) + 2)^3 *  abs(N_11-sym1), sym1 , 1 , (N_11-mis)+1)))./(1+(N_11./N)* (lambda_c * exp(-beta * Table_4\{JI,8\})));\
double(func_triple_A_11_test_3_2(13,1,0))\
double(func_triple_A_11_test_3_2(13,2,0))\
double(func_triple_A_11_test_3_2(13,3,0))\
double(func_triple_A_11_test_3_2(13,4,0))\
double(func_triple_A_11_test_3_2(13,12,0))\
double(func_triple_A_11_test_3_2(13,0,0))\
double(func_triple_A_11_test_3(13,(25-3)^3,3,1,6.14e-05))\
func_triple_A_11_test_3_2 = @(N,N_11, mis) exp(-(symprod(1./((N_11- mis) + 2)^3 *  abs(N_11-sym1), sym1 , 1 , (N_11-mis)+1)))./(1+(N_11./N)* (lambda_c * exp(-beta * Table_4\{JI,8\})));\
func_triple_A_11_test_3_2 = @(N,N_11, mis) exp(-(symprod(1./((N_11- mis) + 2)^3 *  abs(N_11-sym1), sym1 , 1 , (N_11-mis)+1)))./(1+(N_11./N)* (lambda_c * exp(-(N_11./N) * beta * Table_4\{JI,8\})));\
double(func_triple_A_11_test_3_2(13,3,0))\
func_triple_A_11_test_3_2 = @(N,N_11, mis) exp(-(symprod(1./((N_11- mis) + 2)^3 *  abs(N_11-sym1), sym1 , 1 , (N_11-mis)+1)))./(1+(N_11./N)* (lambda_c * exp(-(1+(N_11./N)) * beta * Table_4\{JI,8\})));\
double(func_triple_A_11_test_3_2(13,3,0))\
func_triple_A_11_test_3_2 = @(N,N_11, mis) exp(-(symprod(1./((N_11- mis) + 2)^3 *  abs(N_11-sym1), sym1 , 1 , (N_11-mis)+1)))./(1+(N_11./N)* (lambda_c * exp(-N_11./N *(1+ beta * Table_4\{JI,8\}))));\
double(func_triple_A_11_test_3_2(13,3,0))\
double(func_triple_A_11_test_3_2(13,2,0))\
double(func_triple_A_11_test_3_2(13,1,0))\
double(func_triple_A_11_test_3_2(13,4,0))\
double(func_triple_A_11_test_3_2(13,6,0))\
double(func_triple_A_11_test_3_2(13,12,0))\
func_triple_A_11_test_3_2 = @(N,N_11, mis) exp(-(symprod(1./((N_11- mis) + 2)^3 *  abs(N_11-sym1), sym1 , 1 , (N_11-mis)+1)))./(1+(N_11./N)* (lambda_c * exp(-N_11./N *(1+ beta * Table_4\{JI,8\}))));\
func_triple_A_11_test_3_2 = @(N,N_11, mis) exp(-(symprod(1./((N_11- mis) + 2)^3 *  abs(N_11-sym1), sym1 , 1 , (N_11-mis)+1)))./((1+N_11./N)* (lambda_c * exp(-N_11./N *(1+ beta * Table_4\{JI,8\}))));\
double(func_triple_A_11_test_3_2(13,12,0))\
func_triple_A_11_test_3_2 = @(N,N_11, mis) exp(-(symprod(1./((N_11- mis) + 2)^3 *  abs(N_11-sym1), sym1 , 1 , (N_11-mis)+1)))./((1+(N_11./N)* (lambda_c * exp(-(1+N_11./N) *(beta * Table_4\{JI,8\})))));\
double(func_triple_A_11_test_3_2(13,12,0))\
double(func_triple_A_11_test_3_2(13,1,0))\
double(func_triple_A_11_test_3(13,(25-5)^3,5,1,4e-05))\
func_triple_A_11_test_3_2 = @(N,N_11, mis) exp(-(symprod(1./((N_11- mis) + 2)^3 *  abs(N_11-sym1), sym1 , 1 , (N_11-mis)+1)))./((1+(N_11./N)* (lambda_c * exp(-(1+N_11./N) *(beta * Table_4\{JI,8\})))));\
func_triple_A_11_test_3_2 = @(N,N_11, mis) exp(-(symprod(1./((N_11- mis) + 2)^3 *  abs(N_11-sym1), sym1 , 1 , (N_11-mis)+1)))./((1+((N_11./N)* (lambda_c * exp(-(1+N_11./N) *(beta * Table_4\{JI,8\}))))));\
double(func_triple_A_11_test_3_2(13,12,0))\
double(func_triple_A_11_test_3_2(13,1,0))\
double(func_triple_A_11_test_3_2(13,2,0))\
double(func_triple_A_11_test_3_2(13,3,0))\
double(func_triple_A_11_test_3_2(13,4,0))\
double(func_triple_A_11_test_3_2(13,5,0))\
double(func_triple_A_11_test_3_2(13,6,0))\
double(func_triple_A_11_test_3_2(13,7,0))\
double(func_triple_A_11_test_3_2(13,8,0))\
double(func_triple_A_11_test_3_2(13,9,0))\
double(func_triple_A_11_test_3_2(13,10,0))\
double(func_triple_A_11_test_3_2(13,11,0))\
double(func_triple_A_11_test_3_2(13,12,0))\
double(func_triple_A_11_test_3_2(13,13,0))\
double(func_triple_A_11_test_3_2(13,20,0))\
TESTY = [ 0.998080624523906; 0.996168604406074 ;  0.994263897446976 ; 0.990476255814766 ;  0.743529869249711 ; 0.986717368419950 ; 0.984848605431730 ; 0.982986909064973 ; 0.981132239312280 ;  0.979284556467681 ; 0.977443821123807 ; 0.975609994169083 ];\
length(TESTY)\
TESTY = [ 0.998080624523906; 0.996168604406074 ;  0.994263897446976 ;0.992366461769276; 0.990476255814766 ;  0.743529869249711 ; 0.986717368419950 ; 0.984848605431730 ; 0.982986909064973 ; 0.981132239312280 ;  0.979284556467681 ; 0.977443821123807 ; 0.975609994169083 ];\
length(TESTY)\
[visit_array_11] = demo_2()\
[visit_array_11, visit_array_111] = demo_2()\
TESTY_2 = [ 0.998080624523906; 0.996168604406074 ; 0.595710884576400  ;0.992366461769276; 0.743529869249711 ; 0.988593238341331 ; 0.986717368419950 ; 0.984848605431730 ; 0.982986909064973 ; 0.981132239312280 ;  0.979284556467681 ; 0.977443821123807 ; 0.975609994169083 ];\
length(TESTY_2)\
TESTY = [ 0.998080624523906; 0.996168604406074 ;  0.994263897446976 ;0.992366461769276; 0.743529869249711 ; 0.988593238341331 ; 0.986717368419950 ; 0.984848605431730 ; 0.982986909064973 ; 0.981132239312280 ;  0.979284556467681 ; 0.977443821123807 ; 0.975609994169083 ];\
length(TESTY)\
sum(visit_array_11)\
sum(visit_array_111)\
[visit_array_11, visit_array_111] = demo_2()\
double(func_triple_A_11_test_3(13,(25-5)^3,5,1,4e-05))\
double(func_triple_A_11_test_3(13,(25-1)^3,1,1,9e-05))\
[visit_array_11, visit_array_111, visit_array_1111] = demo_2()\
array = \{visit_array_11; visit_array_111; visit_array_1111\};\
short(array)\
length(array)\
short(array)\
plot(visit_array_111, linspace(1,13,13))\
plot(linspace(1,13,13), visit_array_111 , ' . ')\
func_triple_A_11_test_3_21 = @(N,N_11, mis) exp(-(symprod(1./((N_11- mis) + 2)^3 *  abs(N_11-sym1), sym1 , 1 , (N_11-mis)+1)))./((1+((N_11./N)* (lambda_c * exp(-(1+N_11./N) *(beta * Table_4\{JI,8\})))+ ((25-5)^3 * (4e-05) * exp((-4e-05)* 5)));\
func_triple_A_11_test_3_21 = @(N,N_11, min) exp(-(symprod(1./((N_11- min) + 2)^3 *  abs(N_11-sym1), sym1 , 1 , (N_11-min)+1)))./((1+((N_11./N)* (lambda_c * exp(-(1+N_11./N) *(beta * Table_4\{JI,8\})))+ ((25-5)^3 * (4e-05) * exp((-4e-05)* 5)))));\
func_triple_A_11_test_3_21(13,6,1)\
double(func_triple_A_11_test_3_21(13,6,1))\
double(func_triple_A_11_test_3_21(13,7,1))\
double(func_triple_A_11_test_3_21(13,8,1))\
double(func_triple_A_11_test_3_21(13,9,1))\
double(func_triple_A_11_test_3_21(13,10,1))\
double(func_triple_A_11_test_3_21(13,11,1))\
double(func_triple_A_11_test_3_21(13,12,1))\
TESTY_2 = [ 0.998080624523906; 0.996168604406074 ;  0.994263897446976 ;0.992366461769276; 0.743529869249711 ; 0.751047119144556 ; 0.749963941025334 ; 0.748883883607377 ; 0.747806933423691 ; 0.746733077084662 ;  0.745662301277492 ; 0.744594592765657  ;  ];\
length(TEST_2)\
length(TESTY_2)\
[visit_array_11, visit_array_111, visit_array_1111] = demo_2()\
plotty(visit_array_11)\
plotty(visit_array_111)\
plotty(visit_array_11)\
plotty(visit_array_11,visit_array_111)\
plot(linspace(1,length(visit_array_111),length(visit_array_111)), visit_array_111 , ' . ')\
plotty(visit_array_11,visit_array_111)\
%-- 4/15/20, 3:40 PM --%\
data_set_75 = data;\
data_set_76 = data;\
data_set_77 = data;\
data_set_78 = data;\
data_set_79 = data;\
data_set_80 = data;\
data_set_81 = data;\
[data_new, C_max_array] = nasa_test(data_set_75,data_set_76, data_set_77, data_set_78, data_set_79, data_set_80, data_set_81)\
TEST_TIMES = data_new_4\{1\}\
TEST_TIMES = data_set_78\{1\}\
[data_new, C_max_array, times_4 , times]= nasa_test(data_set_75,data_set_76, data_set_77, data_set_78, data_set_79, data_set_80, data_set_81)\
[data_new, C_max_array, data_new_4 , data_new]= nasa_test(data_set_75,data_set_76, data_set_77, data_set_78, data_set_79, data_set_80, data_set_81)\
[data_new, C_max_array, data_new_4]= nasa_test(data_set_75,data_set_76, data_set_77, data_set_78, data_set_79, data_set_80, data_set_81)\
data_new_4\{1|\
data_new_4\{1\}\
times_1 = data_new\{1\};\
times_4 = data_new\{4\};\
min(data_new\{3\})\
max(data_new\{3\})\
find(max(data_new\{3\}))\
find(min(data_new\{3\}))\
min(data_new\{3\}_)\
min(data_new\{3\})\
max(data_new\{3\})\
k=find(min(data_new\{3\})+0.5)\
[row,col] = find(min(data_new\{3\})+0.6)\
data_new\{3\}\
data_new\{3\}(5)\
max(data_new\{3\})\
min(data_new\{3\})\
minimum_val = min(x_1);\
maximum_val = max(x_1);\
subvec_x_1 = data_new\{3\}(minimum_val <= data_new\{3\} <= maximum_val);\
x_1 = data_new\{3\};\
minimum_val = min(x_1);\
maximum_val = max(x_1);\
subvec_x_1 = data_new\{3\}(minimum_val <= data_new\{3\} <= maximum_val);\
subvec_x_1\
minimum_val\
maximum_vale\
maximum_val\
subvec_vec = data_new\{3\}(data_new\{3\}>= minimum_val);\
min(subvec_vec)\
max(subvec_vec)\
subvec_vec_2 = data_new\{3\}(data_new\{3\}<= maximum_val)\
min(subvec_vec_2)\
max(subvec_vec_2)\
max(subvec_vec)\
min(subvec_vec)\
subvec_vec_2_2 = data_new\{3\}(data_new\{3\}< maximum_val);\
length(subvec_vec_2_2)\
length(subvec_vec_2)\
length(data_new\{3\})\
data_new\{3\}(454060)\
subvec_test = data_new\{3\}(data_new\{3\}(length(data_new\{3\})<= data_new\{3\} < max(data_new\{3\}))\
subvec_test = data_new\{3\}(data_new\{3\}(length(data_new\{3\})<= data_new\{3\} < max(data_new\{3\})))\
subvec_test = data_new\{3\}(data_new\{3\}(length(data_new\{3\}))<= data_new\{3\} < max(data_new\{3\}))\
subvec_test = data_new\{3\}(data_new\{3\}(length(data_new\{3\}))<= data_new\{3\} < max(data_new\{3\}));\
length(subvec_test)\
data_new\{3\}(length(data_new\{3\}))\
length(data_new\{1\})\
max(data_new\{3\})\
subvec_test = data_new\{3\}( min(data_new\{3\})<= data_new\{3\} < data_new\{3\}(length(data_new\{3\})));\
length(subvec_test)\
subvec_3 = data_new\{3\};\
length(subvec_3)\
find(subvec_3 <= subvec_3(length(subvec_3)))\
x=find(subvec_3 <= subvec_3(length(subvec_3)));\
length(x)\
y = find(subvec_3 > max(subvec_3));\
length(y)\
y = find(subvec_3 >= max(subvec_3));\
length(y)\
subvec_testy = [data_new\{1\};data_new\{3\}];\
subvec_testy = [data_new\{1\} data_new\{3\}];\
subvec_testy(2)\
subvec_testy(:,2)\
[row,col] = find(min(subvec_testy(:,2)) <=subvec_testy(:,2) <= subvec_testy(:,2)(length(subvec_testy)))\
[row,col] = find(min(subvec_testy(:,2)) <= subvec_testy(:,2) <= subvec_testy(length(subvec_testy),2))\
[row,col] = find(min(subvec_testy(:,2)) <= subvec_testy(:,2) <= subvec_testy(length(subvec_testy),2));\
length(subvec_testy)\
subvec_testy(length(subvec_testy),2)\
y = find(subvec_3 >= max(subvec_3));\
length(y)\
x=find(subvec_3 <= subvec_3(length(subvec_3)));\
length(x)\
yz = find(x == min(x))\
yz\
[row;col] = find(subvec_3 <= subvec_3(length(subvec_3)))\
[row,col] = find(subvec_3 <= subvec_3(length(subvec_3)))\
x = [row;col];\
x = [row col];\
x = [col row];\
subvec_3(length(subvec_3))\
346276*2\
K = find(subvec_testy(2) <= subvec_test(2)(length(subvec_testy)));\
subvec_testy_row2 = subvec_testy(2);\
subvec_testy_row2 = subvec_testy(:,2);\
K = find(subvec_testy_row2 <= subvec_testy_row2(length(subvec_testy_row2)));\
subvec_testy_row2(78736)\
subvec_3(1,78736)\
subvec_3(78736,1)\
subvec_3(78736,0)\
subvec_3(2,78736)\
length(subvec_3(:,1))\
length(subvec_testy_row2)\
subvec_3(1,1)\
subvec_3(1,78736)\
subvec_3(78736,1)\
subvec_3(78736,2)\
subvec_3(78736,0)\
subvec_3(1,2)\
subvec_3(2,1)\
subvec_3(1,1)\
subvec_testy(1,78736)\
subvec_testy(78736,2)\
subvec_testy(1,2)\
subvec_testy(1,1)\
subvec_testy(1,2)\
subvec_testy(2,1)\
plotty2()\
plotty(data_set_78)\
plotty2(data_set_78)\
time_vec = [ ];\
time_vec\
time_vec(1)\
time_vec(1)=1\
plotty2(data_set_78)\
[time_vec , subvec_3_2] = plotty2(data_set_78)\
K = find(subvec_3_2 <= subvec_3_2(length(subvec_3_2)));\
[time_vec,subvec_3_2] = plotty2(data_set_78)\
plot(time_vec, trunc_subvec_3_2)\
[time_vec, trunc_subvec_3_2] = plotty2(data_set_78)\
[time_vec, trunc_subvec_3_2] = plotty2(data_set_78);\
plot(time_vec, trunc_subvec_3_2)\
time_vec = transpose(time_vec);\
trunc_subvec_3_2 = transpose(trunc_subvec_3_2);\
plot(time_vec, trunc_subvec_3_2)\
454060-407233\
[time_vec, trunc_subvec_3_2] = plotty2(data_set_78);\
[time_vec, trunc_subvec_3_2] = plotty2(data_set_75;\
[time_vec, trunc_subvec_3_2] = plotty2(data_set_75);\
[time_vec, trunc_subvec_3_2] = plotty2(data_set_77);\
subvec_3_2(length(subvec_3_2))\
subvec_3_2 < subvec_3_2(length(subvec_3_2))\
[time_vec, trunc_subvec_3_2, subvec_3_1] = plotty2(data_set_77);\
TESTr = subvec_3_1(:,2);\
length(TESTr)\
fidn(subvec_3_2 < subvec_3_2(length(subvec_3_2)))\
find(subvec_3_2 < subvec_3_2(length(subvec_3_2)))\
[time_vec, trunc_subvec_3_2] = plotty2(data_set_77);\
subvec_3_2(length(subvec_3_2))\
subvec_3_2(length(subvec_3_2))-2\
[time_vec, trunc_subvec_3_2] = plotty2(data_set_77);\
%-- 4/16/20, 12:30 AM --%\
data_set_77=data;\
[time_vec, trunc_subvec_3_2] = plotty2(data_set_77);\
%-- 4/16/20, 9:45 AM --%\
data_set_77=data_set;\
data_set_77=data;\
mod(20,10)\
[time_vec, trunc_subvec_3_2, subvec_3_1, poly_trunc_subvec] = plotty2(data_set_77)\
poly_trunc_subvec = nonzeros(poly_trunc_subvec);\
length(poly_trunc_subvec)\
K = find(subvec_3_2 < (subvec_3_2(length(subvec_3_2))-1.5));\
K = find(subvec_3_1 < (subvec_3_1(length(subvec_3_1))-1.5));\
data_new_3 = struct2cell(data_set_77);\
data_new = data_new_3;\
subvec_3 = data_new\{3\};\
subvec_3_1 = [data_new\{1\} data_new\{3\}];\
time_subvec = subvec_3_1(:,1);\
K = find(subvec_3_2 < (subvec_3_2(length(subvec_3_2))-1.5));\
subvec_3_2 = subvec_3_1(:,2);\
K = find(subvec_3_2 < (subvec_3_2(length(subvec_3_2))-1.5));\
[time_vec, trunc_subvec_3_2, subvec_3_1, poly_trunc_subvec, time_poly_trunc_subvec] = plotty2(data_set_77)\
[time_vec, trunc_subvec_3_2, subvec_3_1, poly_trunc_subvec, time_poly_trunc_subvec] = plotty2(data_set_77);\
time_poly_trunc_subvec= nonzeros(time_poly_trunc_subvec)\
[time_vec, trunc_subvec_3_2, subvec_3_1, poly_trunc_subvec, time_poly_trunc_subvec] = plotty2(data_set_77);\
data_set_7=data;\
data_set_78=data;\
[time_vec, trunc_subvec_3_2, subvec_3_1, poly_trunc_subvec, time_poly_trunc_subvec] = plotty2(data_set_78);\
data_set_79 = data;\
data_set_80=data;\
data_set_81=data;\
data_set_76=data;\
data_set_75=data;\
[data_new, C_max_array, data_new_4] = nasa_test(data_set_75,data_set_76, data_set_77, data_set_78, data_set_79, data_set_80, data_set_81)\
[time_vec, trunc_subvec_3_2, subvec_3_1, poly_trunc_subvec, time_poly_trunc_subvec] = plotty2(data_set_77);\
length(poly_trunc_subvec)/4\
[time_vec, trunc_subvec_3_2, subvec_3_1, poly_trunc_subvec, time_poly_trunc_subvec] = plotty2(data_set_77);\
length(poly_trunc_subvec)\
length(time_poly_trunc_subvec)\
[time_vec, trunc_subvec_3_2, subvec_3_1, poly_trunc_subvec, time_poly_trunc_subvec] = plotty2(data_set_77);\
length(poly_trunc_subvec)\
[time_vec, trunc_subvec_3_2, subvec_3_1, poly_trunc_subvec, time_poly_trunc_subvec] = plotty2(data_set_77);\
[time_vec, trunc_subvec_3_2, subvec_3_1, poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2] = plotty2(data_set_77);\
[data_new, C_max_array, data_new_4] = nasa_test(data_set_75,data_set_76, data_set_77, data_set_78, data_set_79, data_set_80, data_set_81)\
[time_vec, trunc_subvec_3_2, subvec_3_1, poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2] = plotty2(data_set_75);\
poly_trunc_subvec_22 = nonzero(poly_trunc_subvec);\
poly_trunc_subvec_22 = nonzeros(poly_trunc_subvec);\
Length_1 = length(poly_trunc_subvec_2)\
Length_2 = length(time_poly_trunc_subvec_2)\
plot(poly_trunc_subvec_2, time_poly_trunc_subvec_2)\
[time_vec, trunc_subvec_3_2, subvec_3_1, poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2] = plotty2(data_set_75);\
data_new_3 = struct2cell(in);\
data_new = data_new_3;\
subvec_3 = data_new\{3\};\
subvec_3_1 = [data_new\{1\} data_new\{3\}];\
time_subvec = subvec_3_1(:,1);\
subvec_3_2 = subvec_3_1(:,2);\
K = find(subvec_3_2 < (subvec_3_2(length(subvec_3_2))-1.5));\
data_new_3 = struct2cell(data_set_75);\
data_new = data_new_3;\
subvec_3 = data_new\{3\};\
subvec_3_1 = [data_new\{1\} data_new\{3\}];\
time_subvec = subvec_3_1(:,1);\
subvec_3_2 = subvec_3_1(:,2);\
K = find(subvec_3_2 < (subvec_3_2(length(subvec_3_2))-1.5));\
[time_vec, trunc_subvec_3_2, subvec_3_1, poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2] = plotty2(data_set_75);\
testy_2 = nonzeros(time_poly_trunc_subvec)\
[time_vec, trunc_subvec_3_2, subvec_3_1, poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2] = plotty2(data_set_75);\
[time_vec, trunc_subvec_3_2, subvec_3_1, poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2] = plotty2(data_set_77);\
[time_vec, trunc_subvec_3_2, subvec_3_1, poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2] = plotty2(data_set_75);\
max(time_poly_trunc_subvec_2)\
testy3=time_poly_trunc_subvec_2(time_poly_trunc_subvec_2 < max(time_poly_trunc_subvec_2));\
length(testy_3)\
length(testy3)\
length(time_poly_trunc_subvec_2)\
testy3=time_poly_trunc_subvec_2(time_poly_trunc_subvec_2 < max(time_poly_trunc_subvec_2)-0.3);\
length(testy3)\
testy3=time_poly_trunc_subvec_2(time_poly_trunc_subvec_2 < (max(time_poly_trunc_subvec_2)-0.3));\
length(testy_3)\
length(testy3)\
testy3 = poly_trunc_subvec_2(poly_trunc_subvec_2 < (max(poly_trunc_subvec_2)-0.3));\
length(testy3)\
length(poly_trunc_subvec_2)\
testy3 = poly_trunc_subvec_2(poly_trunc_subvec_2 < (max(poly_trunc_subvec_2));\
testy3 = poly_trunc_subvec_2(poly_trunc_subvec_2 < (max(poly_trunc_subvec_2)));\
length(testy3)\
combined_vec = [time_poly_trunc_subvec_2 poly_trunc_subvec_2]\
combined_vec = [time_poly_trunc_subvec_2 poly_trunc_subvec_2];\
[row col] = find(combined_vec(combined_vec(:,2) < (max(combined_vec(:,2)-0.3))))\
vec_num = [row col];\
combined_vec\
combined_vec = [time_poly_trunc_subvec_2 poly_trunc_subvec_2];\
poly_trunc_subvec_22 = combined_vec(:,2);\
testy3 = poly_trunc_subvec_22(poly_trunc_subvec_22 < (max(poly_trunc_subvec_22)-0.3));\
[row col] = combined_vec(poly_trunc_subvec_22 < (max(poly_trunc_subvec_22)-0.3));\
[row] = combined_vec(poly_trunc_subvec_22 < (max(poly_trunc_subvec_22)-0.3));\
[row] = find(combined_vec(poly_trunc_subvec_22 < (max(poly_trunc_subvec_22)-0.3)));\
length(row)\
combined_vec;\
combined_vec(1,1)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2] = plotty2(data_set_75)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, thres_times_vec_values , thres_current_vec_values] = plotty2(data_set_75)\
length(thres_times_vec_values)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, thres_times_vec_values , thres_current_vec_values] = plotty2(data_set_75)\
polyfit(thres_times_vec_values, thres_current_vec_values, length(thres_current_vec_values)-1)\
length(thres_times_vec_values)\
length(thres_current_vec_values)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, thres_times_vec_values , thres_current_vec_values] = plotty2(data_set_75)\
polyfit(thres_times_vec_values, thres_current_vec_values, length(thres_current_vec_values)-1)\
polyfit(thres_times_vec_values, thres_current_vec_values, length(thres_current_vec_values)+1)\
polyfit(thres_times_vec_values, thres_current_vec_values, length(thres_current_vec_values))\
p = polyfit(thres_times_vec_values, thres_current_vec_values, 4937)\
p = polyfit(thres_times_vec_values, thres_current_vec_values, 4938)\
p = polyfit(thres_times_vec_values, thres_current_vec_values, 4939)\
polyfit(poly_trunc_subvec, poly_trunc_subvec, length(poly_trunc_subvec)-1)\
%-- 4/16/20, 7:02 PM --%\
data_set_75=data;\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, thres_times_vec_values , thres_current_vec_values] = plotty2(data_set_75)\
polyfit(thres_times_vec_values, thres_current_vec_values, length(thres_times_vec_values)-1)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, thres_times_vec_values , thres_current_vec_values] = plotty2(data_set_75)\
polyfit(thres_times_vec_values, thres_current_vec_values, length(thres_times_vec_values)-1)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, thres_times_vec_values , thres_current_vec_values] = plotty2(data_set_75)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, thres_times_vec_values , thres_current_vec_values,p] = plotty2(data_set_75);\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec] = plotty2(data_set_75)\
polyfit(transpose(trunc_thres_times_vec), trunc_current_vec , length(transpose(trunc_thres_times_vec))-1)\
polyfit(trunc_thres_times_vec, transpose(trunc_current_vec) , length(trunc_thres_times_vec)-1)\
polyfit(transpose(trunc_thres_times_vec), transpose(trunc_current_vec) , length(transpose(trunc_thres_times_vec))-1)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec] = plotty2(data_set_75)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, p] = plotty2(data_set_75)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, p] = plotty2(data_set_75);\
%-- 4/17/20, 8:45 AM --%\
data_set_75=data;\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, p] = plotty2(data_set_75);\
%-- 4/17/20, 9:49 AM --%\
data_set_75=data;\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, p] = plotty2(data_set_75);\
length(trunc_thres_times_vec)\
sgf = sgolayfilt(p, length(trunc_thres_times_vec)-2,length(trunc_thres_times_vec)+1)\
sgf = sgolayfilt(p, length(trunc_thres_times_vec)-2,length(trunc_thres_times_vec)-2)\
sgf = sgolayfilt(p, length(trunc_thres_times_vec)-2,length(trunc_thres_times_vec)-3)\
sgf = sgolayfilt(p, length(trunc_thres_times_vec)-4,length(trunc_thres_times_vec)-3)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, p] = plotty2(data_set_75);\
sgf = sgolayfilt(trunc_current_vec, length(trunc_thres_times_vec)-4,length(trunc_thres_times_vec)-3)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, p] = plotty2(data_set_75);\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf] = plotty2(data_set_75);\
y = polyval(sgf,500)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf] = plotty2(data_set_75);\
sgf\
int(sgf * cos(1))\
cos(1)\
syms t;\
length(sgf)\
p = polyfit(sgf,length(trunc_thres_times_vec),length(sgf))\
p = polyfit(sgf,length(sgf),length(sgf)-1)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf] = plotty2(data_set_75);\
length(trunc_current_vec)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf] = plotty2(data_set_75);\
p = polyfit(sgf, length(sgf), length(sgf)-1)\
length(sgf)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf] = plotty2(data_set_75);\
p_test = polyfit(linspace(1,length(sgf),length(sgf)), sgf, length(sgf)-1)\
linspace(1,length(sgf),length(sgf))\
length(linspace(1,length(sgf),length(sgf)))\
length(sgf)\
p_test = polyfit(linspace(1,length(sgf),length(sgf)), sgf, length(sgf))\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf] = plotty2(data_set_75);\
p(410)\
p(35)\
sgf(10)\
sgf(9.5)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf,p_1] = plotty2(data_set_75);\
length(p_1)\
length(linspace(1,(length(trunc_thres_times_vec)-1)/2, (length(trunc_thres_times_vec)-1)/2))\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf,p_1] = plotty2(data_set_75);\
linspace(1,(length(trunc_thres_times_vec)-1)/2, (length(trunc_thres_times_vec)-1)/2)\
length(trunc_thres_times_vec)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf,p_1] = plotty2(data_set_75);\
thres_current_vec\
thres_current_vec_values\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values] = plotty2(data_set_75)\
test_curr = trunc_current_vec-17;\
[r,k] = polyfit_roots(thres_times_vec_values, test_curr, length(test_curr), 1e-14)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_75);\
[r,k] = polyfit_roots(thres_times_vec_values, test_curr, length(test_curr), 1e-14)\
function [r, k] = polyfit_roots(x, y, N, tol)\
if nargin < 4\
tol = 1e-14;\
end\
if ~isequal(size(x),size(y))\
error('polyfit_roots:XYSizeMismatch', 'Size of x and y must be the same')\
end\
y = y(:);\
x = x(:);\
W = @(s)x.*s;\
nX = length(x);\
N = min(N, nX-1);\
[Q, H] = arnoldi(W, ones(length(x),1), N); % Calc. orthogonal polynomials\
a = Q'*y; % Calc. Fourier coefficients\
a(abs(a)<tol*max(a)) = 0;\
maxOrder = find(abs(a) > 0, 1, 'last');\
N = maxOrder-1;\
A = H(1:N,1:N) - 1/a(N+1)*H(N+1, N)*a(1:N)*[zeros(1, N-1) 1];\
r = eig(A); % Calc. roots as eigenvalues of the generalized companion matrix\
k = polyval_roots(r, x)\\y; % Calc. constant that makes the fit as close as possible\
[r,k] = polyfit_roots(thres_times_vec_values, test_curr, length(test_curr), 1e-14)\
length(test_curr)\
length(thres_times_vec_values)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values, thres_times_vec_values, trunc_current_vec] = plotty2(data_set_75);\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_75);\
[r,k] = polyfit_roots(trunc_thres_times_vec_values, test_curr, length(test_curr), 1e-14)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_75);\
trunc_thres_vec_values\
length(trunc_thres_times_vec)\
length(trunc_current_vec)\
[r,k] = polyfit_roots(trunc_thres_times_vec, trunc_current_vec-16, length(test_curr), 1e-14)\
[r,k] = polyfit_roots(trunc_thres_times_vec, trunc_current_vec-17, length(test_curr), 1e-14)\
[r,k] = polyfit_roots(trunc_thres_times_vec, trunc_current_vec-17, length(test_curr), 1e-08)\
[r,k] = polyfit_roots(trunc_thres_times_vec, trunc_current_vec-17, length(test_curr), 100)\
[r,k] = polyfit_roots(trunc_thres_times_vec, trunc_current_vec-17, length(test_curr), 0.1)\
[r,k] = polyfit_roots(trunc_thres_times_vec, trunc_current_vec-17, length(test_curr), 0.5)\
[r,k] = polyfit_roots(trunc_thres_times_vec, trunc_current_vec-17, length(test_curr), 0.6)\
1.0e+02 *\
4.676654228275841\
1.0e+02 *  4.676654228275841\
format long\
1.0e+02 *  4.676654228275841\
r(1)\
r(2)\
syms t\
syms X\
func_test = @(t,X) k * symprod((X-r(t)),t,1,length(k));\
func_test\
plot(func_test,[1 2 3])\
syms t\
syms X\
func_test = @(X) k * symprod((X-r(t)),t,1,length(k));\
func_test(100)\
func_test = @(X) k * X^\{length(k)\} * symprod((1-r(t)),t,1,length(k));\
func_test(100)\
func_test = @(X) k * X^(length(k)) * symprod((1-r(t)),t,1,length(k));\
func_test(100)\
syms X\
prod_vec = [ ];\
for I = 1 : length(r)\
prod_vec(1) = 1 * r(I);\
end\
func_test = @(X) k * X^(length(k)) * prod_vec(1);\
func_test(250)\
func_test(450)\
fplot(func_test, [-100 100] , 'b')\
length(k)\
prod_vec = [ ];\
prod_vec(1)\
for I = 1 : length(r)\
prod_vec(1) = prod_vec(1) * (1 - r(I)/X);\
end\
prod_vec = [ ];\
prod_vec(1)=1;\
for I = 1 : length(r)\
prod_vec(1) = prod_vec(1) * (1 - r(I)/X);\
end\
prod_vec = sym(zeros(1,1));\
prod_vec(1)=1;\
syms t\
syms X\
func_test = @(X) k * symprod(X - r(t),t,1,length(r));\
func_test(400)\
func_test = @(X,t) k * symprod(X - r(t),t,1,length(r));\
func_test(100,1)\
func_test = @(X) k * prod(X - r(t),t,1,length(r));\
func_test(400)\
func_test = @(X) k .* prod(X - r(t),t,1,length(r));\
func_test(400)\
prod(X-r(1),X-r(2))\
prod(r(t),t,1,2)\
func_test = @(X) k .* (X-r(1)) .* (X-r(2));\
func_test(400)\
func_test(480)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values] = plotty2(data_set_75);\
func_test(450)\
length(thres_times_vec_values)\
length(trunc_thres_times_vec)\
length(thres_times_vec_values)\
func_test = @(X) k .* (X-r(1)) .* (X-r(2));\
plot(thres_times_vec_values, func_test)\
fplot(func_test, [399.9000 473.8850])\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values] = plotty2(data_set_75);\
figure(12)\
subplot(4,1,1)\
plot(thres_times_vec_values, thres_current_vec_values)\
hold on;\
fplot(func_test, [399.9000 473.8850])\
trunc_thres_times_vec = [ ];\
format long\
for IJK = 1:length(thres_times_vec_values)\
if isequal(mod(IJK,100),0)\
trunc_thres_times_vec(IJK) = thres_times_vec_values(IJK);\
end\
end\
trunc_current_vec = [ ];\
format long\
for IJL = 1:length(thres_current_vec_values)\
if isequal(mod(IJL,100),0)\
trunc_current_vec(IJL) = thres_current_vec_values(IJL);\
end\
end\
trunc_thres_times_vec = transpose(trunc_thres_times_vec);\
trunc_thres_times_vec = nonzeros(trunc_thres_times_vec);\
trunc_current_vec = transpose(trunc_current_vec);\
trunc_current_vec = nonzeros(trunc_current_vec);\
subplot(4,1,2)\
% poly fit with many spikes in data\
[p_1, S , mu] = polyfit(trunc_thres_times_vec, trunc_current_vec , (length(trunc_thres_times_vec)-1)/2);\
% make sure that x to be of length odd because\
% sgf needs the frame length variable to be odd\
x = length(trunc_thres_times_vec);\
if isequal(mod(x,2),0)\
x=x-1;\
% setting x to x+1 is\
% also possible\
end\
sgf = sgolayfilt(trunc_current_vec, length(trunc_thres_times_vec)-4,x)\
% p = polyfit(sgf,length(sgf),length(sgf)-1)\
plot(trunc_thres_times_vec, sgf)\
% hold on;\
subplot(4,1,3)\
plot(linspace(1, (length(trunc_thres_times_vec))/2+1, (length(trunc_thres_times_vec))/2+1), p_1)\
subplot(4,1,4)\
plot(thres_times_vec_values, thres_current_vec_values-16.5)\
ylim([-1 18])\
xlim([390 480])\
figure(12)\
subplot(4,1,1)\
plot(thres_times_vec_values, thres_current_vec_values)\
hold on;\
fplot((func_test)+16.5, [399.9000 473.8850])\
trunc_thres_times_vec = [ ];\
format long\
for IJK = 1:length(thres_times_vec_values)\
if isequal(mod(IJK,100),0)\
trunc_thres_times_vec(IJK) = thres_times_vec_values(IJK);\
end\
end\
trunc_current_vec = [ ];\
format long\
for IJL = 1:length(thres_current_vec_values)\
if isequal(mod(IJL,100),0)\
trunc_current_vec(IJL) = thres_current_vec_values(IJL);\
end\
end\
trunc_thres_times_vec = transpose(trunc_thres_times_vec);\
trunc_thres_times_vec = nonzeros(trunc_thres_times_vec);\
trunc_current_vec = transpose(trunc_current_vec);\
trunc_current_vec = nonzeros(trunc_current_vec);\
subplot(4,1,2)\
% poly fit with many spikes in data\
[p_1, S , mu] = polyfit(trunc_thres_times_vec, trunc_current_vec , (length(trunc_thres_times_vec)-1)/2);\
% make sure that x to be of length odd because\
% sgf needs the frame length variable to be odd\
x = length(trunc_thres_times_vec);\
if isequal(mod(x,2),0)\
x=x-1;\
% setting x to x+1 is\
% also possible\
end\
sgf = sgolayfilt(trunc_current_vec, length(trunc_thres_times_vec)-4,x)\
% p = polyfit(sgf,length(sgf),length(sgf)-1)\
plot(trunc_thres_times_vec, sgf)\
% hold on;\
subplot(4,1,3)\
plot(linspace(1, (length(trunc_thres_times_vec))/2+1, (length(trunc_thres_times_vec))/2+1), p_1)\
subplot(4,1,4)\
plot(thres_times_vec_values, thres_current_vec_values-16.5)\
ylim([-1 18])\
xlim([390 480])\
func_test = @(X) k .* (X-r(1)) .* (X-r(2));\
func_test = @(X) (k .* (X-r(1)) .* (X-r(2)))+16/5;\
func_test = @(X) (k .* (X-r(1)) .* (X-r(2)))+16.5;\
figure(12)\
subplot(4,1,1)\
plot(thres_times_vec_values, thres_current_vec_values)\
hold on;\
fplot((func_test)+16.5, [399.9000 473.8850])\
trunc_thres_times_vec = [ ];\
format long\
for IJK = 1:length(thres_times_vec_values)\
if isequal(mod(IJK,100),0)\
trunc_thres_times_vec(IJK) = thres_times_vec_values(IJK);\
end\
end\
trunc_current_vec = [ ];\
format long\
for IJL = 1:length(thres_current_vec_values)\
if isequal(mod(IJL,100),0)\
trunc_current_vec(IJL) = thres_current_vec_values(IJL);\
end\
end\
trunc_thres_times_vec = transpose(trunc_thres_times_vec);\
trunc_thres_times_vec = nonzeros(trunc_thres_times_vec);\
trunc_current_vec = transpose(trunc_current_vec);\
trunc_current_vec = nonzeros(trunc_current_vec);\
subplot(4,1,2)\
% poly fit with many spikes in data\
[p_1, S , mu] = polyfit(trunc_thres_times_vec, trunc_current_vec , (length(trunc_thres_times_vec)-1)/2);\
% make sure that x to be of length odd because\
% sgf needs the frame length variable to be odd\
x = length(trunc_thres_times_vec);\
if isequal(mod(x,2),0)\
x=x-1;\
% setting x to x+1 is\
% also possible\
end\
sgf = sgolayfilt(trunc_current_vec, length(trunc_thres_times_vec)-4,x)\
% p = polyfit(sgf,length(sgf),length(sgf)-1)\
plot(trunc_thres_times_vec, sgf)\
% hold on;\
subplot(4,1,3)\
plot(linspace(1, (length(trunc_thres_times_vec))/2+1, (length(trunc_thres_times_vec))/2+1), p_1)\
subplot(4,1,4)\
plot(thres_times_vec_values, thres_current_vec_values-16.5)\
ylim([-1 18])\
xlim([390 480])\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values] = plotty2(data_set_75);\
[r,k] = polyfit_roots(trunc_thres_times_vec, trunc_current_vec-17, length(trunc_current_vec-17), 0.6);\
[r,k] = polyfit_roots(trunc_thres_times_vec, trunc_current_vec-17, length(test_curr), 0.6)\
trunc_thres_times_vec = [ ];\
format long\
for IJK = 1:length(thres_times_vec_values)\
if isequal(mod(IJK,100),0)\
trunc_thres_times_vec(IJK) = thres_times_vec_values(IJK);\
end\
end\
[r,k] = polyfit_roots(trunc_thres_times_vec, trunc_current_vec-17, length(test_curr), 0.6)\
trunc_current_vec = [ ];\
format long\
for IJL = 1:length(thres_current_vec_values)\
if isequal(mod(IJL,100),0)\
trunc_current_vec(IJL) = thres_current_vec_values(IJL);\
end\
end\
[r,k] = polyfit_roots(trunc_thres_times_vec, trunc_current_vec-17, length(test_curr), 0.6)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values] = plotty2(data_set_75);\
length(thres_times_vec_values)\
[r,k] = polyfit_roots(trunc_thres_times_vec, trunc_current_vec-17, length(test_curr), 0.1)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values] = plotty2(data_set_75);\
k = 1.580367560788470e-17 - 7.778339146559293e-36i;\
r_1 = 1.0e+02 * (4.022470176549442 + 0.018807525801740i);\
r_2 = 1.0e+02*(4.022470176549442 - 0.018807525801740i);\
r_3 = 1.0e+02*(4.072148179135229 + 0.000000000000000i);\
r_4 = 1.0e+02*(4.182242569533133 + 0.077475723568445i);\
r_5= 1.0e+02*(4.182242569533133 - 0.077475723568445i);\
r_6 = 1.0e+02*(4.381277889026157 + 0.113855365627597i);\
r_7 = 1.0e+02*(4.381277889026157 - 0.113855365627597i);\
r_7= 1.0e+02*(4.737499551366843 + 0.018693863157579i);\
r_8 = 1.0e+02*(4.737499551366843 - 0.018693863157579i);\
r_9 = 1.0e+02*(4.662162959901654 + 0.000000000000000i);\
r_10 = 1.0e+02*(4.548254244005987 + 0.099498637622898i);\
r_11 = 1.0e+02*(4.548254244005987 - 0.099498637622898i);\
func_test = @(X) (k .* (X-r_1) .* (X-r_2) .* (X-r_3) .* (X-r_4) .* (X-r_5) .* (X-r_6) .* (X-r_7) .* (X-r_8) .* (X-r_9) .* (X-r_10) .* (X-r_11));\
func_test(400)\
(-0.016378997604403 - 0.004891017324991i)*(-0.016378997604403 + 0.004891017324991i)\
abs(func_test(400))\
abs(func_test(404))\
abs(func_test(405))\
abs(func_test(406))\
abs(func_test(407))\
abs(func_test(408))\
abs(func_test(411))\
abs(func_test(412))\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values] = plotty2(data_set_75);\
[r,k] = polyfit_roots(trunc_thres_times_vec, trunc_current_vec-17, length(test_curr), 0.2)\
[r,k] = polyfit_roots(trunc_thres_times_vec, trunc_current_vec-17, length(test_curr), 0.1)\
[r,k] = polyfit_roots(trunc_thres_times_vec, trunc_current_vec-17, length(test_curr), 0.2)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values] = plotty2(data_set_75);\
[r,k] = polyfit_roots(trunc_thres_times_vec, trunc_current_vec-17, length(test_curr), 0.1)\
[r,k] = polyfit_roots(trunc_thres_times_vec, trunc_current_vec-19, length(test_curr), 0.2)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values] = plotty2(data_set_75);\
func_test_2 = @(X) (k .* (X-r_1) .* (X-r_2));\
func_test_2 = @(X) ((k .* (X-r_1) .* (X-r_2))+17);\
func_test_2(410)\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values] = plotty2(data_set_75);\
func_test = @(X) ((k .* (X-r_1) .* (X-r_2))+17);\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values] = plotty2(data_set_75);\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values] = plotty2(data_set_75);\\\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values] = plotty2(data_set_75);\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values, thres_times_vec_values, coefficient_array_a] = plotty2(data_set_75);\
[time_vec, trunc_subvec_3_2, subvec_3_1 , poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values, thres_times_vec_values, coefficient_array_a, coefficient_array_b] = plotty2(data_set_75);\
sum_a_array = [ ];\
sum_a_array(1)=0;\
sum_a_array(0)=0;\
(coefficient_array_a(2))^2\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values, thres_times_vec_values, coefficient_array_a, coefficient_array_b, sum_a_array, sum_b_array] = plotty2(data_set_75);\
sum_a_array + sum_b_array\
(1.512366905563609e-05)+(1.123666897053910e+03)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values, thres_times_vec_values, coefficient_array_a, coefficient_array_b,coefficient_array_a_2, coefficient_array_b_2, coefficient_array_a_3, coefficient_array_b_3,  sum_a_array, sum_b_array, sum_a_array_2, sum_b_array_2, sum_a_array_3, sum_b_array_3] = plotty2(data_set_75);\
waitbar()\
%-- 4/19/20, 12:29 PM --%\
waitbar()\
data_set_75=data;\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values, thres_times_vec_values, coefficient_array_a, coefficient_array_b,coefficient_array_a_2, coefficient_array_b_2, coefficient_array_a_3, coefficient_array_b_3,  sum_a_array, sum_b_array, sum_a_array_2, sum_b_array_2, sum_a_array_3, sum_b_array_3] = plotty2(data_set_75);\
format long\
coefficient_array_a_3_square=(coefficient_array_a_3)^2;\
coefficient_array_a_3_square=(coefficient_array_a_3).^2;\
coefficient_array_b_3_square=(coefficient_array_b_3).^2;\
sum(coefficient_array_3_square)\
sum(coefficient_array_a_3_square)\
coefficient_array_a_square=(coefficient_array_a).^2;\
sum(coefficient_array_a_square)\
%-- 4/21/20, 7:26 PM --%\
Table = readtable('First6-Data.csv');\
Table_3 = readtable('PAMData.csv');\
Table_4 = readtable('Last14Data.csv');\
% define positions for terms in partition function\
I = 30;\
JI = 45;\
IJ=20;\
beta = 0.005;\
N = 16;\
N_1 = 13;\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% define possible cases of 3 mismatches\
number_1 = 1;\
number_2 = 2;\
number_3 = 3;\
J=3;\
lambda_mismatch = exp(-10/2);\
lambda_c = 0.025;\
lambda_p = 0.015;\
couplings_ij1 = exp(N-J);\
couplings_ij2 = N-J;\
syms sym1\
syms sym2\
func_triple_A_11_test_3 = @(N,N_1, X_2, mis, lambda_mismatch_1) exp(-(symprod(1./((N- mis) + 2)^3 *  abs(N-sym1), sym1 , 1 , (N-mis)+1) * symprod(2./(mis + 2)^3 *  (1-abs(N-sym2)), sym2 , 1, mis+1)))./(1+(lambda_c * exp(-beta * Table_4\{JI,8\}))  + (N_1 * lambda_mismatch_1 * exp(- beta * lambda_mismatch_1 * (-X_2))));\
func_triple_base1_mat = exp(-1/(1+2)^3 .* (1-(13-1)).*2)./(1+((1/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
func_triple_base1_mat = exp(-1/(1+2)^3 .* (1-(13-1)).*2)./(1+(lambda_c .* exp(-beta .* Table_4\{JI,8\}.*(1/13))))\
func_triple_base1_mat = exp(-1/(1+2)^3 .* (1-(13-1)).*2)./(1+(lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
N_test=15;\
exp(-abs(12,15))\
exp(-abs(12-15))\
exp(-abs(12-15))*2.2037\
exp(-abs(12-15))*2.22544\
func_triple_base1_mat = exp(-1/(1+2)^3 .* (1-(13-1)).*2)./(1+((2/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
func_triple_base1_mat = exp(-1/(1+2)^3 .* (1-(13-1)).*2)./(1+((3/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
func_triple_base1_mat = exp(-1/(1+2)^3 .* (1-(13-1)).*2)./(1+((9/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
func_triple_base1_mat * exp(-abs(9-15))\
func_triple_base1_mat = exp(-1/(1+2)^3 .* (1-(13-1)) .* (1-(13-2)).*(1-(13-3)).*(1-(13-4)).*(1-(13-5)).* (1-(13-6)).* (1-(13-7)).* (1-(13-8)).* (1-(13-9)).* (1-(13-10)).*2)./(1+((10/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
func_triple_base1_mat = exp(-1/(1+2)^3 .* (1-abs(13-1)) .* (1-abs(13-2)).*(1-abs(13-3)).*(1-abs(13-4)).*(1-abs(13-5)).* (1-abs(13-6)).* (1-abs(13-7)).* (1-abs(13-8)).* (1-abs(13-9)).* (1-abs(13-10)).*2)./(1+((10/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
func_triple_base1_mat = exp(-1/(1+2)^3 .* (abs(13-1)) .* (abs(13-2)).*(abs(13-3)).*(abs(13-4)).*(abs(13-5)).* (abs(13-6)).* (abs(13-7)).* (abs(13-8)).* (abs(13-9)).* (abs(13-10)).*2)./(1+((10/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
Table_4\{45,8\}\
-1/(1+2)^3 .* (13-1).* (13-2).*(13-3).*(13-4).*(13-5).* (13-6).* (13-7).* (13-8).* (13-9).* (13-10).*2\
data_set_75=data;\
data_set_76=data;\
data_set_77=data;\
data_set_78=data;\
data_set_79=data;\
data_set_80=data;\
data_set_81=data;\
[data_new, C_max_array, data_new_4] = nasa_test(in1,in2, in3, in4, in5, in6, in7)\
[data_new, C_max_array, data_new_4] = nasa_test(data_set_75,data_set_76, data_set_77, data_set_78, data_set_79, data_set_80, data_set_81)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values, thres_times_vec_values, coefficient_array_a, coefficient_array_b,coefficient_array_a_2, coefficient_array_b_2, coefficient_array_a_3, coefficient_array_b_3,  sum_a_array, sum_b_array, sum_a_array_2, sum_b_array_2, sum_a_array_3, sum_b_array_3] = plotty2(in)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values, thres_times_vec_values, coefficient_array_a, coefficient_array_b,coefficient_array_a_2, coefficient_array_b_2, coefficient_array_a_3, coefficient_array_b_3,  sum_a_array, sum_b_array, sum_a_array_2, sum_b_array_2, sum_a_array_3, sum_b_array_3] = plotty2(data_set_77)\
[data_new, C_max_array, data_new_4] = nasa_test(data_set_75,data_set_76, data_set_77, data_set_78, data_set_79, data_set_80, data_set_81)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values, thres_times_vec_values, coefficient_array_a, coefficient_array_b,coefficient_array_a_2, coefficient_array_b_2, coefficient_array_a_3, coefficient_array_b_3,  sum_a_array, sum_b_array, sum_a_array_2, sum_b_array_2, sum_a_array_3, sum_b_array_3] = plotty2(data_set_77)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values, thres_times_vec_values, coefficient_array_a, coefficient_array_b,coefficient_array_a_2, coefficient_array_b_2, coefficient_array_a_3, coefficient_array_b_3,  sum_a_array, sum_b_array, sum_a_array_2, sum_b_array_2, sum_a_array_3, sum_b_array_3] = plotty2(data_set_80)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values, thres_times_vec_values, coefficient_array_a, coefficient_array_b,coefficient_array_a_2, coefficient_array_b_2, coefficient_array_a_3, coefficient_array_b_3,  sum_a_array, sum_b_array, sum_a_array_2, sum_b_array_2, sum_a_array_3, sum_b_array_3] = plotty2(data_set_77)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, sgf, p_1, thres_current_vec_values, thres_times_vec_values, coefficient_array_a, coefficient_array_b,coefficient_array_a_2, coefficient_array_b_2, coefficient_array_a_3, coefficient_array_b_3,  sum_a_array, sum_b_array, sum_a_array_2, sum_b_array_2, sum_a_array_3, sum_b_array_3] = plotty2(data_set_80)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, coefficient_array_a, coefficient_array_b,coefficient_array_a_2, coefficient_array_b_2, coefficient_array_a_3, coefficient_array_b_3,  sum_a_array, sum_b_array, sum_a_array_2, sum_b_array_2, sum_a_array_3, sum_b_array_3] = plotty2(data_set_80)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(in)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_80)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_80);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_81);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_80);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_77);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_80);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_77);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_80);\
[data_new, C_max_array, data_new_4] = nasa_test(data_set_75,data_set_76, data_set_77, data_set_78, data_set_79, data_set_80, data_set_81)\
C_max = 100 * exp((-(1/1000) * (65)) - (1/5000) * (1411-500));\
C_max\
C_max_1 = C_max\
C_max = func @(Y) 100 * exp((-(1/1000) * (65)) - (1/5000) * (Y-500));\
syms Y\
C_max = func @(Y) 100 * exp((-(1/1000) * (65)) - (1/5000) * (Y-500));\
C_max_array = [100;C_max_1];\
plot([1;2], C_max_array)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_77);\
[data_new, C_max_array, data_new_4] = nasa_test(data_set_75,data_set_76, data_set_77, data_set_78, data_set_79, data_set_80, data_set_81)\
C_max_1_1 = 100 * exp((-(1/100) * (65)) - (1/5000) * (1411-500));\
C_max_1_1\
[data_new, C_max_array, data_new_4] = nasa_test(data_set_75,data_set_76, data_set_77, data_set_78, data_set_79, data_set_80, data_set_81)\
100 * exp((-(1/1000) * (80)) - (1/5000) * (200))\
100 * exp((-(1/100) * (65)) - (1/5000) * (1411-500)\
100 * exp((-(1/100) * (65)) - (1/5000) * (1411-500))\
[data_new, C_max_array, data_new_4] = nasa_test(data_set_75,data_set_76, data_set_77, data_set_78, data_set_79, data_set_80, data_set_81)\
100 * exp((-(1/5) * (65)) - (1/5000) * (1411-500))\
[data_new, C_max_array, data_new_4] = nasa_test(data_set_75,data_set_76, data_set_77, data_set_78, data_set_79, data_set_80, data_set_81)\
C_max_2_1 = 100 * exp((-(1/200) * (80)) - (1/5000) * (200));\
C_max_2 = 100 * exp((-(1/1000) * (80)) - (1/5000) * (200));\
C_max_2_2 = 100 * exp((-(1/300000) * (80)) - (1/50000) * (200));\
C_max_2_2_2 = 100 * exp((-(1/300) * (80)) - (1/300) * (200));\
C_max_array = [100;C_max_2];\
C_max_array_2 = [100;C_max_2_1];\
C_max_array_3_1 = [100;C_max_2_2];\
C_max_array_3_2 = [100; C_max_2_2_2];\
C_max_1 = 100 * exp((-(1/500) * (65)) - (1/5000) * (1411-500));\
C_max_1_1 = 100 * exp((-(1/100) * (65)) - (1/5000) * (1411-500));\
C_max_1_2 = 100 * exp((-(1/2500) * (65)) - (1/2500) * (1411-500));\
C_max_2_2_2 = 100 * exp((-(1/250000) * (65)) - (1/250000) * (1411-500))\
C_max_array_1 = [100;C_max_1];\
C_max_array_2 = [100;C_max_1_1];\
C_max_array_3 = [100; C_max_1_2];\
C_max_array_3_2 = [100; C_max_2_2_2];\
C_max_1\
C_max_1_1\
C_max_1_2\
C_max_2_2_2\
C_max_2\
C_max_2_1\
C_max_2_2\
C_max_2_2_2\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_77)\
%-- 4/23/20, 4:54 PM --%\
data_set_75=data;\
data_set_76=data;\
data_set_77=data;\
data_set_78=data;\
data_set_79=data;\
data_set_80=data;\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_77)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_75)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_77);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_76);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_78);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_75);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_76);\
%-- 4/25/20, 7:28 PM --%\
Table = readtable('First6-Data.csv');\
Table_3 = readtable('PAMData.csv');\
Table_4 = readtable('Last14Data.csv');\
% define positions for terms in partition function\
I = 30;\
JI = 45;\
IJ=20;\
beta = 0.005;\
N = 16;\
N_1 = 13;\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% define possible cases of 3 mismatches\
number_1 = 1;\
number_2 = 2;\
number_3 = 3;\
J=3;\
lambda_mismatch = exp(-10/2);\
lambda_c = 0.025;\
lambda_p = 0.015;\
couplings_ij1 = exp(N-J);\
couplings_ij2 = N-J;\
% hamiltonian_i1 = exp(couplings_ij1 * 1 * exp(lambda_mismatch * (N-J)));\
% hamiltonian_i2 = exp(couplings_ij2 * 1) * exp(lambda_mismatch * (N-J));\
% simulate THIRD case of 2 base pair mismatch,\
% in which we have 2 base pair mismatches, at\
% position of binding N = 13\
func_triple_base1_mat = exp(-1/(1+2)^3 .* (abs(13-1)) .* (abs(13-2)).*(abs(13-3)).*(abs(13-4)).*(abs(13-5)).* (abs(13-6)).* (abs(13-7)).* (abs(13-8)).* (abs(13-9)).* (abs(13-10)).*2)./(1+((10/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
func_triple_base1_mat = exp(-1/(1+2)^3 .* (1-abs(13-1)) .* (1-abs(13-2)).*(1-abs(13-3)).*(1-abs(13-4)).*(1-abs(13-5)).* (1-abs(13-6)).* (1-abs(13-7)).* (1-abs(13-8)).* (1-abs(13-9)).* (1-abs(13-10)).*2)./(1+((10/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
func_triple_base1_mat = exp(-1/(1+2)^3 .* (1-(13-1)).*2)./(1+((2/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
func_triple_base1_mat = exp(-1/(1+2)^3 .* (1-(13-1)).*2)./(1+((3/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
func_triple_base1_mat = exp(-1/(1+2)^3 .* (1-(13-1)).*2)./(1+((9/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
func_triple_base1_mat * exp(-abs(9-15))\
func_triple_base1_mat = exp(-1/(1+2)^3 .* (1-(13-1)) .* (1-(13-2)).*(1-(13-3)).*(1-(13-4)).*(1-(13-5)).* (1-(13-6)).* (1-(13-7)).* (1-(13-8)).* (1-(13-9)).* (1-(13-10)).*2)./(1+((10/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
func_triple_base1_mat = exp((-1/(1+2)^3) .* (1-(13-1)) .* (1-(13-2)).*(1-(13-3)).*(1-(13-4)).*(1-(13-5)).* (1-(13-6)).* (1-(13-7)).* (1-(13-8)).* (1-(13-9)).* (1-(13-10)).*2)./(1+((10/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
func_triple_base1_mat = exp((-1/(1+2)^3) .* (1-(13-1)) .* (1-(13-2)).*(1-(13-3)).*(1-(13-4)).*(1-(13-5)).* (1-(13-6)).* (1-(13-7)).* (1-(13-8)).* (1-(13-9)).* (1-(13-10)).*2)./(1+((9/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
Table_4\{JI,8\}\
func_triple_base1_mat = exp((-1/(1+2)^3) .* (1-(13-1)) .* (1-(13-2)).*(1-(13-3)).*(1-(13-4)).*(1-(13-5)).* (1-(13-6)).* (1-(13-7)).* (1-(13-8)).* (1-(13-9)).* (1-(13-10)).*2)\
(1+((9/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
(-1/(1+2)^3) .* (1-(13-1)) .* (1-(13-2)).*(1-(13-3)).*(1-(13-4)).*(1-(13-5)).* (1-(13-6)).* (1-(13-7)).* (1-(13-8)).* (1-(13-9)).* (1-(13-10)).*2\
exp(ans)\
format long\
exp(ans)\
(-1/(1+2)^3) .* (1-(13-1)) .* (1-(13-2)).*(1-(13-3)).*(1-(13-4)).*(1-(13-5)).* (1-(13-6)).* (1-(13-7)).* (1-(13-8)).* (1-(13-9)).* (1-(13-10)).*2\
(-1/(1+2)^3) .* (1-(13-1)) .* (1-(13-2)).*(1-(13-3)).*(1-(13-4)).*(1-(13-5)).* (1-(13-6)).* (1-(13-7)).* (1-(13-8)).* (1-(13-9)).* (1-(13-10)).*2.*(12/13)\
exp(ans)\
(-1/(1+2)^3) .* (1-(13-1)) .* (1-(13-2)).*(1-(13-3)).*(1-(13-4)).*(1-(13-5)).* (1-(13-6)).* (1-(13-7)).* (1-(13-8)).* (1-(13-9)).* (1-(13-10)).*2.*(1/13)\
exp(ans)\
(-1/(1+2)^3) .* (1-(13-1)) .* (1-(13-2)).*(1-(13-3)).*(1-(13-4)).*(1-(13-5)).* (1-(13-6)).* (1-(13-7)).* (1-(13-8)).* (1-(13-9)).* (1-(13-10)).*2\
(-1/(1+2)^3) .* (1-(13-1)) .* (1-(13-2)).*(1-(13-3)).*(1-(13-4)).*(1-(13-5)).* (1-(13-6)).* (1-(13-7)).* (1-(13-8)).* (1-(13-9)).* (1-(13-10)).*2.*(1/13)\
((-1/(1+2)^3) .* (1-(13-1)) .* (1-(13-2)).*(1-(13-3)).*(1-(13-4)).*(1-(13-5)).* (1-(13-6)).* (1-(13-7)).* (1-(13-8)).* (1-(13-9)).* (1-(13-10)).*2.*(1/13))-((-1/(1+2)^3) .* (1-(13-1)) .* (1-(13-2)).*(1-(13-3)).*(1-(13-4)).*(1-(13-5)).* (1-(13-6)).* (1-(13-7)).* (1-(13-8)).* (1-(13-9)).* (1-(13-10)).*2.*(1/13)\
((-1/(1+2)^3) .* (1-(13-1)) .* (1-(13-2)).*(1-(13-3)).*(1-(13-4)).*(1-(13-5)).* (1-(13-6)).* (1-(13-7)).* (1-(13-8)).* (1-(13-9)).* (1-(13-10)).*2.*(1/13))-((-1/(1+2)^3) .* (1-(13-1)) .* (1-(13-2)).*(1-(13-3)).*(1-(13-4)).*(1-(13-5)).* (1-(13-6)).* (1-(13-7)).* (1-(13-8)).* (1-(13-9)).* (1-(13-10)).*2.*(1/13))\
abs(-2.274461538461538e+05, -2.956800000000000e+06)\
|-2.274461538461538e+05+(-2.956800000000000e+06)|\
-2.274461538461538e+05+(-2.956800000000000e+06)\
((-1/(1+2)^3) .* ((13-1)-1) .* ((13-2)-1).*((13-3)-1).*((13-4)-1).*((13-5)-1).* ((13-6)-1).* ((13-7)-1).* ((13-8)-1).* ((13-9)-1).* ((13-10)-1).*2.*(1/13))\
exp(ans)\
(1+((9/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
(1+((1/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
(1+((2/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
(1+((3/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
((-1/(1+2)^3) .* ((13-1)-1) .* ((13-2)-1).*((13-3)-1).*((13-4)-1).*((13-5)-1).* ((13-6)-1).* ((13-7)-1).* ((13-8)-1).* ((13-9)-1).* ((13-10)-1).*2.*(1/13))\
((-1/(1+2)^3.*(12/13)) .* ((13-1)-1) .* ((13-2)-1).*((13-3)-1).*((13-4)-1).*((13-5)-1).* ((13-6)-1).* ((13-7)-1).* ((13-8)-1).* ((13-9)-1).* ((13-10)-1).*2)\
((-1/(1+2)^3.*(1/13)) .* ((13-1)-1) .* ((13-2)-1).*((13-3)-1).*((13-4)-1).*((13-5)-1).* ((13-6)-1).* ((13-7)-1).* ((13-8)-1).* ((13-9)-1).* ((13-10)-1).*2)\
exp(ans)\
exp(-2.729353846153846e+06)\
((-1/(1+2)^3.*(1/13)) .* ((13-1)-1)) .* ((13-2)-1)).*((13-3)-1).*((13-4)-1).*((13-5)-1).* ((13-6)-1).* ((13-7)-1).* ((13-8)-1).* ((13-9)-1).* ((13-10)-1).*2)\
((-1/(1+2)^3.*(1/13)) .* ((13-1)-1)) .* ((13-2)-1)).*((13-3)-1).*((13-4)-1).*((13-5)-1).* ((13-6)-1).* ((13-7)-1).* ((13-8)-1).* ((13-9)-1).* ((13-10)-1).*2)))\
((-1/(1+2)^3.*(1/13)) .* ((13-1)-1) .* ((13-2)-1).*((13-3)-1).*((13-4)-1).*((13-5)-1).* ((13-6)-1).* ((13-7)-1).* ((13-8)-1).* ((13-9)-1).* ((13-10)-1).*2)))\
((-1/(1+2)^3.*(1/13)) .* ((13-1)-1) .* ((13-2)-1).*((13-3)-1).*((13-4)-1).*((13-5)-1).* ((13-6)-1).* ((13-7)-1).* ((13-8)-1).* ((13-9)-1).* ((13-10)-1).*2)\
((-1/(1+2)^3) .* ((13-1)-1) .* ((13-2)-1).*((13-3)-1).*((13-4)-1).*((13-5)-1).* ((13-6)-1).* ((13-7)-1).* ((13-8)-1).* ((13-9)-1).* ((13-10)-1).*2)\
(10/13).*exp(ans)\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1)).* ((6./13).*((13-6)-1)).* ((7./13).*((13-7)-1)).* ((8./13).*((13-8)-1)).* ((9./13).*((13-9)-1)).* ((10./13).*((13-10)-1)).*2)\
exp(ans)\
exp(ans)/1.03\
(1+((1/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)).*2)\
exp(ans)\
exp(ans)./(1+((1/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
(1+((2/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*2)\
exp(ans)\
exp(ans)./(1+((2/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*2)\
exp(ans)./(1+((2/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
exp(ans)./(1+((3/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*2)\
exp(ans)\
exp(ans)./(1+((4/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1)).*2)\
exp(ans)./(1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1)).*2)\
exp(ans)./(1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))\
exp(ans)./(1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1)).*2)\
((-1/(1+2)^3) .* (((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1))).*2)\
((-1/(1+2)^3) .* (((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1)) .* ((6./13) .*((13-6)-1)).*2)\
((-1/(1+2)^3) .* (((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1)) .* ((6./13) .*((13-6)-1)).*2))\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1)).* ((6./13).*((13-6)-1)).* ((7./13).*((13-7)-1)).* ((8./13).*((13-8)-1)).* ((9./13).*((13-9)-1)).* ((10./13).*((13-10)-1)).*2)\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1)).* ((6./13).*((13-6)-1)).*2)\
exp(ans)\
exp(ans)./(1+((6/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1)).* ((6./13).*((13-6)-1)).* ((7./13).*((13-7)-1)).* ((8./13).*((13-8)-1)).* ((9./13).*((13-9)-1)).* ((10./13).*((13-10)-1)).*2)\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1)).* ((6./13).*((13-6)-1)).* ((7./13).*((13-7)-1)).*2)\
exp(ans)./(1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1)).* ((6./13).*((13-6)-1)).* ((7./13).*((13-7)-1)).*2)\
exp(ans)\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1)).* ((6./13).*((13-6)-1)).* ((7./13).*((13-7)-1)).* ((8./13).*((13-8)-1)).* ((9./13).*((13-9)-1)).* ((10./13).*((13-10)-1)).*2)\
exp(ans)\
exp(ans)./(1+((1.* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
exp(ans)./(1+((1.* lambda_c .* exp(-beta .* Table_4\{JI,8\}))))\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1)).* ((6./13).*((13-6)-1)).* ((7./13).*((13-7)-1)).* ((8./13).*((13-8)-1)).* ((9./13).*((13-9)-1)).* ((10./13).*((13-10)-1)).*2)\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1)).* ((6./13).*((13-6)-1)).* ((7./13).*((13-7)-1)).* ((8./13).*((13-8)-1)).* ((9./13).*((13-9)-1)).* ((10./13).*((13-10)-1))*.((11./13).* ((13-11)-1)) .*((12./13).*((13-12)-1)).*2)\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1)).* ((6./13).*((13-6)-1)).* ((7./13).*((13-7)-1)).* ((8./13).*((13-8)-1)).* ((9./13).*((13-9)-1)).* ((10./13).*((13-10)-1)).*((11./13).* ((13-11)-1)) .*((12./13).*((13-12)-1)).*2)\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1)).* ((6./13).*((13-6)-1)).* ((7./13).*((13-7)-1)).* ((8./13).*((13-8)-1)).* ((9./13).*((13-9)-1)).* ((10./13).*((13-10)-1)).*((11./13).* ((13-11)-1)) .*2)\
exp(ans)\
exp(ans)./(1+((12/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
((-1/(1+2)^3) .* ((1./13).*((13-1)-1)) .* ((2./13).*((13-2)-1)).*((3./13).*((13-3)-1)).*((4./13).*((13-4)-1)).*((5./13).*((13-5)-1)).* ((6./13).*((13-6)-1)).* ((7./13).*((13-7)-1)).* ((8./13).*((13-8)-1)).* ((9./13).*((13-9)-1)).* ((10./13).*((13-10)-1)).*2)\
((-1/(1+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).*((3./13).*((13-3))).*((4./13).*((13-4))).*((5./13).*((13-5))).* ((6./13).*((13-6))).* ((7./13).*((13-7))).* ((8./13).*((13-8))).* ((9./13).*((13-9))).* ((10./13).*(13-10)).*1)\
exp(ans)\
exp(-77.830793708032516\
exp(-77.830793708032516)\
((-1/(10+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).*((3./13).*((13-3))).*((4./13).*((13-4))).*((5./13).*((13-5))).* ((6./13).*((13-6))).* ((7./13).*((13-7))).* ((8./13).*((13-8))).* ((9./13).*((13-9))).* ((10./13).*(13-10)).*1)\
exp(ans)\
exp(ans)/1.02\
((-1/(8+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).*((3./13).*((13-3))).*((4./13).*((13-4))).*((5./13).*((13-5))).* ((6./13).*((13-6))).* ((7./13).*((13-7))).* ((8./13).*((13-8))).*1)\
exp(ans)\
exp(ans)/1.01\
num_1 = ((-1/(1+2)^3) .* ((1./13).*((13-1))) .*1);\
num_1\
meas_1 = exp(num_1)./(1 + ((1/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
num_1 = ((-1/(1+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))) .*1);\
num_1 = ((-1/(1+2)^3) .* ((1./13).*((13-1))) .*1);\
num_1 = ((-1/(1+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))) .*1);\
num_1 = ((-1/(1+2)^3) .* ((1./13).*((13-1))) .*1);\
num_2 = ((-1/(1+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))) .*1);\
meas_2 = exp(num_2)./(1+((2/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
num_2 = ((-1/(2+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))) .*1);\
meas_2 = exp(num_2)./(1+((2/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
num_3 = ((-1/(3+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))) .*1);\
meas_3 = exp(num_3)./(1+((3/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
num_4 = ((-1/(3+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .*1);\
meas_4 = exp(num_4)./(1+((4/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
num_4 = ((-1/(4+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .*1);\
meas_4 = exp(num_4)./(1+((4/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
num_5 = ((-1/(4+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .*1).* ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
meas_5 = exp(num_5)./(1+((4/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5))\
meas_5 = exp(num_5)./(1+((4/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
meas_4-meas_3\
meas_4-meas_5\
num_6 = ((-1/(5+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .*1).* ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
meas_6 = exp(num_6)./(1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5))\
meas_6 = exp(num_6)./(1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
num_7 = ((-1/(5+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .* ((7./13).*((13-7))) .*1).* ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
num_5 = ((-1/(4+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .*1)+ ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
meas_5 = exp(num_5)./(1+((4/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
num_6 = ((-1/(5+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .*1) + ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
meas_6 = exp(num_6)./(1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
num_7 = ((-1/(5+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .* ((7./13).*((13-7))) .*1) + ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
num_7 = ((-1/(6+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .* ((7./13).*((13-7))) .*1) + ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
meas_7 = exp(num_5)./(1+((4/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
meas_7 = exp(num_7)./(1+((6/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
num_8 = ((-1/(7+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .*1) + ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
meas_8 = exp(num_8)./(1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
num_9 = ((-1/(8+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).*1) + ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
meas_9 = exp(num_8)./(1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
meas_9 = exp(num_9)./(1+((8/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
num_10 = ((-1/(9+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))).*1) + ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
meas_10 = exp(num_8)./(1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
meas_10 = exp(num_10)./(1+((8/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
num_11 = ((-1/(10+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))) .* ((11./13).*((13-11))).*1) + ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
meas_11 = exp(num_10)./(1+((8/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
meas_11 = exp(num_11)./(1+((9/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
meas_11 = exp(num_11)./(1+((10/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
num_12 = ((-1/(11+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))) .* ((11./13).*((13-11))).* ((12./13).*((13-12))).*1) + ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
meas_12 = exp(num_12)./(1+((11/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
meas_vec = [meas_1;meas_2;meas_3;meas_4;meas_5;meas_6;meas_7;meas_8;meas_9;meas_10;meas_11;meas_12]\
dist_visits(meas_vec)\
[visit_array] = dist_visits(meas_vec)\
length(meas_vec)\
[visit_array] = dist_visits(meas_vec)\
206/250\
meas_5\
meas_4\
[visit_array] = dist_visits(meas_vec)\
200/250\
[visit_array] = dist_visits(meas_vec)\
num_5 = ((-1/(4+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .*1).* ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
num_5_2 = ((-1/(5+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .*((5./13).*((13-5))) .*1);\
meas_5_2 = exp(num_5_2)./(1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
num_6 = ((-1/(5+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .*1).* ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
num_6_2 = ((-1/(5+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*1).* ((-1/(1+2)^3) .*((6./13).*((13-6)-1)) .*2);\
num_6_2\
meas_6_2 = exp(num_6_2)./((1+((11/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
meas_6_2 = exp(num_6_2)./((1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-2)^3.* (exp(-(25-2)./2)).* exp(-(exp(-(25-2)./2)).* 6))))\
num_6_2 = ((-1/(5+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*1).* ((-1/(1+2)^3) .*((6./13).*((13-6))) .*2);\
meas_6_2 = exp(num_6_2)./((1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-2)^3.* (exp(-(25-2)./2)).* exp(-(exp(-(25-2)./2)).* 6))))\
num_6_2 = ((-1/(5+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*1).* ((-1/(1+2)^3) .*((6./13).*((13-6)-1)) .*2);\
num_6_2\
meas_6_2 = exp(num_6_2)./((1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
num_6 = ((-1/(5+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .*1) + ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
num_6_rev_coupl = ((-1/(5+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .*1) + ((-1/(1+2)^3) .*((5./13).*((13-5)-1)) .*2);\
meas_6 = exp(num_6)./(1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
meas_6_rev_coupl = exp(num_6_rev_coupl)./(1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
num_7 = ((-1/(5+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .* ((7./13).*((13-7))) .*1).* ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
num_7_2 = ((-1/(6+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((7./13).*((13-7)))  .*1).* ((-1/(1+2)^3) .*((6./13).*((13-6)-1)) .*2);\
meas_7_2 = exp(num_7_2)./((1+((6/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
num_8 = ((-1/(7+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .*1) + ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
num_8_2 = ((-1/(7+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .*1) + ((-1/(1+2)^3) .*((6./13).*((13-6)-1)).*2);\
meas_8_2=exp(num_8_2)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
meas_8_2=exp(num_8_2)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6)))\
meas_8_2=exp(num_8_2)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
num_9 = ((-1/(8+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).*1) + ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
num_9_2 = ((-1/(8+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).*1) + ((-1/(1+2)^3) .*((6./13).*((13-6)-1)) .*2);\
meas_9_2 = exp(num_9_2)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
meas_9_2 = exp(num_9_2)./((1+((8/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
num_10 = ((-1/(9+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))).*1) + ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
num_10_2 = ((-1/(9+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))).*1) + ((-1/(1+2)^3) .*((6./13).*((13-6)-1)) .*2);\
meas_10_2 = exp(num_10_2)./((1+((8/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
meas_10_2 = exp(num_10_2)./((1+((9/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
num_11 = ((-1/(10+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))) .* ((11./13).*((13-11))).*1) + ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
num_11_2 = ((-1/(10+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))) .* ((11./13).*((13-11))).*1) + ((-1/(1+2)^3) .*((6./13).*((13-6)-1)) .*2);\
meas_11_2 = exp(num_10_2)./((1+((8/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
meas_11_2 = exp(num_11_2)./((1+((10/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
meas_12 = exp(num_12)./(1+((11/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-1)^3.* (exp(-(25-1)./2)).* exp(-(exp(-(25-1)./2)).* 5)))\
num_12 = ((-1/(11+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((6./13).*((13-6))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))) .* ((11./13).*((13-11))).* ((12./13).*((13-12))).*1) + ((-1/(1+2)^3) .*((5./13).*((13-5))) .*2);\
num_12_2 = ((-1/(11+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))) .* ((11./13).*((13-11))).* ((12./13).*((13-12))).*1) + ((-1/(1+2)^3) .*((6./13).*((13-6)-1)) .*2);\
meas_12_2 = exp(num_12_2)./((1+((10/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
meas_12_2 = exp(num_12_2)./((1+((11/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
meas_vec_2 = [meas_1;meas_2;meas_3;meas_4;meas_5_2;meas_6_2;meas_7_2;meas_8_2;meas_9_2;meas_10_2;meas_11_2;meas_12_2]\
meas_vecx\
meas_vec\
[visit_array_1]=dist_visits(meas_vec)\
[visit_array_2]=dist_visits(meas_vec_2)\
[visit_array_1,visit_array_2]=dist_visits(meas_vec,meas_vec_2)\
0.947546085919188-0.695779683410720\
meas_5\
meas_5_2\
meas_6_2\
num_6_2 = ((-1/(5+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*1).* ((-1/(1+2)^3) .*((6./13).*((13-6)-1)) .*2);\
num_6_3 = ((-1/(6+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))).* ((6./13).*((13-6))) .*1);\
meas_6_2 = exp(num_6_2)./((1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-2)^3.* (exp(-(25-2)./2)).* exp(-(exp(-(25-2)./2)).* 6))))\
meas_6_3 = exp(num_6_3)./((1+((6/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))))\
num_7_2 = ((-1/(6+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((7./13).*((13-7)))  .*1).* ((-1/(1+2)^3) .*((6./13).*((13-6)-1)) .*2);\
num_7_3 = ((-1/(6+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((6./13).*((13-6)))  .*1).* ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2);\
meas_7_2 = exp(num_7_2)./((1+((6/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
meas_7_3 = exp(num_7_3)./((1+((6/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 7))))\
meas_8_2=exp(num_8_2)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
num_8_2 = ((-1/(7+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .*1) + ((-1/(1+2)^3) .*((6./13).*((13-6)-1)).*2);\
num_8_3 = ((-1/(7+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((6./13).*((13-6))) .* ((8./13).*((13-8))) .*1) + ((-1/(1+2)^3) .*((7./13).*((13-7)-1)).*2);\
num_7_3 = ((-1/(6+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((6./13).*((13-6)))  .*1).* ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2);\
num_8_3 = ((-1/(7+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((6./13).*((13-6))) .* ((8./13).*((13-8)))  .*1).* ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2);\
meas_8_3=exp(num_8_3)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 7))))\
meas_8_3=exp(num_8_3)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 7))))\
num_9_2 = ((-1/(8+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).*1) + ((-1/(1+2)^3) .*((6./13).*((13-6)-1)) .*2);\
num_8_3 = ((-1/(7+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((6./13).*((13-6))) .* ((8./13).*((13-8)))  .*1).* ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2);\
num_9_3 = ((-1/(8+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((6./13).*((13-6))) .* ((8./13).*((13-8))).* ((9./13).*((13-9))) .*1).* ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2);\
meas_8_3=exp(num_8_3)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 7))))\
meas_8_3=exp(num_9_3)./((1+((8/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 7))))\
meas_8_3=exp(num_8_3)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 7))))\
meas_9_3=exp(num_9_3)./((1+((8/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 7))))\
num_9_3 = ((-1/(8+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((6./13).*((13-6))) .* ((8./13).*((13-8))).* ((9./13).*((13-9))) .*1).* ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2);\
num_10_3 = ((-1/(9+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((6./13).*((13-6))) .* ((8./13).*((13-8))).* ((9./13).*((13-9))) .* ((10./13).*((13-10))) .*1).* ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2);\
meas_9_3=exp(num_9_3)./((1+((8/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 7))))\
meas_10_3=exp(num_9_3)./((1+((9/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 7))))\
num_10_3 = ((-1/(9+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((6./13).*((13-6))) .* ((8./13).*((13-8))).* ((9./13).*((13-9))) .* ((10./13).*((13-10))) .*1).* ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2);\
num_11_3 = ((-1/(10+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((6./13).*((13-6))) .* ((8./13).*((13-8))).* ((9./13).*((13-9))) .* ((10./13).*((13-10))) .* ((11./13).*((13-11))) .*1).* ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2);\
meas_11_3 = exp(num_11_3)./((1+((9/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 7))))\
meas_11_3 = exp(num_11_3)./((1+((10/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 7))))\
len(meas_vec)\
length(meas_vec)\
meas_12_2 = exp(num_12_2)./((1+((10/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
num_12_2 = ((-1/(11+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))) .* ((11./13).*((13-11))).* ((12./13).*((13-12))).*1) + ((-1/(1+2)^3) .*((6./13).*((13-6)-1)) .*2);\
num_12_3 = ((-1/(11+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((6./13).*((13-6))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))) .* ((11./13).*((13-11))).* ((12./13).*((13-12))).*1) + ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2);\
meas_12_3 = exp(num_12_3)./((1+((11/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 6))))\
meas_12_3 = exp(num_12_3)./((1+((11/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 7))))\
meas_vec_3 = [meas_1;,meas_2;meas_3;meas_4;meas_5;meas_6;meas_7_3;meas_8_3;meas_9_3;meas_10_3;meas_11_3;meas_12_3]\
[visit_array_1,visit_array_2, visit_array_3]=dist_visits(vec1,vec2,vec3)\
[visit_array_1,visit_array_2, visit_array_3]=dist_visits(meas_vec,meas_vec_2,meas_vec_3)\
meas_7_2 = exp(num_7_2)./((1+((6/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
num_7_2 = ((-1/(6+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((7./13).*((13-7)))  .*1).* ((-1/(1+2)^3) .*((6./13).*((13-6)-1)) .*2);\
num_7_4 = ((-1/(7+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))).*((6./13).*((13-6))) .*((7./13).*((13-7)))  .*1);\
meas_7_2 = exp(num_7_2)./((1+((6/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
meas_7_4 = exp(num_7_4)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))))\
num_8_3 = ((-1/(7+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((6./13).*((13-6))) .* ((8./13).*((13-8)))  .*1).* ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2);\
num_8_4 = ((-1/(7+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((6./13).*((13-6))) .* ((7./13).*((13-7)))  .*1).* ((-1/(1+2)^3) .*((8./13).*((13-8)-1)) .*2);\
meas_7_4 = exp(num_7_4)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))))\
meas_8_4 = exp(num_8_4)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 6)))\
num_9_3 = ((-1/(8+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((6./13).*((13-6))) .* ((8./13).*((13-8))).* ((9./13).*((13-9))) .*1).* ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2);\
num_9_4 = ((-1/(8+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((6./13).*((13-6))) .* ((7./13).*((13-7))).* ((9./13).*((13-9))) .*1).* ((-1/(1+2)^3) .*((8./13).*((13-8)-1)) .*2);\
meas_8_4 = exp(num_8_4)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 8)))\
meas_9_4 = exp(num_9_4)./((1+((8/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 8)))\
meas_9_4 = exp(num_9_4)./((1+((8/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))+((25-10)^3.* (exp(-(25-10)./2)).* exp(-(exp(-(25-10)./2)).* 8)))\
meas_9_4 = exp(num_9_4)./((1+((8/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))+((25-8)^3.* (exp(-(25-8)./2)).* exp(-(exp(-(25-8)./2)).* 8)))\
meas_9_4 = exp(num_9_4)./((1+((8/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 8)))\
num_10_4 = ((-1/(9+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((6./13).*((13-6))) .* ((7./13).*((13-7))).* ((9./13).*((13-9))) .*((10./13).*((13-10))) .*1).* ((-1/(1+2)^3) .*((8./13).*((13-8)-1)) .*2);\
meas_10_4 = exp(num_10_4)./((1+((8/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 8)))\
meas_10_4 = exp(num_10_4)./((1+((9/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 8)))\
num_11_4 = ((-1/(10+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((6./13).*((13-6))) .* ((7./13).*((13-7))).* ((9./13).*((13-9))) .*((10./13).*((13-10))).* ((11./13).*((13-11))) .*1).* ((-1/(1+2)^3) .*((8./13).*((13-8)-1)) .*2);\
meas_11_4 = exp(num_11_4)./((1+((9/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 8)))\
meas_11_4 = exp(num_11_4)./((1+((10/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 8)))\
num_12_4 = ((-1/(9+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((6./13).*((13-6))) .* ((7./13).*((13-7))).* ((9./13).*((13-9))) .*((10./13).*((13-10))) .*((11./13).*((13-11))).*((12./13).*((13-12))) .*1).* ((-1/(1+2)^3) .*((8./13).*((13-8)-1)) .*2);\
meas_12_4 = exp(num_12_4)./((1+((10/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 8)))\
meas_12_4 = exp(num_12_4)./((1+((11/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 8)))\
meas_vec_4=[meas_1;meas_2;meas_3;meas_4;meas_5;meas_6;meas_7;meas_8_4;meas_9_4;meas_10_4;meas_11_4;meas_12_4]\
[visit_array_1,visit_array_2, visit_array_3,visit_array_4]=dist_visits(vec1,vec2,vec3,vec4)\
[visit_array_1,visit_array_2, visit_array_3,visit_array_4]=dist_visits(meas_vec,meas_vec_2,meas_vec_3,meas_vec_4)\
meas_vec\
meas_vec_2\
meas_vec_3\
meas_vec_4\
%-- 4/30/20, 3:40 AM --%\
data_set_75=data\
data_set_77=data\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(in)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_75)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_77);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_75);\
thres_times_vec_values\
find(thres_times_vec==450)\
find(thres_times_vec_values==450)\
find(thres_times_vec_values > 450)\
find(thres_times_vec_values >= 450)\
length(find(thres_times_vec_values >= 450))\
length(find(thres_times_vec_values > 450))\
length(find(thres_times_vec_values < 450))\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_75);\
plot(linspace(467,483,483-467),yline(17.3))\
syms x\
y = piecewise(x<-2, -2, -2<x<2, x, x>2, 2);\
fplot(y)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values] = plotty2(data_set_75);\
syms x\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test] = plotty2(data_set_75);\
y = piecewise(400 < x < 450 , func_test , 450 < x < 464, 14, 464 < x < 467 , x , 467 < x < 483, 17.3)\
fplot(y)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test] = plotty2(data_set_75);\
y = piecewise(400 < x < 450 , func_test , 450 < x < 464, 14, 464 < x < 467 , x , 467 < x < 483, 17.3)\
fplot(y)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec] = plotty2(data_set_75);\
f_val_vec\
y = piecewise(400 < x < 450 , f_val_vec , 450 < x < 464, 14, 464 < x < 467 , x , 467 < x < 483, 17.3)\
plot(y)\
fplot(y)\
y = piecewise(400 < x < 450 , ((6.290750139634687e-04 .* (x-(1.0e+02 *4.676654228275841)) .* (x-(1.0e+02*4.069645771724160))+17)) , 450 < x < 464, 14, 464 < x < 467 , x , 467 < x < 483, 17.3)\
fplot(y)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec] = plotty2(data_set_75);\
y = piecewise(400 < x < 450 , ((6.290750139634687e-04) .* (x-(1.0e+02 *4.676654228275841)) .* (x-(1.0e+02*4.069645771724160))+17) , 450 < x < 464, 16.5, 464 < x < 467 , (17.26 - 16.54)/(467.4 - 463)*x, 467 < x < 483, 17.3)\
fplot(y)\
483-467\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec] = plotty2(data_set_75);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec, test_vec , test_vec_2] = plotty2(in)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec, test_vec , test_vec_2] = plotty2(data_set_75)\
tester = [test_vec; test_vec_2]\
tester = [test_vec  test_vec_2]\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec, test_vec , test_vec_2] = plotty2(data_set_75)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2] = plotty2(data_set_75)\
tester = [ f_val_vec_trunc test_vec test_vec_2];\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2] = plotty2(data_set_75)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2,tester] = plotty2(data_set_75)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2,tester] = plotty2(data_set_75);\
x = [thres_times_vec_values ; thres_current_vec_values];\
x = [thres_times_vec_values ; transpose(thres_current_vec_values)];\
y = x(:,1);\
y = x(1,:);\
length(y<450)\
max(y)\
min(y)\
length(find(y<450))\
4938-3345\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2,tester] = plotty2(data_set_75);\
find(x(1,:)==467.4)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2,tester] = plotty2(data_set_75);\
3345 + (4246-3345)\
3345 + (4246-3345) + (4504-4247) + (4938-4506)\
4246 - 3345\
4504 - 4247\
4938-4506\
432+257+901+3345\
4938-4679\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2,tester] = plotty2(data_set_75);\
thres_current_vec_values(4246)\
thres_current_vec_values(4506)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2,tester] = plotty2(data_set_75);\
len(f_val_vec_trunc)\
length(f_val_vec_trunc)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2,tester] = plotty2(data_set_75);\
length(tester)\
length(thres_times_vec_values)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2,tester] = plotty2(data_set_75);\
length(tester)\
length(thres_times_vec_values)\
4938-4670\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2,tester] = plotty2(data_set_75);\
268/2\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2,tester] = plotty2(data_set_75);\
length(tester)\
length(thres_times_vec_values)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2,tester] = plotty2(data_set_75);\
((6.290750139634687e-04 .* (X-(1.0e+02 *4.676654228275841)) .* (X-(1.0e+02*4.069645771724160))+17))\
y = piecewise(400 < x < 450 , ((6.290750139634687e-04) .* (x-(1.0e+02 *4.676654228275841)) .* (x-(1.0e+02*4.069645771724160))+17) , 450 < x < 464, 16.5, 464 < x < 467 , (17.26 - 16.54)/(467.4 - 463)*x, 467 < x < 483, 17.3)\
syms x\
y = piecewise(400 < x < 450 , ((6.290750139634687e-04) .* (x-(1.0e+02 *4.676654228275841)) .* (x-(1.0e+02*4.069645771724160))+17) , 450 < x < 464, 16.5, 464 < x < 467 , (17.26 - 16.54)/(467.4 - 463)*x, 467 < x < 483, 17.3)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2,tester] = plotty2(data_set_75);\
4499-4001\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2,tester] = plotty2(data_set_75);\
length(tester)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2,tester] = plotty2(data_set_75);\
length(tester)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2,tester] = plotty2(data_set_75);\
length(thres_current_vec_values(thres_current_vec_values<450))\
length(trunc_times_vec(trunc_times_vec<450))\
length(trunc_thres_times_vec(trunc_thres_times_vec<450))\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, test_vec , test_vec_2,tester] = plotty2(data_set_75);\
max(coefficient_array_a_3)\
min(coefficient_array_a_3)\
plot(coefficient_array_a_3, linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)))\
plot(coefficient_array_a_3, linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '-o')\
plot(coefficient_array_a_3, linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '.')\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester, coefficient_array_a_test , coefficient_array_b_test , coefficient_array_a_2_test , coefficient_array_b_2_test] = plotty2(data_set_75);\
plot(coefficient_array_a_3, linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '-o')\
max(coefficient_array_a_2_test)\
min(coefficient_array_a_2_test)\
max(coefficient_array_a_2)\
min(coefficient_array_a_2)\
plot(coefficient_array_a_2_test, linspace(1,length(coefficient_array_a_2_test), length(coefficient_array_a_2_test)), '-o')\
figure(10)\
subplot(5,1,1)\
min(coefficient_array_a_3)\
max(coefficient_array_a_3)\
min(coefficient_array_a_2)\
max(coefficient_array_a_2)\
max(coefficient_array_a)\
min(coefficient_array_a)\
min(coefficient_array_b)\
max(coefficient_array_b)\
max(coefficient_array_b_2)\
min(coefficient_array_b_2)\
min(coefficient_array_b_3)\
max(coefficient_array_b_3)\
max(coefficient_array_b_2_test)\
min(coefficient_array_b_2_test)\
figure(1)\
subplot(2,1,1)\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)))\
figure(1)\
subplot(2,1,1)\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '-o')\
title('\{\\color\{blue\} plotting the Fourier cosine coefficient values\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '-o')\
ylabel('number of Fourier coefficient')\
title('\{\\color\{blue\} plotting the Fourier cosine coefficient values\}')\
xlabel('Fourier coefficient value')\
subplot(2,1,2)\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '-o')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
title(\
title('\{\\color\{blue\} plotting the Fourier cosine coefficient values\}')\
title('\{\\color\{blue\} Zoom in of plot above\}')\
min(coefficient_array_b_test)\
max(coefficient_array_b_test)\
max(coefficient_array_a_test)\
min(coefficient_array_a_test)\
min(coefficient_array_a_test_2)\
min(coefficient_array_a_2_test)\
max(coefficient_array_a_2_test)\
figure(1)\
subplot(2,1,1)\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)))\
figure(1)\
subplot(2,1,1)\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '-o')\
title('\{\\color\{blue\} plotting the Fourier cosine coefficient values\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '-o')\
ylabel('number of Fourier coefficient')\
ylabel('number of Fourier coefficient')\
title('\{\\color\{blue\} plotting the Fourier cosine coefficient values\}')\
xlabel('Fourier coefficient value')\
subplot(2,1,2)\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '-o')\
title('\{\\color\{blue\} Zoom in of plot above\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
figure(1)\
subplot(2,1,1)\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)))\
figure(1)\
subplot(2,1,1)\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '.')\
title('\{\\color\{blue\} plotting the Fourier cosine coefficient values\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '.')\
ylabel('number of Fourier coefficient')\
ylabel('number of Fourier coefficient')\
title('\{\\color\{blue\} plotting the Fourier cosine coefficient values\}')\
xlabel('Fourier coefficient value')\
subplot(2,1,2)\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '.')\
title('\{\\color\{blue\} Zoom in of plot above\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
figure(1)\
subplot(2,1,1)\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)))\
figure(1)\
subplot(2,1,1)\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '.')\
title('\{\\color\{blue\} plotting the Fourier cosine coefficient values\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
xlim([0 0.43])\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '.')\
ylabel('number of Fourier coefficient')\
ylabel('number of Fourier coefficient')\
title('\{\\color\{blue\} plotting the Fourier cosine coefficient values\}')\
xlabel('Fourier coefficient value')\
subplot(2,1,2)\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '.')\
title('\{\\color\{blue\} Zoom in of plot above\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
figure(1)\
subplot(2,1,1)\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)))\
figure(1)\
subplot(2,1,1)\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '.')\
title('\{\\color\{blue\} plotting the Fourier cosine coefficient values\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
xlim([0 0.43])\
% plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '.')\
ylabel('number of Fourier coefficient')\
ylabel('number of Fourier coefficient')\
title('\{\\color\{blue\} plotting the Fourier cosine coefficient values\}')\
xlabel('Fourier coefficient value')\
subplot(2,1,2)\
plot(coefficient_array_a_3,linspace(1,length(coefficient_array_a_3), length(coefficient_array_a_3)), '.')\
title('\{\\color\{blue\} Zoom in of plot above\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
plot(coefficient_array_b_3, linspace(1, length(coefficient_array_b_3), length(coefficient_array_b_3)))\
plot(coefficient_array_b_3, linspace(1, length(coefficient_array_b_3), length(coefficient_array_b_3)), '.')\
figure(1)\
subplot(2,1,1)\
plot(coefficient_array_b_3, linspace(1, length(coefficient_array_b_3), length(coefficient_array_b_3)), '.')\
title('\{\\color\{blue\} plotting the Fourier sine coefficient values\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
subplot(2,1,2)\
plot(coefficient_array_b_3, linspace(1, length(coefficient_array_b_3), length(coefficient_array_b_3)), '.')\
title('\{\\color\{blue\} zoom in of the plot above\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
figure(4)\
subplot(2,1,1)\
plot(coefficient_array_b_2, linspace(1, length(coefficient_array_b_2), length(coefficient_array_b_2)), '.')\
title('\{\\color\{blue\} plotting the Fourier sine coefficient values\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
subplot(2,1,2)\
plot(coefficient_array_b_2, linspace(1, length(coefficient_array_b_2), length(coefficient_array_b_2)), '.')\
title('\{\\color\{blue\} zoom in of the plot above\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
max(coefficient_array_b_2)\
min(coefficient_array_b_2)\
figure(4)\
subplot(2,1,1)\
plot(coefficient_array_b_2_test, linspace(1, length(coefficient_array_b_2_test), length(coefficient_array_b_2_test)), '.')\
title('\{\\color\{blue\} plotting the Fourier sine coefficient values\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
subplot(2,1,2)\
plot(coefficient_array_b_2_test, linspace(1, length(coefficient_array_b_2_test), length(coefficient_array_b_2_test)), '.')\
title('\{\\color\{blue\} zoom in of the plot above\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
min(coefficient_array_b_2_test)\
max(coefficient_array_b_2_test)\
figure(4)\
subplot(2,1,1)\
plot(coefficient_array_b_2_test, linspace(1, length(coefficient_array_b_2_test), length(coefficient_array_b_2_test)), '.')\
title('\{\\color\{blue\} plotting the Fourier sine coefficient values\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
subplot(2,1,2)\
plot(coefficient_array_b_2_test, linspace(1, length(coefficient_array_b_2_test), length(coefficient_array_b_2_test)), '.')\
title('\{\\color\{blue\} zoom in of the plot above\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
figure(4)\
subplot(3,1,1)\
plot(coefficient_array_b_2_test, linspace(1, length(coefficient_array_b_2_test), length(coefficient_array_b_2_test)), '.')\
title('\{\\color\{blue\} plotting the Fourier sine coefficient values\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
subplot(3,1,2)\
plot(coefficient_array_b_2_test, linspace(1, length(coefficient_array_b_2_test), length(coefficient_array_b_2_test)), '.')\
title('\{\\color\{blue\} zoom in of the plot above\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
subplot(3,1,3)\
plot(coefficient_array_b_2_test, linspace(1, length(coefficient_array_b_2_test), length(coefficient_array_b_2_test)), '.')\
% title('\{\\color\{blue\} zoom in of the plot above\}')\
xlabel('Fourier coefficient value')\
ylabel('number of Fourier coefficient')\
syms x\
testa = arrayfun(@(x) coefficient_array_a_2 * x)\
testa = arrayfun(@(x) x,coefficient_array_a_2)\
testa = arrayfun(2,coefficient_array_a_2)\
testa = arrayfun(@(x) 2,coefficient_array_a_2)\
func = @(x) sum(testa)\
func(1)\
func(2)\
coefficient_array_a_3[1]\
coefficient_array_a_3(1)\
coefficient_array_a_3(2)\
coefficient_array_a_3(4)\
coefficient_array_a_3(6)\
coefficient_array_a_3(1)\
testa = arrayfun(@(x) cos( pi * x./50),coefficient_array_a_2(1))\
coefficient_array_a_2(1)\
cos(pi./50)\
testa = arrayfun(@(x) cos(2 * pi * x./50),coefficient_array_a_2(1))\
cos(2 * pi * 1./50)\
cos(2 * pi * 1./50) * coefficient_array_a_2(1)\
coefficient_array_a_2(1)\
cos(2 * pi * coefficient_array_a_2(1)./50)\
test_func = @(x) cos( 1 * pi * x./50) *. coefficient_array_a_2(1)\
test_func = @(x) cos( 1 * pi * x./50) .* coefficient_array_a_2(1)\
test_func = @(x) cos( 2 * pi * x./50) .* coefficient_array_a_2(2)\
test_func_2 = @(x) cos( 1 * pi * x./50) .* coefficient_array_a_2(1)\
test_func_total = sum(test_func, test_func_2)\
test_func_total = @(x) test_func + test_func_2\
test_func_total(1)\
test_func_total = @(x) (test_func + test_func_2)\
test_func_total(1)\
X=test_func_total(1)\
test_func_total = @(x) (test_func(x) + test_func_2(x))\
X=test_func_total(1)\
coefficient_array_a_2(1)\
coefficient_array_a_2(2)\
test_func_0 = @(x) 0\
test_func_0(1000)\
test_func_0 = @(x) 0;\
for IK = 1 : length(coefficient_array_a_3)\
test_func_temp = @(x) cos(IK * pi * x./50) .* coefficient_array_a_3(IK);\
test_func_0 = @(x) (test_func_temp(x) + test_func_0(x));\
end\
close()\
%-- 5/4/20, 5:40 AM --%\
test_func_0 = @(x) 0;\
for IK = 1 : length(coefficient_array_a_3)\
fprintf('Processing %d of %d....',IK,length(coefficient_array_a_3))\
test_func_temp = @(x) cos(IK * pi * x./50) .* coefficient_array_a_3(IK);\
test_func_0 = @(x) (test_func_temp(x) + test_func_0(x));\
fprintf('Done.\\n')\
end\
test_func_0(1)\
%-- 5/5/20, 2:03 PM --%\
Table = readtable('First6-Data.csv');\
Table_3 = readtable('PAMData.csv');\
Table_4 = readtable('Last14Data.csv');\
% define positions for terms in partition function\
I = 30;\
JI = 45;\
IJ=20;\
beta = 0.005;\
N = 16;\
N_1 = 13;\
normalization_3_bm = 1/(13+2)^3;\
normalization_3_bmis = 1/(2+2)^3;\
% define possible cases of 3 mismatches\
number_1 = 1;\
number_2 = 2;\
number_3 = 3;\
J=3;\
lambda_mismatch = exp(-10/2);\
lambda_c = 0.025;\
lambda_p = 0.015;\
couplings_ij1 = exp(N-J);\
couplings_ij2 = N-J;\
meas_vec\
meas_vec_2\
meas_vec_3\
meas_vec_4\
length(meas_vec_4)\
format long\
meas_vec_4\
meas_vec_3\
num_12_3 = ((-1/(11+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((6./13).*((13-6))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))) .* ((11./13).*((13-11))).* ((12./13).*((13-12))).*1) + ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2);\
meas_12_3 = exp(num_12_3)./((1+((11/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 6))))\
num_13_3 = ((-1/(11+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((6./13).*((13-6))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))) .* ((11./13).*((13-11))).* ((12./13).*((13-12))).*1) + ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2);\
num_13_3 = ((-1/(11+2)^3) .* ((((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((6./13).*((13-6))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))) .* ((11./13).*((13-11))).* ((12./13).*((13-12))) .*1) + (13 .* 1)) + ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2)\
num_13_3 = ((-1/(11+2)^3) .* ((((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((6./13).*((13-6))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))) .* ((11./13).*((13-11))).* ((12./13).*((13-12))) .*1) + (13 .* 1)) + ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2))\
num_12_3\
meas_13_3 = exp(num_13_3)./((1+((11/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 6))))\
meas_13_3 = exp(num_13_3)./((1+((12/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 6))))\
meas_vec_2\
Table\{11\}\
Table(11)\
Table\{3,11\}\
Table\{:,11\}\
max(Table\{:,11\})\
min(Table\{:,11\})\
length(Table\{:,11\})\
plot(Table\{:,11\} , linspace(1 , 15803, 15803))\
plot( linspace(1 , 15803, 15803), Table\{:,11\})\
max(Table\{:,11\}) + min(Table\{:,11\})\
max(Table\{:,11\}) - min(Table\{:,11\})\
num_13_3 = ((-1/(11+2)^3) .* ((((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((6./13).*((13-6))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))) .* ((11./13).*((13-11))).* ((12./13).*((13-12))) .*1) + (13 .* 1)) + ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2))\
max(Table\{:,8\})\
min(Table\{:,8\})\
plot( linspace(1 , 15803, 15803), Table\{:,8\})\
figure(1)\
subplot(2,1,1)\
plot( linspace(1 , 15803, 15803), Table\{:,8\})\
title('SK growth rate')\
subplot(2,1,2)\
plot( linspace(1 , 15803, 15803), Table\{:,11\})\
title('TK growth rate')\
max(Table\{:,8\})-min(Table\{:,8\})\
var = max(Table\{:,8\})-min(Table\{:,8\})\
meas_13_3 = exp(num_13_3)./((1+((12/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 6))))\
meas_13_3 = exp(num_13_3)./((1+((12/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+ ( (Table\{JI, 8\})./var .* exp(-beta .* Table\{JI,10\}))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 6))))\
(Table\{JI, 8\})./var\
meas_13_3 = exp(num_13_3)./((1+((12/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+ ( (Table\{JI, 8\})./var .* lambda_c .* exp(-beta .* Table\{JI,10\}))+((25-7)^3.* (exp(-(25-7)./2)).* exp(-(exp(-(25-7)./2)).* 6))))\
meas_12_3\
meas_vec_3\
meas_vec_2\
num_12_2 = ((-1/(11+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))) .* ((11./13).*((13-11))).* ((12./13).*((13-12))).*1) + ((-1/(1+2)^3) .*((6./13).*((13-6)-1)) .*2);\
num_13_2 ((-1/(11+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))) .* ((11./13).*((13-11))).* ((12./13).*((13-12))).*1) + ((-1/(1+2)^3) .*((6./13).*((13-6)-1)) .*2);\
num_13_2 =((-1/(11+2)^3) .* (((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))) .* ((11./13).*((13-11))).* ((12./13).*((13-12))).*1) + (13)) + ((-1/(1+2)^3) .*((6./13).*((13-6)-1)) .*2);\
meas_12_2 = exp(num_12_2)./((1+((10/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
meas_13_2 = exp(num_13_2)./((1+((10/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
meas_13_2 = exp(num_13_2)./((1+((11/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
meas_13_2 = exp(num_13_2)./((1+((11/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+ ((Table\{JI, 8\})./var .* lambda_c .* exp(-beta .* Table\{JI,10\})  ) +((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
meas_vec_3 = [ meas_vec_3 meas_13_3]\
meas_vec_3 = [ meas_vec_3 ; meas_13_3]\
num_13_2\
[visit_array_1] = sing_visits(meas_vec_3)\
%-- 5/6/20, 3:46 AM --%\
data_set_22 = data;\
data_set_24 = data;\
data_set_26 = data;\
data_set_28 = data;\
data_set_30 = data;\
data_set_32 = data;\
data_set_34 = data;\
data_set_36 = data;\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(in)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_22)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_22);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_24);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_22);\
[data_new, C_max_array, data_new_4] = nasa_test(data_set_22,data_set_24, data_set_26, data_set_28, data_set_30, data_set_32, data_set_34, data_set_36)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_22);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_24);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_26);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_28);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_30);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_32);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_34);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_36);\
data_set_23=data;\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_23);\
data_set_25=data;\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_25);\
data_set_27=data;\
data_set_29=data;\
data_set_31=data;\
data_set_33=data;\
data_set_35=data;\
[data_new, C_max_array, data_new_4] = nasa_test(data_set_23,data_set_25, data_set_27, data_set_29, data_set_31, data_set_33, data_set_35, data_set_36)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_25);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_27);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_29);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_31);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_33);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_35);\
data_set_4_37=data;\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_4_37);\
data_set_4_38=data;\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_4_38);\
data_set_4_39=data;\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_4_39);\
data_set_4_40=data;\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_4_40);\
data_set_4_41=data;\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_4_41);\
[data_new, C_max_array, data_new_4] = nasa_test(data_set_4_37,data_set_4_38,data_set_4_39,data_set_4_40,data_set_23,data_set_25, data_set_27, data_set_29)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_4_37);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_4_38);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_4_39);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_4_40);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_4_41);\
[data_new, C_max_array, data_new_4] = nasa_test(data_set_4_37,data_set_4_38,data_set_4_39,data_set_4_40,data_set_4_41,data_set_25, data_set_27, data_set_29)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_4_41);\
data_5_63=data;\
data_5_64=data;\
data_5_67=data;\
data_5_68=data;\
data_5_69=data;\
data_5_71=data;\
data_5_72=data;\
data_5_73=data;\
data_5_74=data;\
[data_new, C_max_array, data_new_4] = nasa_test(data_set_4_37,data_set_4_38,data_set_4_39,data_set_4_40,data_set_23,data_set_25, data_set_27, data_set_29)\
[data_new, C_max_array, data_new_4] = nasa_test(data_set_5_63,data_set_5_64,data_set_5_67,data_set_5_68,data_set_5_69,data_set_5_71, data_set_5_71, data_set_5_72)\
[data_new, C_max_array, data_new_4] = nasa_test(data_5_63,data_5_64,data_5_67,data_5_68,data_5_69,data_5_71, data_5_71, data_5_72)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_set_4_41);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_5_63);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_5_64);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_5_67);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_5_68);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_5_67);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_5_68);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_5_69);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_5_71);\
[data_new, C_max_array, data_new_4] = nasa_test(data_5_63,data_5_64,data_5_67,data_5_68,data_5_69,data_5_71, data_5_71, data_5_72)\
[data_new, C_max_array, data_new_4] = nasa_test(data_5_63,data_5_64,data_5_67,data_5_68,data_5_69,data_5_71, data_5_72, data_5_73)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_5_72);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_5_73);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_5_74);\
[data_new, C_max_array, data_new_4] = nasa_test(data_5_74,data_5_64,data_5_67,data_5_68,data_5_69,data_5_71, data_5_72, data_5_73)\
data_6_75=data;\
data_6_76=data;\
data_6_77=data;\
data_6_78=data;\
data_6_79=data;\
data_6_80=data;\
data_6_81=data;\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_5_72);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_6_75);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_6_76);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_6_77);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_6_78);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_6_75);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_6_76);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_6_7);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_6_77);\
[data_new, C_max_array, data_new_4] = nasa_test(data_5_74,data_5_64,data_5_67,data_5_68,data_5_69,data_5_71, data_5_72, data_5_73)\
[data_new, C_max_array, data_new_4] = nasa_test(data_6_78,data_6_79,data_6_80,data_6_81,data_5_69,data_5_71, data_5_72, data_5_73)\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_6_78);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_6_79);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_6_78);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_6_79);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_6_78);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_6_79);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_6_80);\
[poly_trunc_subvec, time_poly_trunc_subvec, poly_trunc_subvec_2, time_poly_trunc_subvec_2, trunc_current_vec, trunc_thres_times_vec, thres_current_vec_values, thres_times_vec_values, func_test, f_val_vec_trunc, tester] = plotty2(data_6_81);\
(1/1000)-(1/500)\
(1/950)-\
(1/950)-(1/600)\
C_3_22 = exp((1/1000)*(-200)+((1/500)*(-400)))\
C_3_22 = exp((1/2000)*(-200)+((1/1500)*(-400)))\
C_3_22_2 = exp((1/1800)*(-200)+((1/1200)*(-400)))\
C_3_22_exp = exp((1/2000)*(-200)+((1/1500)*(-400))) + exp((1/500)*(-200))\
C_3_22_exp = exp((1/2000)*(-200)+((1/1500)*(-400))) - exp((1/500)*(-200))\
exp((1/500)*(-200))\
C_3_22_exp = exp((1/2000)*(-200)+((1/1500)*(-400))) - exp((1/5000)*(-200))\
exp((1/5000)*(-200))\
C_3_22_exp = abs(exp((1/2000)*(-200)+((1/1500)*(-400))) - exp((1/5000)*(-200)))\
C_3_22_exp = abs(exp((1/2000)*(-200)+((1/1500)*(-400))) - exp((1/8000)*(-200)))\
C_3_22_exp = abs(exp((1/2000)*(-200)+((1/1500)*(-400))) - exp((1/9000)*(-200)))\
C_3_22_exp = abs(exp((1/2000)*(-200)+((1/1500)*(-400))) - exp((1/10000)*(-200)))\
C_3_22_2 = exp((1/1800)*(-200)+((1/1200)*(-400)))\
C_3_22_2_exp = exp((1/1800)*(-200)+((1/1200)*(-400))) - exp((1/10000)(-200))\
C_3_22_2_exp = exp((1/1800)*(-200)+((1/1200)*(-400))) - exp((1/10000)*(-200))\
C_3_22_2_exp = abs(exp((1/1800)*(-200)+((1/1200)*(-400))) - exp((1/10000)*(-200)))\
C_3_22_2_exp = abs(exp((1/1800)*(-200)+((1/1200)*(-400))) - exp((1/15000)*(-200)))\
C_3_22_2_exp = abs(exp((1/1800)*(-200)) - exp((1/10000)*(-200)))\
exp((1/1800)*200)\
exp(((1/1800)*(200)) + ((1/1200)*(400)))\
exp(-(1/1800)*200)\
exp(-((1/1800)*(200)) + ((1/1200)*(400)))\
exp(((1/1800)*(-200)) + ((1/1200)*(-400)))\
exp(((1/2000)*(-200)))\
C_3_22_2_exp_1 = abs(exp((1/1800)*(-200)) - exp((1/15000)*(-200)))\
C_3_22_2_exp_1 = abs(exp((1/1800)*(-200)) + exp((1/15000)*(-200)))\
exp((1/1800)*(-200)) - exp((1/15000)*(-200))\
exp((1/1800)*(-200)) + exp((1/15000)*(-200))\
exp((1/15000)*(-200))\
exp((1/1800)*(-200)) * exp((1/15000)*(-200))\
exp((1/1800)*(-200)+((1/1200)*(-400)))) * exp((1/15000)*(-400))\
exp((1/1800)*(-200)+((1/1200)*(-400))) * exp((1/15000)*(-400))\
exp((1/2000)*(-200)+((1/1500)*(-400))) * exp((1/8000)*(-400))\
exp((1/1800)*(-200)+((1/1200)*(-400))) * exp((1/8000)*(-400))\
exp((1/1800)*(-200)) * exp((1/10000)*(-200))\
exp((1/2000)*(-200)) * exp((1/10000)*(-200))\
exp((1/2000)*(-200)) * (200)200^2\
exp((1/2000)*(-200)) * (200)*200^2\
exp((1/2000)*(-200)) * (200)*(1/2)^2\
exp((1/2000)*(-200)) + (200)*(1/2)^2\
exp((1/2000)*(-200)) * (-200)^2/2\
exp((1/2000)*(-200)) * (1+(-200)/1 + (-200)^2/2)\
exp(((1/950)*(-80))+((1/700)*(-180))+((1/600)*(-300)))\
exp(((1/1500)*(-80))+((1/1000)*(-180))+((1/500)*(-300)))\
exp(((1/1500)*(-80))+((1/1000)*(-180))+((1/800)*(-300)))\
exp(((1/1500)*(-80))+((1/1000)*(-180))+((1/800)*(-300))) * exp((1/8000)*(-300))\
exp(((1/1500)*(-80))+((1/1000)*(-180))+((1/800)*(-300))) * exp((1/5000)*(-300))\
exp(((1/1500)*(-80)))* exp((1/5000)*(-80))\
exp(((1/1500)*(-80)))\
exp(((1/1500)*(-80)))* exp((1/8000)*(-80))\
exp(((1/1500)*(-80)))* exp((1/20000)*(-80))\
exp(((1/1500)*(-80)))* exp((1/10000)*(-80))\
exp(((1/950)*(-80)))* exp((1/10000)*(-80))\
exp(((1/1500)*(-80))+((1/1000)*(-180))+((1/800)*(-300))) * exp((1/5000)*(-300))\
exp(((1/1500)*(-80))+((1/700)*(-180))) * exp((1/5000)*(-300)+((1/3500)))\
exp(((1/950)*(-80))+((1/1000)*(-180))) * exp((1/5000)*(-300)+((1/3500)))\
exp(((1/950)*(-80))+((1/1000)*(-180)) + ((1/800)*-300)) * exp((1/5000)*(-300)+((1/3500)*-180)+((1/2000) * -300 ))\
exp(((1/950)*(-80))+((1/1000)*(-180))) * exp((1/5000)*(-300)+((1/3500)*-180))\
exp(((1/1500)*(-80))+((1/1000)*(-180))+((1/800)*(-300))) * exp((1/5000)*(-300))\
exp(((1/1500)*(-80))+((1/700)*(-180))) * exp((1/5000)*(-300)+((1/3500)))\
exp(((1/1500)*(-80))+((1/700)*(-180))) * exp((1/5000)*(-300)+((1/3500)*-180))\
exp(((1/1500)*(-80))+((1/1000)*(-180)) + ((1/800)*-300)) * exp((1/5000)*(-300)+((1/3500)*-180)+((1/2000) * -300 ))\
exp(((1/950)*(-80))+((1/700)*(-180)) + ((1/600)*-300)) * exp((1/5000)*(-300)+((1/3500)*-180)+((1/2000) * -300 ))\
exp(((1/1500)*(-80))+((1/1000)*(-180)) + ((1/800)*-300)) * exp((1/5000)*(-300)+((1/3500)*-180)+((1/2000) * -300 ))\
exp(((1/1500)*(-50))+((1/500)*(-140)) + ((1/300)*-330))\
exp(((1/1500)*(-50))+((1/1000)*(-140)) + ((1/300)*-330))\
exp(((1/1500)*(-50))+((1/1300)*(-140)) + ((1/500)*-330))\
exp(((1/1300)*(-50))+((1/1100)*(-140)) + ((1/450)*-330))\
exp(((1/1300)*(-50))) * exp(-50 * (1/5000 ))\
exp(((1/1500)*(-50))) * exp(-50 * (1/5000 ))\
exp(((1/1300)*(-50))+((1/1100)*(-140))) * exp((-50 *(1/5000)) + (-140 *(1/8000)) ) )\
exp(((1/1300)*(-50))+((1/1100)*(-140))) * exp((-50 *(1/5000)) + (-140 *(1/8000)))\
exp(((1/1500)*(-50))+((1/1300)*(-140))) * exp((-50 *(1/5000)) + (-140 *(1/8000)))\
exp(((1/1500)*(-50))+((1/1300)*(-140))+ ((1/500 ) *-330) ) * exp((-50 *(1/5000)) + (-140 *(1/8000)) + (-330 *(1/3500 ) ) )\
exp(((1/1300)*(-50))+((1/1100)*(-140))+ ((1/450) *-330) ) * exp((-50 *(1/5000)) + (-140 *(1/8000)) + (-330 *(1/3500 ) ) )\
exp(((1/500)*(-130))+((1/250)*(-520)))\
exp(((1/800)*(-130))+((1/250)*(-520)))\
exp(((1/1100)*(-130))+((1/250)*(-520)))\
exp(((1/1100)*(-130))+((1/130)*(-520)))\
exp(((1/1100)*(-130))+((1/80)*(-520)))\
exp(((1/1400)*(-130))+((1/250)*(-520)))\
exp(((1/1400)*(-130))) * exp(-520*(1/10000) )\
exp(((1/1100)*(-130))) * exp(-520*(1/10000) )\
exp(((1/1100)*(-130))+((1/80)*(-520))) * exp((-130*(1/10000)))\
exp(((1/1100)*(-130))) * exp((-130*(1/10000)))\
exp(((1/1400)*(-130))) * exp((-130*(1/10000)))\
exp(((1/1100)*(-130))+((1/80)*(-520))) * exp((-130*(1/10000)) + (-520*(1/8000)))\
exp(((1/1100)*(-130))+((1/300)*(-520))) * exp((-130*(1/10000)) + (-520*(1/8000)))\
exp(((1/1100)*(-130))+((1/300)*(-520))) * exp((-130*(1/10000)) + (-520*(1/5000)))\
exp(((1/1400)*(-130))+((1/80)*(-520))) * exp((-130*(1/10000)) + (-520*(1/5000)))\
exp(((1/800)*(-130))+((1/250)*(-520))) * exp((-130*(1/10000)) + (-520*(1/5000)))\
exp(((1/1500)*(-170))+((1/1000)*(-150)) + (1/280 * -420 ))\
exp(((1/1100)*(-170))+((1/800)*(-150)) + (1/350 * -420 ))\
exp(((1/1700)*(-170))+((1/900)*(-150)) + (1/450 * -420 ))\
exp((1/1000 * -120) + (1/400 * -370 ))\
exp((1/1100 * -120) + (1/300 * -370 ))\
exp(((1/1100)*(-170))+((1/800)*(-150)) + (1/350 * -420 ))\
exp(((1/1500)*(-170))+((1/700)*(-150)) + (1/250 * -420 ))\
exp((1/1000 * -120) + (1/400 * -370 ))\
exp((1/1000 * -120)) * exp(-120 /10000)\
exp((1/1100 * -120)) * exp(-120 /10000)\
exp((1/1000 * -120) + (1/400 * -370 )) * exp((-120/10000)+(-370/8000 ) )\
exp((1/1100 * -120) + (1/300 * -370 )) * exp((-120/10000)+(-370/8000 ) )\
exp(((1/1100)*(-170))+((1/800)*(-150)) + (1/350 * -420 ))\
exp(((1/1500)*(-170))+((1/700)*(-150)) + (1/250 * -420 ))\
exp(((1/1500)*(-170))) * exp(-280/5000)\
exp(((1/1100)*(-170))) * exp(-280/5000)\
exp(((1/1100)*(-170)) + (-150/800)) * exp((-280/5000)+(-480/8000))\
exp(((1/1500)*(-170)) + (-150/700)) * exp((-280/5000)+(-480/8000))\
exp(((1/1500)*(-170)) + (-150/700)) * exp((-280/5000)+(-150/8000))\
exp(((1/1100)*(-170)) + (-150/800)) * exp((-280/5000)+(-150/8000))\
exp(((1/1100)*(-170)) + (-150/800) + (-420/250)) * exp((-280/5000)+(-150/8000)+(-420/3500))\
exp(((1/1500)*(-170)) + (-150/700) + (-420/250)) * exp((-280/5000)+(-150/8000)+(-420/3500))\
exp(((1/1100)*(-170)) + (-150/800) + (-420/350)) * exp((-280/5000)+(-150/8000)+(-420/3500))\
exp((-130/1500)+(-430/540))\
exp((-130/1200)+(-430/350))\
exp((-130/1200)) * exp(-130/9000)\
exp((-130/1500)) * exp(-130/9000)\
exp((-130/1500)+(-430/540)) * exp((-130/9000)+(-430/7500))\
exp((-130/1200)+(-430/350)) * exp((-130/9000)+(-430/7500))\
%-- 5/11/20, 8:39 AM --%\
format long\
sum(coefficient_array_a_3^2)]\
sum(coefficient_array_a_3^2)\
sum(coefficient_array_a_3.^2)\
sum(coefficient_array_a_2.^2)\
sum(coefficient_array_a.^2)\
sum(coefficient_array_b_2_test.^2)\
sum(coefficient_array_b_test.^2)\
sum(coefficient_array_b_3.^2)\
sum(coefficient_array_b_2.^2)\
sum(coefficient_array_b_1.^2)\
sum(coefficient_array_b.^2)\
exp((-130/1200)+(-430/350)) * exp((-130/9000)+(-430/7500))\
exp((-50/2000)+(-170/1700)+(-370/450))\
exp((-50/1500)+(-170/1300)+(-370/350))\
exp((-50/1500))*exp(-50/5000)\
exp((-50/2000))*exp(-50/5000)\
exp((-50/2000)+(-170/1300))*exp((-50/5000)+(-170/8000 ))\
exp((-50/1500)+(-170/1300))*exp((-50/5000)+(-170/8000 ))\
exp((-50/1500)+(-170/1300)+(-370/350)) * exp((-50/5000)+(-170/8000 ) +(-370/3500))\
exp((-50/2000)+(-170/1700)+(-370/370)) * exp((-50/5000)+(-170/8000 ) +(-370/3500))\
exp((-30/1800)+(-70/1700)+(-360/390))\
exp((-30/1500)+(-70/1200)+(-360/350))\
exp((-30/1500))*exp(-30/5000)\
exp((-30/1800))*exp(-30/5000)\
exp((-30/1800)+(-70/1700))*exp((-30/5000)+(-70/8000 ))\
exp((-30/1500)+(-70/1q00))*exp((-30/5000)+(-70/8000 ))\
exp((-30/1500)+(-70/1200))*exp((-30/5000)+(-70/8000 ))\
xexp((-30/1800)+(-70/1700)+(-360/390))*exp((-30/5000)+(-70/8000 ))\
exp((-30/1800)+(-70/1700)+(-360/390))*exp((-30/5000)+(-70/8000 )+(-360/3500))\
exp((-30/1500)+(-70/1200)+(-360/390))*exp((-30/5000)+(-70/8000 )+(-360/3500))\
exp((-30/1800)+(-120/1500)+(-390/410))\
exp((-30/1500)+(-120/1200)+(-390/310))\
exp((-30/1500))\
exp((-30/1500))*exp((-30/5000)+(-120/8000)+(-390/3500))\
exp((-30/1500))*exp((-30/5000))\
exp((-30/1800))*exp((-30/5000))\
exp((-30/1500)+(-120/1200))*exp((-30/5000)+(-120/8000))\
exp((-30/1800)+(-120/1500))*exp((-30/5000)+(-120/8000))\
exp((-30/1500)+(-120/1200)+(-390/310))*exp((-30/5000)+(-120/8000)+(-390/3500))\
exp((-30/1500)+(-120/1200)+(-390/410))*exp((-30/5000)+(-120/8000)+(-390/3500))\
exp((-70/1800)+(-150/1300)+(-350/400))\
exp((-70/1500)+(-150/1100)+(-350/200))\
exp((-80/1800)+(-200/1400)+(-380/400))\
exp((-80/2000)+(-200/1800)+(-380/600))\
exp((-80/2000)) * exp(-80/5000)\
exp((-80/1800)) * exp(-80/5000)\
exp((-80/1800)+(-1500/200)) * exp((-80/5000)+(-200/8000))\
exp((-80/1800)+(-1500/200)) * exp((-80/5000)+(-200/3000))\
exp((-80/1800)+(-200/1500)) * exp((-80/5000)+(-200/3000))\
exp((-80/2000)+(-200/1800)) * exp((-80/5000)+(-200/3000))\
exp((-80/2000)+(-200/1800)+(-380/600)) * exp((-80/5000)+(-200/3000)+(-380/4500))\
exp((-80/1800)+(-200/1500)+(-380/400)) * exp((-80/5000)+(-200/3000)+(-380/4500))\
exp((-30/2000)+(-140/1700)+(-450/250))\
exp((-30/2000)+(-140/1700)+(-450/550))\
exp((-30/1800)+(-140/1500)+(-450/500))\
exp((-30/1800))*exp(-(/\
exp((-30/1800))*exp(-(350/6000))\
exp((-30/2000))*exp(-(350/6000))\
exp((-30/2000)+(-140/1500))*exp(-(350/6000)+(-140/7000))\
exp((-30/1800)+(-140/1500))*exp(-(350/6000)+(-140/7000))\
exp((-30/2000)+(-140/1700))*exp(-(350/6000)+(-140/7000))\
exp((-30/2000)+(-140/1700)+(-450/550))*exp(-(350/6000)+(-140/7000)+(-680/4500))\
exp((-30/1800)+(-140/1500)+(-450/500))*exp(-(350/6000)+(-140/7000)+(-680/4500))\
exp((-70/2000)+(-140/1700)+(-400/450))\
exp((-70/1800)+(-140/1600)+(-400/40))\
exp((-70/1800)+(-140/1600)+(-400/400))\
exp((-70/1800))*exp(-350/6000)\
exp((-70/2000))*exp(-350/6000)\
exp((-70/1800)+(-140/1600))*exp(-(580/7000))\
exp((-70/2000)+(-140/1700))*exp(-(580/7000))\
exp((-70/2000)+(-140/1700))*exp(-(580/7000)+(-140/7000))\
exp((-70/1800)+(-140/1600))*exp(-(580/7000)+(-140/7000))\
exp((-70/1800)+(-140/1600)+(-400/400))*exp(-(580/7000)+(-140/7000)+(-400/4500/))\
exp((-70/1800)+(-140/1600)+(-400/400))*exp(-(580/7000)+(-140/7000)+(-400/4500))\
exp((-70/2000)+(-140/1700)+(-400/450))*exp(-(580/7000)+(-140/7000)+(-400/4500))\
exp((-60/2000)+(-130/1500)+(-430/450))\
exp((-60/1800)+(-130/1300)+(-430/400))\
exp((-60/1800))*exp(-350/6000)\
exp((-60/2000))*exp(-350/6000)\
exp((-60/2000)+(-130/1300))*exp((-350/6000)+(-430/7000)\
exp((-60/2000)+(-130/1300))*exp((-350/6000)+(-430/7000))\
exp((-60/2000)+(-130/1500))*exp((-350/6000)+(-430/7000))\
exp((-60/1800)+(-130/1500))*exp((-350/6000)+(-430/7000))\
exp((-60/1800)+(-130/1500)+(-430/450))*exp((-350/6000)+(-430/4500)+(-130/7000))\
exp((-60/2000)+(-130/1500)+(-430/400))*exp((-350/6000)+(-430/4500)+(-130/7000))\
exp((-60/1800)+(-130/1500))*exp((-350/6000)+(-130/7000))\
exp((-60/2000)+(-130/1500))*exp((-350/6000)+(-130/7000))\
%-- 6/2/20, 12:39 PM --%\
meas_vec_3 = [ meas_vec_3 ; meas_13_3]\
meas_vec_3 = [ meas_vec_3 ; meas_13_3]\
meas_vec_2\
meas_vec_2 = [meas_1;meas_2;meas_3;meas_4;meas_5_2;meas_6_2;meas_7_2;meas_8_2;meas_9_2;meas_10_2;meas_11_2;meas_12_2]\
meas_5_2 = exp(num_5_2)./(1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\})))\
meas_6_2 = exp(num_6_2)./((1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-2)^3.* (exp(-(25-2)./2)).* exp(-(exp(-(25-2)./2)).* 6))))\
meas_vec_2\
meas_vec_2 = [meas_1;meas_2;meas_3;meas_4;meas_5_2;meas_6_2;meas_7_2;meas_8_2;meas_9_2;meas_10_2;meas_11_2;meas_12_2]\
meas_6_2 = exp(num_6_2)./((1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-2)^3.* (exp(-(25-2)./2)).* exp(-(exp(-(25-2)./2)).* 6))))\
meas_6_temp = exp(num_6_2)./((1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-2)^3.* (exp(-(25-2)./2)).* exp(-(exp(-(25-2)./2)).* 6))))\
meas_vec_2\
meas_7_2 = exp(num_7_2)./((1+((6/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
num_7_2 = ((-1/(6+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((7./13).*((13-7)))  .*1).* ((-1/(1+2)^3) .*((6./13).*((13-6)-1)) .*2);\
meas_6_2 = exp(num_6_2)./((1+((5/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-2)^3.* (exp(-(25-2)./2)).* exp(-(exp(-(25-2)./2)).* 6))))\
meas_vec_2 = [meas_1;meas_2;meas_3;meas_4;meas_5_2;meas_6_2;meas_7_2;meas_8_2;meas_9_2;meas_10_2;meas_11_2;meas_12_2]\
exp(((1/1100)*(-170)) + (-150/800)) * exp((-280/5000)+(-150/8000))\
meas_13_2 = exp(num_13_2)./((1+((10/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 6))))\
num_13_2 =((-1/(11+2)^3) .* (((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .* ((7./13).*((13-7))) .* ((8./13).*((13-8))) .* ((9./13).*((13-9))).* ((10./13).*((13-10))) .* ((11./13).*((13-11))).* ((12./13).*((13-12))).*1) + (13)) + ((-1/(1+2)^3) .*((6./13).*((13-6)-1)) .*2);\
%-- 6/14/20, 11:27 PM --%\
1-(10-9)/0.87712\
1-((10-9)/0.87712)\
1-((10^(-05)-10^(-03))/0.87712)\
1-((10^(-05)-10^(-03))/(0.87712*10))\
1-((10^(-3)-10^(-5))/(0.87712*10))\
1-((10^(-3)-10^(-5))/(0.87712*1))\
1-((10^(-3)-10^(-5))/(0.87712*15))\
1-((10^(-3)-10^(-5))/(0.87712*0.05))\
1-((10^(-3)-10^(-5))/(0.87712*0.005))\
1-((10^(-3)-10^(-5))/(0.87712*0.015))\
1-((10^(-3)-10^(-5))/(0.675*0.015))\
qty1=1-((10^(-3)-10^(-5))/(0.87712*0.015))\
qty1=1-((10^(-3)-10^(-5))/(0.88692*0.015))\
qty1=1-((10^(-3)-10^(-5))/(0.60991*0.015))\
qty1=1-((10^(-3)-10^(-5))/(0.65924*0.015))\
qty1=1-((10^(-3)-10^(-5))/(0.87712*0.015))\
qty2=1-((10^(-3)-10^(-5))/(0.88692*0.015))\
qty3=1-((10^(-3)-10^(-5))/(0.60991*0.015))\
qty4=1-((10^(-3)-10^(-5))/(0.65924*0.015))\
vec1=[qty1 qty2]\
vec2 = [qty3 qty4]\
plot(vec1,linspace(2,1,1))\
linspace(0,2,2)\
linspace(0,2,3)\
1-(10-9)/0.87712\
ans =\
-0.1401\
1-((10-9)/0.87712)\
ans =\
-0.1401\
1-((10^(-05)-10^(-03))/0.87712)\
ans =\
1.0011\
1-((10^(-05)-10^(-03))/(0.87712*10))\
ans =\
1.0001\
1-((10^(-3)-10^(-5))/(0.87712*10))\
ans =\
0.9999\
1-((10^(-3)-10^(-5))/(0.87712*1))\
ans =\
0.9989\
1-((10^(-3)-10^(-5))/(0.87712*15))\
ans =\
0.9999\
1-((10^(-3)-10^(-5))/(0.87712*0.05))\
ans =\
0.9774\
1-((10^(-3)-10^(-5))/(0.87712*0.005))\
ans =\
0.7743\
1-((10^(-3)-10^(-5))/(0.87712*0.015))\
ans =\
0.9248\
1-((10^(-3)-10^(-5))/(0.675*0.015))\
ans =\
0.9022\
qty1=1-((10^(-3)-10^(-5))/(0.87712*0.015))\
qty1 =\
0.9248\
qty1=1-((10^(-3)-10^(-5))/(0.88692*0.015))\
qty1 =\
0.9256\
qty1=1-((10^(-3)-10^(-5))/(0.60991*0.015))\
qty1 =\
0.8918\
qty1=1-((10^(-3)-10^(-5))/(0.65924*0.015))\
qty1 =\
0.8999\
qty1=1-((10^(-3)-10^(-5))/(0.87712*0.015))\
qty1 =\
0.9248\
qty2=1-((10^(-3)-10^(-5))/(0.88692*0.015))\
qty2 =\
0.9256\
qty3=1-((10^(-3)-10^(-5))/(0.60991*0.015))\
qty3 =\
0.8918\
qty4=1-((10^(-3)-10^(-5))/(0.65924*0.015))\
qty4 =\
0.8999\
vec1=[qty1 qty2]\
vec1 =\
0.9248    0.9256\
vec2 = [qty3 qty4]\
vec2 =\
0.8918    0.8999\
plot(vec1,linspace(2,1,1))\
plot(vec1,'*','color','blue')\
plot(vec1, linspace(0,2,3),'*','color','blue')\
plot(vec1, linspace(0,2,2),'*','color','blue')\
plot(vec1, linspace(0,2,2),'*','color','blue',vec2, linspace(0,2,2),'*','color','red')\
plotter()\
linspace(0,2,3)\
plotter()\
line([vec(1),vec(2)]\
line([vec(1),vec(2)])\
line([vec1(1),vec1(2)])\
line([vec1(1),0],[vec1(2),1])\
line([vec1(1),0],[vec1(2),1],[vec1(3),2])\
plotter()\
%-- 6/29/20, 6:29 PM --%\
syms a b c x\
eqn = a * x^2 + b * x + c == 0\
S = solve(eqn)\
eqn = a * x^2 + b * x + c < 0\
S = solve(eqn)\
meas_vec_2 = [meas_1;meas_2;meas_3;meas_4;meas_5_2;meas_6_2;meas_7_2;meas_8_2;meas_9_2;meas_10_2;meas_11_2;meas_12_2]\
eqn = 0.8216 - (exp(num_8_3)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 7))))>0\
eqn = 0.8216 - (exp(num_8_3)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 7))))>0)\
eqn = 0.8216 - (exp(num_8_3)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+(((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 7)) + ((25-8)^3 .* exp(-(a-8)./2) .* (exp(-(exp(-(a-8)./2)) .* 8) )))))\
eqn = 0.8216 - (exp(num_8_3)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+(((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 7)) + ((25-8)^3 .* exp(-(a-8)./2) .* (exp(-(exp(-(a-8)./2)) .* 8) ))))))\
eqn = 0.8216 - (exp(num_8_3)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+(((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 7)) + ((25-8)^3 .* exp(-(a-8)./2) .* (exp(-(exp(-(a-8)./2)) .* 8) ))))))>0\
S = solve(eqn)\
stop\
S = solve(eqn,a)\
eqn = rewrite(eqn,'log')\
sol = solve(eqn, a , 'IgnoreAnalyticConstraints',1)\
eqn = 0.8216 - (exp(num_8_3)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+(((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 7)) + ((25-8)^3 .* exp(-(a-8)./2) .* (exp(-(exp(-(a-8)./2)) .* 8) ))))))<0\
S=solve(eqn,a)\
num_8_3 = ((-1/(7+2)^3) .* ((1./13).*((13-1))) .* ((2./13).*((13-2))).* ((3./13).*((13-3))).* ((4./13).*((13-4))) .* ((5./13).*((13-5))) .*((6./13).*((13-6))) .* ((8./13).*((13-8)))  .*1).* ((-1/(1+2)^3) .*((7./13).*((13-7)-1)) .*2);\
num_8_3\
%-- 7/3/20, 7:55 PM --%\
eqn = 0.8216 - (exp(num_8_3)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+(((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 7)) + ((25-8)^3 .* exp(-(a-8)./2) .* (exp(-(exp(-(a-8)./2)) .* 8) ))))))>0\
syms a b c x\
eqn = 0.8216 - (exp(num_8_3)./((1+((7/13) .* lambda_c .* exp(-beta .* Table_4\{JI,8\}))+(((25-4)^3.* (exp(-(25-4)./2)).* exp(-(exp(-(25-4)./2)).* 7)) + ((25-8)^3 .* exp(-(a-8)./2) .* (exp(-(exp(-(a-8)./2)) .* 8) ))))))>0\
S = solve(eqn,a)\
%-- 7/5/20, 3:29 PM --%}